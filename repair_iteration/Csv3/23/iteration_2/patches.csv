bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  int  BACKSPACE  -  1;  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  int  BACKSPACE  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    int  BACKSPACE  -  1;	  	non-compiled	[CE]  ';'  expected	104	None	add
2	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result  (BACKSPACE  -  1);  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result  (BACKSPACE  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result  (BACKSPACE  -  1);	  	non-compiled	[CE]  not  a  statement	104	None	add
3	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	104	None	add
4	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	104	None	add
5	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Collections.sort(c);  [CE]  cannot  find  symbol  Collections  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Collections.sort(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Collections.sort(c);	  	non-compiled	[CE]  cannot  find  symbol  Collections	104	None	add
6	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Pattern  pattern  =  Pattern.compile( "- ");  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Pattern  pattern  =  Pattern.compile( "- ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Pattern  pattern  =  Pattern.compile( "- ");	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
7	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Pattern  pattern  =  Pattern.compile( "n ");  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Pattern  pattern  =  Pattern.compile( "n ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Pattern  pattern  =  Pattern.compile( "n ");	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
8	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
9	[BUG]  [BUGGY]  return  c  ||  END_SURroundingSpaces!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SURroundingSpaces!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SURroundingSpaces!=  ignoreEmptyLines;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
10	[BUG]  [BUGGY]  return  END_BACKSPACE  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_BACKSPACE  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	145	None	replace
11	[BUG]  [BUGGY]  return  CR  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
12	[BUG]  [BUGGY]  return  END_STREAM  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_STREAM  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_STREAM  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_STREAM  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_STREAM	145	None	replace
13	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c!=  END_EmptyLines;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c!=  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c!=  END_EmptyLines;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
14	[BUG]  [BUGGY]  return  END_FIRST  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_FIRST  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_FIRST  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_FIRST  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_FIRST	145	None	replace
15	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
16	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
17	[BUG]  [BUGGY]  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
18	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
19	[BUG]  [BUGGY]  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
20	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
21	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
22	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
23	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
24	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
25	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  -1;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  -1;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
26	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  -1;  }  [FE]  IOException  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  -1;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  -1;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
27	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
28	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
29	[BUG]  [BUGGY]  result(c)  {  records  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	156	None	replace
30	[BUG]  [BUGGY]  c  =  BACKSPACE;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  BACKSPACE;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  BACKSPACE;  Document  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
31	[BUG]  [BUGGY]  Result  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
32	[BUG]  [BUGGY]  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
33	[BUG]  [BUGGY]  result(c)  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	156	None	replace
34	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  BACKSPACE;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  ==  return  BACKSPACE;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  not  a  statement	24	None	replace
35	[BUG]  [BUGGY]  result  =  RecordDo  not  match  expected  result  ()  ==  return  BACKSPACE;  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RecordDo  not  match  expected  result  ()  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RecordDo  not  match  expected  result  ()  ==  return  BACKSPACE;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  ';'  expected	24	None	replace
36	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  {  return  BACKSPACE;  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  {  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  {  return  BACKSPACE;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  not  a  statement	24	None	replace
37	[BUG]  [BUGGY]  record  does  not  match  expected  result  ()  ==  return  BACKSPACE;  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result  ()  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result  ()  ==  return  BACKSPACE;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  ';'  expected	24	None	replace
38	[BUG]  [BUGGY]  Result  do  not  match  expected  result  ()  ==  return  BACKSPACE;  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result  ()  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result  ()  ==  return  BACKSPACE;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  not  a  statement	24	None	replace
39	[BUG]  [BUGGY]  c  +=  1;  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  +=  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  +=  1;	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	7	None	replace
40	[BUG]  [BUGGY]  c  +=  2;  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  +=  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  +=  2;	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	7	None	replace
41	[BUG]  [BUGGY]  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpaces();	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	7	None	replace
42	[BUG]  [BUGGY]  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpaces().length;	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	7	None	replace
43	[BUG]  [BUGGY]  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEscapeSurroundingSpaces();	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	7	None	replace
44	[BUG]  [BUGGY]  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpaces().size();	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	7	None	replace
45	[BUG]  [BUGGY]  Integer  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getSurroundingSpaces();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	28	None	replace
46	[BUG]  [BUGGY]  null  c  =  getSurroundingSpaces();  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getSurroundingSpaces();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  not  a  statement	28	None	replace
47	[BUG]  [BUGGY]  c  =  getSurroundingSpaces();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getSurroundingSpaces();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	28	None	replace
48	[BUG]  [BUGGY]  char  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  getSurroundingSpaces();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	28	None	replace
49	[BUG]  [BUGGY]  return  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT;	  return    CSV_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	4	None	replace
50	[BUG]  [BUGGY]  return  FIRST_OF_STREAM;  [CE]  cannot  find  symbol  FIRST_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FIRST_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FIRST_OF_STREAM;	  return    CSV_STREAM;    	non-compiled	[CE]  cannot  find  symbol  FIRST_OF_STREAM	4	None	replace
51	[BUG]  [BUGGY]  return  FIRST_EXPR_STREAM;  [CE]  cannot  find  symbol  FIRST_EXPR_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FIRST_EXPR_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FIRST_EXPR_STREAM;	  return    CSV_STREAM;    	non-compiled	[CE]  cannot  find  symbol  FIRST_EXPR_STREAM	4	None	replace
52	[BUG]  [BUGGY]  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
53	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
54	[BUG]  [BUGGY]  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
55	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
56	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
57	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
58	[BUG]  [BUGGY]  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IOException( " ");  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
59	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IOException( " ");  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
60	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	198	8	replace
61	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	198	8	replace
62	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
63	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
64	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE;  [CE]  cannot  find  symbol  BACKSPACE  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE;	  return    CSVFormat.BACKSPACE    +    1;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	39	None	replace
65	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE  +  2;  [CE]  cannot  find  symbol  BACKSPACE  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE  +  2;	  return    CSVFormat.BACKSPACE    +    1;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	39	None	replace
66	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE  /  1;  [CE]  cannot  find  symbol  BACKSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE  /  1;	  return    CSVFormat.BACKSPACE    +    1;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	39	None	replace
67	[BUG]  [BUGGY]  return  c  &&  END_OF_STREAM  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_STREAM  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_STREAM  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    &&    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
68	[BUG]  [BUGGY]  return  c  &&  END_OF_STREAM  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_STREAM  <  =  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_STREAM  <  =  ignoreEmptyLines;	  return    END_OF_STREAM    &&    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
69	[BUG]  [BUGGY]  return  c  &&  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;	  return    END_OF_STREAM    &&    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
70	[BUG]  [BUGGY]  return  c  &&  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;	  return    END_OF_STREAM    &&    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
71	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE  +  3;  [CE]  cannot  find  symbol  BACKSPACE  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE  +  3;	  return    c    +    3;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	42	None	replace
72	[BUG]  [BUGGY]  return  c.length;  [CE]  int  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c.length;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	46	None	replace
73	[BUG]  [BUGGY]  return  NUMBER_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  NUMBER_OF_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_SURroundingSpaces.length;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_SURroundingSpaces	46	None	replace
74	[BUG]  [BUGGY]  return  RECORD_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  RECORD_OF_SURroundingSpaces  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  RECORD_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD_OF_SURroundingSpaces.length;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  cannot  find  symbol  RECORD_OF_SURroundingSpaces	46	None	replace
75	[BUG]  [BUGGY]  return  NUMBER_SURroundingSpaces.length;  [CE]  cannot  find  symbol  NUMBER_SURroundingSpaces  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_SURroundingSpaces.length;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_SURroundingSpaces	46	None	replace
76	[BUG]  [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
77	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OBJECT;  }  [CE]  cannot  find  symbol  END_OBJECT  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OBJECT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OBJECT;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	30	None	replace
78	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
79	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
80	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
81	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
82	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	30	9	replace
83	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	30	9	replace
84	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  EOF;  }  [CE]  cannot  find  symbol  EOF  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  EOF;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  EOF;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  cannot  find  symbol  EOF	30	None	replace
85	[BUG]  [BUGGY]  return  c  ||  c  >=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >=  END_OF_STREAM;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	193	None	replace
86	[BUG]  [BUGGY]  return  c  ||  c!=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c!=  END_OF_STREAM;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	193	None	replace
87	[BUG]  [BUGGY]  return  c  ||  c  ==  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_OF_STREAM;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	193	None	replace
88	[BUG]  [BUGGY]  return  c  ||  c  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >=  ignoreEmptyLines;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	193	None	replace
89	[BUG]  [BUGGY]  return  c  ||  c!=  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c!=  ignoreEmptyLines;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	193	None	replace
90	[BUG]  [BUGGY]  return  c  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c!=  END_OF_SURroundingSpaces;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	193	None	replace
91	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_CRC;  [CE]  cannot  find  symbol  END_OF_CRC  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_CRC;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_CRC;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_CRC	131	None	replace
92	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  END_OF_STREAM;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	131	None	replace
93	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_CRATED;  [CE]  cannot  find  symbol  END_OF_CRATED  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_CRATED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_CRATED;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_CRATED	131	None	replace
94	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_CRACE;  [CE]  cannot  find  symbol  END_OF_CRACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_CRACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_CRACE;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_CRACE	131	None	replace
95	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
96	[BUG]  [BUGGY]  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result(c)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result(c)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
97	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(b)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(b)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(b)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
98	[BUG]  [BUGGY]  Result  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(c)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
99	[BUG]  [BUGGY]  Record  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(c)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
100	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
101	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  Record.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
102	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines!=  END_OF_STREAM;  [CE]  incomparable  types:  boolean  and  int  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines!=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  incomparable  types:  boolean  and  int	18	None	replace
103	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
104	[BUG]  [BUGGY]  return  c  ||  ignoreSurroundingSpaces!=  END_OF_STREAM;  [CE]  incomparable  types:  boolean  and  int  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreSurroundingSpaces!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreSurroundingSpaces!=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  incomparable  types:  boolean  and  int	18	None	replace
105	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  >>  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  >>  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  >>  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	18	None	replace
106	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_STREAM!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_STREAM!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_STREAM!=  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
107	[BUG]  [BUGGY]  return  CSVFormat.END_OBJECT  +  1;  [CE]  cannot  find  symbol  END_OBJECT  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OBJECT  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OBJECT  +  1;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	40	None	replace
108	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  +  2;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  +  2;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	40	None	replace
109	[BUG]  [BUGGY]  return  CSVFormat.END_FONT  +  1;  [CE]  cannot  find  symbol  END_FONT  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_FONT  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_FONT  +  1;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_FONT	40	None	replace
110	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	14	None	replace
111	[BUG]  [BUGGY]  return  c  &&  END_OF_STREAM!=  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_STREAM!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_STREAM!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	14	None	replace
112	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  ignoreSurroundingSpaces;  [CE]  incomparable  types:  int  and  boolean  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  ignoreSurroundingSpaces;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	14	None	replace
113	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM!=  ignoreSurroundingSpaces;  [CE]  incomparable  types:  int  and  boolean  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM!=  ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM!=  ignoreSurroundingSpaces;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	14	None	replace
114	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  +  2;	  return    c    +    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	38	8	replace
115	[BUG]  [BUGGY]  return  BACKSPACE  +  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  +  2;	  return    c    +    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	38	8	replace
116	[BUG]  [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	98	None	add
117	[BUG]  [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	98	None	add
118	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	98	None	add
119	[BUG]  [BUGGY]  return  TAB  +  1;  int  TAB  +  1;  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  int  TAB  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    int  TAB  +  1;	  	non-compiled	[CE]  ';'  expected	98	None	add
120	[BUG]  [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	98	None	add
121	[BUG]  [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	98	None	add
122	[BUG]  [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	98	None	add
123	[BUG]  [BUGGY]  return  TAB  +  1;  Collections.sort(c);  [CE]  cannot  find  symbol  Collections  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Collections.sort(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Collections.sort(c);	  	non-compiled	[CE]  cannot  find  symbol  Collections	98	None	add
124	[BUG]  [BUGGY]  return  c!=  END_OF_STREAM;  [CE]  incompatible  types  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  END_OF_STREAM;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	190	None	replace
125	[BUG]  [BUGGY]  return  c  >=  END_OF_STREAM;  [CE]  incompatible  types  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_STREAM;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	190	None	replace
126	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  >>  END_OF_STREAM;	  return    c    >>    END_OF_SURroundingSpaces;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	190	9	replace
127	[BUG]  [BUGGY]  return  c  >>  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  END_OF_STREAM;	  return    c    >>    END_OF_SURroundingSpaces;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	190	9	replace
128	[BUG]  [BUGGY]  return  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  END_OF_SURroundingSpaces;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	190	None	replace
129	[BUG]  [BUGGY]  return  c  ==  END_OF_STREAM;  [CE]  incompatible  types  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  END_OF_STREAM;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	190	None	replace
130	[BUG]  [BUGGY]  return  END_BACKSPACE  +  1;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_BACKSPACE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  +  1;	  return    END_OF_STREAM    +    1;    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	152	None	replace
131	[BUG]  [BUGGY]  return  END_OBJECT_STREAM  +  1;  [CE]  cannot  find  symbol  END_OBJECT_STREAM  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT_STREAM  +  1;	  return    END_OF_STREAM    +    1;    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT_STREAM	152	None	replace
132	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c,  commmentStart);  [CE]  no  suitable  constructor  found  for  IOException(String,int,char)  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c,  commmentStart);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c,  commmentStart);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int,char)	66	None	replace
133	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ",  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	66	None	replace
134	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	66	None	replace
135	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence "  +  c);  [CE]  duplicate  case  label  [FE]                    IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence "  +  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence "  +  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  duplicate  case  label	66	None	replace
136	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                      IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ",  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	66	None	replace
137	[BUG]  [BUGGY]  return  CSV_SURRUING;  [CE]  cannot  find  symbol  CSV_SURRUING  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SURRUING;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  CSV_SURRUING	123	None	replace
138	[BUG]  [BUGGY]  return  CSVFormat.END_SURRUING;  [CE]  cannot  find  symbol  END_SURRUING  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURRUING;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  END_SURRUING	123	None	replace
139	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURRUING;  [CE]  cannot  find  symbol  END_OF_SURRUING  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURRUING;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING	123	None	replace
140	[BUG]  [BUGGY]  return  FIRST_EXPR_SURRUING;  [CE]  cannot  find  symbol  FIRST_EXPR_SURRUING  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FIRST_EXPR_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FIRST_EXPR_SURRUING;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  FIRST_EXPR_SURRUING	123	None	replace
141	[BUG]  [BUGGY]  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
142	[BUG]  [BUGGY]  Record  do  not  match  expected  result(true)  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(true)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(true)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
143	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
144	[BUG]  [BUGGY]  record  does  not  match  expected  result(false)  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  ';'  expected	161	None	replace
145	[BUG]  [BUGGY]  result  =  RecordDo  not  match  expected  result(false)  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RecordDo  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RecordDo  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  ';'  expected	161	None	replace
146	[BUG]  [BUGGY]  Result  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
147	[BUG]  [BUGGY]  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	138	None	replace
148	[BUG]  [BUGGY]  Integer  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	138	None	replace
149	[BUG]  [BUGGY]  c  =  getCurrentIndex();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	138	None	replace
150	[BUG]  [BUGGY]  null  c  =  getCurrentIndex();  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  not  a  statement	138	None	replace
151	[BUG]  [BUGGY]  Integer  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getSurroundingSpaces().length;	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	23	None	replace
152	[BUG]  [BUGGY]  c  =  getSurroundingSpaces().length;  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getSurroundingSpaces().length;	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	23	None	replace
153	[BUG]  [BUGGY]  null  c  =  getSurroundingSpaces().length;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getSurroundingSpaces().length;	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  not  a  statement	23	None	replace
154	[BUG]  [BUGGY]  int  c  =  getSurroundingSpaces().length  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpaces().length  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpaces().length  +  1;	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	23	None	replace
155	[BUG]  [BUGGY]  int  c  =  getEmptyLines().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEmptyLines().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEmptyLines().length;	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	23	None	replace
156	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  >=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c  >=  ignoreEmptyLines;	  return    ENDSPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	113	None	replace
157	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  >=  ignoreEmptyLines;	  return    ENDSPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	113	None	replace
158	[BUG]  [BUGGY]  return  c.intValue()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c.intValue()  +  1;	  return    c.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
159	[BUG]  [BUGGY]  return  c.intValue()  +  2;  [CE]  int  cannot  be  dereferenced  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c.intValue()  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c.intValue()  +  2;	  return    c.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
160	[BUG]  [BUGGY]  return  c.intValue()  *  2;  [CE]  int  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c.intValue()  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c.intValue()  *  2;	  return    c.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	81	None	replace
161	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
162	[BUG]  [BUGGY]  return  c  |  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
163	[BUG]  [BUGGY]  return  END_OF_STREAM  |  NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  |  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  |  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	148	None	replace
164	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
165	[BUG]  [BUGGY]  return  BACKSPACE  |  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
166	[BUG]  [BUGGY]  return  END_SPACE  |  END_OF_STREAM;  [CE]  cannot  find  symbol  END_SPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	148	None	replace
167	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  CR  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
168	[BUG]  [BUGGY]  return  CR  |  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
169	[BUG]  [BUGGY]  return  END_OF_STREAM  |  NUMBER_SURroundingSpaces;  [CE]  cannot  find  symbol  NUMBER_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  |  NUMBER_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  |  NUMBER_SURroundingSpaces;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_SURroundingSpaces	148	None	replace
170	[BUG]  [BUGGY]  return  END_OF_STREAM  |  NUMBER_EXPR_STREAM;  [CE]  cannot  find  symbol  NUMBER_EXPR_STREAM  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  |  NUMBER_EXPR_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  |  NUMBER_EXPR_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_EXPR_STREAM	148	None	replace
171	[BUG]  [BUGGY]  return  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  END_OF_SURroundingSpaces;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	192	None	replace
172	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  >  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  >  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  ||  c  >  END_OF_SURroundingSpaces;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
173	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  +  1;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  +  1;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
174	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  >  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  ||  c  >  END_OF_STREAM;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
175	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  +  1;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
176	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  +  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  +  2;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
177	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  c  +  1;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  c  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  c  +  1;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	75	None	replace
178	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  +  3;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  +  3;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
179	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM  +  1;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
180	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  CR  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  CR  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  CR  +  1;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
181	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	194	None	replace
182	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	194	None	replace
183	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	194	None	replace
184	[BUG]  [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	194	None	replace
185	[BUG]  [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	194	None	replace
186	[BUG]  [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	194	None	replace
187	[BUG]  [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	194	None	replace
188	[BUG]  [BUGGY]  return  CSVFormat.END_STREAM;  [CE]  cannot  find  symbol  END_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_STREAM;	  return    CSVFormat.END_SPACE;    	non-compiled	[CE]  cannot  find  symbol  END_STREAM	128	None	replace
189	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  2;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	134	None	replace
190	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  4;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  4;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	134	None	replace
191	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  1L;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  1L;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	134	None	replace
192	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  3;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  3;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	134	None	replace
193	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  END_OF_STREAM  +  1;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	134	None	replace
194	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  *  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  *  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  *  1;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	134	None	replace
195	[BUG]  [BUGGY]  return  c  ||  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_OF_BACKSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_BACKSPACE	132	None	replace
196	[BUG]  [BUGGY]  return  CR  ||  CR;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  CR;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	132	None	replace
197	[BUG]  [BUGGY]  return  END_BACKSPACE  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_BACKSPACE  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	132	None	replace
198	[BUG]  [BUGGY]  return  END_OBJECT  ||  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	132	None	replace
199	[BUG]  [BUGGY]  return  TAB  ||  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_OF_BACKSPACE  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_BACKSPACE	132	None	replace
200	[BUG]  [BUGGY]  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
201	[BUG]  [BUGGY]  record  does  not  match  expected  result(c)  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	154	None	replace
202	[BUG]  [BUGGY]  Result  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
203	[BUG]  [BUGGY]  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
204	[BUG]  [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  Record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
205	[BUG]  [BUGGY]  record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
206	[BUG]  [BUGGY]  return  c  ||  NUMBER_OF_STREAM  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  NUMBER_OF_STREAM  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  NUMBER_OF_STREAM  <  =  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
207	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  &&  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  &&  c  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  &&  c  <  =  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
208	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  ||  c  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  ||  c  ==  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	167	None	replace
209	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  <  =  NUMBER_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  <  =  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  <  =  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
210	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  <  =  NUMBER_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  <  =  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  <  =  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
211	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  ||  c!=  END_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  ||  c!=  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	167	None	replace
212	[BUG]  [BUGGY]  return  c  ||  c  <  =  NUMBER_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  <  =  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  <  =  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
213	[BUG]  [BUGGY]  int  _escapeChar  =  _escapeChar.intValue();  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  _escapeChar  =  _escapeChar.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  _escapeChar  =  _escapeChar.intValue();	  return    _escapeChar.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	186	None	replace
214	[BUG]  [BUGGY]  return  _escape.intValue();  [CE]  cannot  find  symbol  _escape  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  _escape.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  _escape.intValue();	  return    _escapeChar.intValue();    	non-compiled	[CE]  cannot  find  symbol  _escape	186	None	replace
215	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  +  1;  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  +  1;	  	non-compiled	[CE]  ';'  expected	35	None	add
216	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  Integer.parseInt(c);  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  Integer.parseInt(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  Integer.parseInt(c);	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	35	None	add
217	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  Integer.MAX_VALUE;  [CE]  unreachable  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  unreachable  statement	35	None	add
218	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpaces().size();  [CE]  cannot  find  symbol  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
219	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  getSurroundingSpaces();	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
220	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpace(c);  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpace(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  getSurroundingSpace(c);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
221	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  Integer.toHexString(c);  [CE]  incompatible  types  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  Integer.toHexString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  Integer.toHexString(c);	  	non-compiled	[CE]  incompatible  types	35	None	add
222	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpaces().length;  [CE]  cannot  find  symbol  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  BACKSPACE  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  BACKSPACE  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
223	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	141	None	replace
224	[BUG]  [BUGGY]  return  c  ||  END_EmptyLines!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_EmptyLines!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_EmptyLines!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	141	None	replace
225	[BUG]  [BUGGY]  return  c  ||  CR!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  CR!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  CR!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	141	None	replace
226	[BUG]  [BUGGY]  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	183	None	replace
227	[BUG]  [BUGGY]  Integer  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	183	None	replace
228	[BUG]  [BUGGY]  c  =  getSurroundingSpace();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	183	None	replace
229	[BUG]  [BUGGY]  null  c  =  getSurroundingSpace();  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  not  a  statement	183	None	replace
230	[BUG]  [BUGGY]  double  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  double  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	double  c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	183	None	replace
231	[BUG]  [BUGGY]  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEscapeSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	53	None	replace
232	[BUG]  [BUGGY]  Integer  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getEscapeSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	53	None	replace
233	[BUG]  [BUGGY]  null  c  =  getEscapeSurroundingSpaces().size();  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getEscapeSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  not  a  statement	53	None	replace
234	[BUG]  [BUGGY]  c  =  getEscapeSurroundingSpaces().size();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getEscapeSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	53	None	replace
235	[BUG]  [BUGGY]  resultDone(c)  {  records  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  resultDone(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	resultDone(c)  {  records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	162	None	replace
236	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
237	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
238	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OBJECT;  }  [CE]  cannot  find  symbol  END_OBJECT  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OBJECT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OBJECT;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	33	None	replace
239	[BUG]  [BUGGY]  [FE]  IOException  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
240	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
241	[BUG]  [BUGGY]  [FE]  IOException  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
242	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
243	[BUG]  [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
244	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	33	9	replace
245	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	33	9	replace
246	[BUG]  [BUGGY]  [FE]  IOException  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  TAB;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
247	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  TAB;  }  [FE]  IOException  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  TAB;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	33	9	replace
248	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
249	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
250	[BUG]  [BUGGY]  return  CSVFormat.END_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	206	None	replace
251	[BUG]  [BUGGY]  return  c  ||  ignoreSurroundingSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreSurroundingSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreSurroundingSpaces  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
252	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
253	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
254	[BUG]  [BUGGY]  char  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  getSurroundingSpace();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	178	None	replace
255	[BUG]  [BUGGY]  Enum.int  c  =  getSurroundingSpace();  [CE]  <identifier>  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Enum.int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Enum.int  c  =  getSurroundingSpace();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  <identifier>  expected	178	None	replace
256	[BUG]  [BUGGY]  return  c  <  END_OF_STREAM;  [CE]  incompatible  types  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_STREAM;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	189	None	replace
257	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  >  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  >  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces  ||  c  >  END_OF_SURroundingSpaces;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	189	None	replace
258	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces  +  1;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	189	None	replace
259	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces  ||  c  >  END_OF_STREAM;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	189	None	replace
260	[BUG]  [BUGGY]  return  c  <  this.ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  this.ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  this.ignoreEmptyLines;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	189	None	replace
261	[BUG]  [BUGGY]  int  c  =  getErrorSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getErrorSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getErrorSurroundingSpace();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	171	None	replace
262	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  TAB;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	25	None	replace
263	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  AB;  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  AB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  ==  return  AB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	25	None	replace
264	[BUG]  [BUGGY]  result  =  RecordDo  not  match  expected  result  ()  ==  return  TAB;  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RecordDo  not  match  expected  result  ()  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RecordDo  not  match  expected  result  ()  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  ';'  expected	25	None	replace
265	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  CR;  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  ==  return  CR;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	25	None	replace
266	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	25	None	replace
267	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	replace
268	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  >=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  >=  END_OF_STREAM;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	replace
269	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	87	None	replace
270	[BUG]  [BUGGY]  return  BACKSPACE  ||  c  ==  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c  ==  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	103	None	replace
271	[BUG]  [BUGGY]  return  BACKSPACE  &&  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  &&  c  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  &&  c  <  =  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
272	[BUG]  [BUGGY]  return  BACKSPACE  ||  c!=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c!=  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	103	None	replace
273	[BUG]  [BUGGY]  return  c  ||  BACKSPACE  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  BACKSPACE  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  BACKSPACE  <  =  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
274	[BUG]  [BUGGY]  return  BACKSPACE  ||  c  >=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c  >=  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	103	None	replace
275	[BUG]  [BUGGY]  ||  c  ==  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  c  ==  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
276	[BUG]  [BUGGY]  return  BACKSPACE  ||  c  <  =  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  c  <  =  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c  <  =  END_OF_STREAM  +  1;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
277	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_BACKSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	108	None	replace
278	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_BACKSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	108	None	replace
279	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	204	None	replace
280	[BUG]  [BUGGY]  return  CR  ||  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	204	None	replace
281	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	204	None	replace
282	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines.length;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines.length;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	204	None	replace
283	[BUG]  [BUGGY]  return  END_OF_SURroundINGSpaces  ||  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundINGSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundINGSpaces  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundINGSpaces  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundINGSpaces	204	None	replace
284	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  +  1;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	204	None	replace
285	[BUG]  [BUGGY]  Integer  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getEscapeSurroundingSpaces();	  return    BACKSPACE;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	157	None	replace
286	[BUG]  [BUGGY]  c  =  getEscapeSurroundingSpaces();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getEscapeSurroundingSpaces();	  return    BACKSPACE;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	157	None	replace
287	[BUG]  [BUGGY]  null  c  =  getEscapeSurroundingSpaces();  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getEscapeSurroundingSpaces();	  return    BACKSPACE;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  not  a  statement	157	None	replace
288	[BUG]  [BUGGY]  double  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  double  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	double  c  =  getEscapeSurroundingSpaces();	  return    BACKSPACE;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	157	None	replace
289	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  break  c;  [CE]  undefined  label:  c  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
290	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  duplicate  case  label	125	None	replace
291	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  break  c;  [CE]  undefined  label:  c  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
292	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  /  1;	  return    BACKSPACE    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	105	8	replace
293	[BUG]  [BUGGY]  return  BACKSPACE  /  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  /  1;	  return    BACKSPACE    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	105	8	replace
294	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  -  1;	  return    BACKSPACE    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	105	9	replace
295	[BUG]  [BUGGY]  return  c  -  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  -  1;	  return    BACKSPACE    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	105	9	replace
296	[BUG]  [BUGGY]  return  BACKSPACE  ||  BACKSPACE  -  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  BACKSPACE  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  BACKSPACE  -  1;	  return    BACKSPACE    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	105	None	replace
297	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  -  2;	  return    BACKSPACE    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	105	9	replace
298	[BUG]  [BUGGY]  return  BACKSPACE  -  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  -  2;	  return    BACKSPACE    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	105	9	replace
299	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1);  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  1);	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  ';'  expected	110	None	replace
300	[BUG]  [BUGGY]  return  DELETE_OF_STREAM  +  1L;  [CE]  cannot  find  symbol  DELETE_OF_STREAM  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DELETE_OF_STREAM  +  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DELETE_OF_STREAM  +  1L;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  cannot  find  symbol  DELETE_OF_STREAM	110	None	replace
301	[BUG]  [BUGGY]  return  END_OF_STREAM  +  10.0;  [CE]  possible  loss  of  precision  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  10.0;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  10.0;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	110	None	replace
302	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  128;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  END_OF_STREAM  +  128;	  return    END_OF_STREAM    +    1L;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	110	9	replace
303	[BUG]  [BUGGY]  return  END_OF_STREAM  +  128;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  128;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  128;	  return    END_OF_STREAM    +    1L;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	110	9	replace
304	[BUG]  [BUGGY]  return  JSON_OF_STREAM  +  1L;  [CE]  cannot  find  symbol  JSON_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JSON_OF_STREAM  +  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JSON_OF_STREAM  +  1L;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  cannot  find  symbol  JSON_OF_STREAM	110	None	replace
305	[BUG]  [BUGGY]  return  DISABLED  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	77	None	replace
306	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  DISABLED  |  END_OF_STREAM;	  return    END_OF_STREAM    ||    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	77	9	replace
307	[BUG]  [BUGGY]  return  DISABLED  |  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  |  END_OF_STREAM;	  return    END_OF_STREAM    ||    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	77	9	replace
308	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DISABLED  ||  commmentStart;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DISABLED  ||  commmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DISABLED  ||  commmentStart;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	77	None	replace
309	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DISABLED  |  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DISABLED  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DISABLED  |  1;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	77	None	replace
310	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DISABLED,  commmentStart;  [CE]  ';'  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DISABLED,  commmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DISABLED,  commmentStart;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  ';'  expected	77	None	replace
311	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  DISABLED;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	77	None	replace
312	[BUG]  [BUGGY]  int  escape  =  escape.intValue();  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  escape  =  escape.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  escape  =  escape.intValue();	  return    escape.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	149	None	replace
313	[BUG]  [BUGGY]  int  c  =  escape.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  escape.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  escape.intValue();	  return    escape.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	149	None	replace
314	[BUG]  [BUGGY]  char  escaped  =  escape.intValue();  [CE]  char  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  escaped  =  escape.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  escaped  =  escape.intValue();	  return    escape.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	149	None	replace
315	[BUG]  [BUGGY]  return  delimiter.intValue();  [CE]  char  cannot  be  dereferenced  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  delimiter.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  delimiter.intValue();	  return    escape.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	149	None	replace
316	[BUG]  [BUGGY]  return  escape.intValue()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  escape.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  escape.intValue()  +  1;	  return    escape.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	149	None	replace
317	[BUG]  [BUGGY]  return  COMMENT_SURroundingSpaces;  [CE]  cannot  find  symbol  COMMENT_SURroundingSpaces  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  COMMENT_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  COMMENT_SURroundingSpaces;	  return    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_SURroundingSpaces	121	None	replace
318	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  commmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  commmentStart;	  return    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	121	9	replace
319	[BUG]  [BUGGY]  return  commmentStart;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  commmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  commmentStart;	  return    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	121	9	replace
320	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  DISABLED;	  return    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	121	None	replace
321	[BUG]  [BUGGY]  return  DISABLED  ||  commmentStart;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  commmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  commmentStart;	  return    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	121	None	replace
322	[BUG]  [BUGGY]  Enum.int  c  =  getSurroundingSpaces();  [CE]  <identifier>  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Enum.int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Enum.int  c  =  getSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
323	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  +  c;	  return    BACKSPACE    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	36	9	replace
324	[BUG]  [BUGGY]  return  BACKSPACE  +  c;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  +  c;	  return    BACKSPACE    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	36	9	replace
325	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
326	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [CE]  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
327	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [CE]  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
328	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  [CE]  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
329	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  BACKSPACE;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  return  BACKSPACE;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
330	[BUG]  [BUGGY]  result  |=  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
331	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
332	[BUG]  [BUGGY]  result  |=  BACKSPACE;  Document  do  not  match  expected  result(entry)  {  return  TAB;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  BACKSPACE;  Document  do  not  match  expected  result(entry)  {  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  BACKSPACE;  Document  do  not  match  expected  result(entry)  {  return  TAB;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
333	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  END;  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  return  END;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
334	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  c;  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  return  c;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
335	[BUG]  [BUGGY]  return  CSVFormat.START_BACKSPACE;  [CE]  cannot  find  symbol  START_BACKSPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.START_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START_BACKSPACE;	  return    CSVFormat.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_BACKSPACE	97	None	replace
336	[BUG]  [BUGGY]  return  CSVFormat.START_OBJECT  +  1;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.START_OBJECT  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START_OBJECT  +  1;	  return    CSVFormat.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	97	None	replace
337	[BUG]  [BUGGY]  return  CSVFormat.START_STREAM;  [CE]  cannot  find  symbol  START_STREAM  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.START_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START_STREAM;	  return    CSVFormat.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_STREAM	97	None	replace
338	[BUG]  [BUGGY]  double  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  double  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	double  c  =  getSurroundingSpaces();	  return    c    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	8	None	replace
339	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  break;  [CE]  duplicate  case  label  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
340	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  break;  [CE]  duplicate  case  label  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
341	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  break;  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	65	None	replace
342	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  break;  [CE]  duplicate  case  label  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
343	[BUG]  [BUGGY]  return  c  +  2;  c  +  2;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  c  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    c  +  2;	  	non-compiled	[CE]  not  a  statement	37	None	add
344	[BUG]  [BUGGY]  return  c  +  2;  int  c  +  2;  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  +  2;	  	non-compiled	[CE]  ';'  expected	37	None	add
345	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
346	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
347	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
348	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
349	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpaces(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
350	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
351	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  *  2;	  return    CSVFormat.END_OF_STREAM    *    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	185	9	replace
352	[BUG]  [BUGGY]  return  c  *  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  *  2;	  return    CSVFormat.END_OF_STREAM    *    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	185	9	replace
353	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  END_OF_STREAM  *  2;	  return    CSVFormat.END_OF_STREAM    *    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	185	9	replace
354	[BUG]  [BUGGY]  return  END_OF_STREAM  *  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  *  2;	  return    CSVFormat.END_OF_STREAM    *    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	185	9	replace
355	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  /  2;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  /  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  /  2;	  return    CSVFormat.END_OF_STREAM    *    2;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	185	None	replace
356	[BUG]  [BUGGY]  return  CSVFormat.END_OBJECT_STREAM;  [CE]  cannot  find  symbol  END_OBJECT_STREAM  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OBJECT_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OBJECT_STREAM;	  return    CSVFormat.END_OF_STREAM    *    2;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT_STREAM	185	None	replace
357	[BUG]  [BUGGY]  return  CSVFormat.END_OBJECT_FACTOR;  [CE]  cannot  find  symbol  END_OBJECT_FACTOR  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OBJECT_FACTOR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OBJECT_FACTOR;	  return    CSVFormat.END_OF_STREAM    *    2;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT_FACTOR	185	None	replace
358	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	209	None	replace
359	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_BACKSPACE;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	209	None	replace
360	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  END_EmptyLines;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	209	None	replace
361	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  DISABLED;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	209	None	replace
362	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_EmptyLines;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	209	None	replace
363	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SCRIPT;  [CE]  cannot  find  symbol  END_SCRIPT  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_SCRIPT;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_SCRIPT	209	None	replace
364	[BUG]  [BUGGY]  return  escape  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  escape  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  escape  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    escape;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	179	None	replace
365	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  escapeSurroundingSpaces;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  escapeSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  escapeSurroundingSpaces;	  return    END_OF_STREAM    ||    escape;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	179	None	replace
366	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  escape;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  escape;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  escape;	  return    END_OF_STREAM    ||    escape;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	179	None	replace
367	[BUG]  [BUGGY]  return  c  ||  escape;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  escape;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  escape;	  return    END_OF_STREAM    ||    escape;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	179	None	replace
368	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c!=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	17	None	replace
369	[BUG]  [BUGGY]  return  END_BACKSPACE  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_BACKSPACE  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  ||  c!=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	17	None	replace
370	[BUG]  [BUGGY]  return  END_STREAM  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_STREAM  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_STREAM  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_STREAM  ||  c!=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_STREAM	17	None	replace
371	[BUG]  [BUGGY]  return  CSVFormat.END_BACKSPACE  +  1;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_BACKSPACE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_BACKSPACE  +  1;	  return    CSVFormat.END_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	95	None	replace
372	[BUG]  [BUGGY]  return  END_OF_SURRUARY  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRUARY  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRUARY  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUARY  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUARY	205	None	replace
373	[BUG]  [BUGGY]  return  c  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRUARY  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUARY	205	None	replace
374	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRUARY  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUARY	205	None	replace
375	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_STREAM;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	205	None	replace
376	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_EmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_EmptyLines;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	205	None	replace
377	[BUG]  [BUGGY]  return  END_SURRUARY  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_SURRUARY  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURRUARY  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURRUARY  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_SURRUARY	205	None	replace
378	[BUG]  [BUGGY]  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
379	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
380	[BUG]  [BUGGY]  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
381	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
382	[BUG]  [BUGGY]  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
383	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
384	[BUG]  [BUGGY]  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
385	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
386	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
387	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
388	[BUG]  [BUGGY]  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
389	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
390	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  BACKSPACE;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  return  BACKSPACE;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
391	[BUG]  [BUGGY]  result(c)  ==  return  BACKSPACE;  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result(c)  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result(c)  ==  return  BACKSPACE;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
392	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  END_OF_STREAM;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  return  END_OF_STREAM;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
393	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  END;  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  return  END;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
394	[BUG]  [BUGGY]  result  |=  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
395	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  TAB;  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  return  TAB;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
396	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  >>  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  >>  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  >>  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	111	None	replace
397	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	111	None	replace
398	[BUG]  [BUGGY]  result  |=  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	200	None	replace
399	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry)  ==  return  BACKSPACE;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry)  ==  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry)  ==  return  BACKSPACE;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	200	None	replace
400	[BUG]  [BUGGY]  result  =  RecordDo  not  match  expected  result(entry)  ==  return  TAB;  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RecordDo  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RecordDo  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  ';'  expected	200	None	replace
401	[BUG]  [BUGGY]  result  |=  BACKSPACE;  Record  do  not  match  expected  result(entry)  {  return  TAB;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  BACKSPACE;  Record  do  not  match  expected  result(entry)  {  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  BACKSPACE;  Record  do  not  match  expected  result(entry)  {  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	200	None	replace
402	[BUG]  [BUGGY]  result  =  Record.do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  <identifier>  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.do  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  <identifier>  expected	200	None	replace
403	[BUG]  [BUGGY]  return  c  ||  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  DISABLED;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	208	None	replace
404	[BUG]  [BUGGY]  return  c  ||  c  ==  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  ignoreEmptyLines;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	208	None	replace
405	[BUG]  [BUGGY]  return  c  ||  c  ==  RECORD;  [CE]  cannot  find  symbol  RECORD  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  RECORD;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  RECORD;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  RECORD	208	None	replace
406	[BUG]  [BUGGY]  return  c  ||  c  ==  CR;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  CR;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	208	None	replace
407	[BUG]  [BUGGY]  return  c  ||  c  ==  END_OF_STREAMS;  [CE]  cannot  find  symbol  END_OF_STREAMS  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_OF_STREAMS;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_OF_STREAMS;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAMS	208	None	replace
408	[BUG]  [BUGGY]  char  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  getEscapeSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	51	None	replace
409	[BUG]  [BUGGY]  return  CSVFormat.byteValue();  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.byteValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.byteValue();	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
410	[BUG]  [BUGGY]  return  format.intValue();  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  format.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  format.intValue();	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
411	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE.intValue();  [CE]  cannot  find  symbol  BACKSPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE.intValue();	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	84	None	replace
412	[BUG]  [BUGGY]  return  CSVFormat.floatValue();  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.floatValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.floatValue();	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
413	[BUG]  [BUGGY]  result  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	55	None	replace
414	[BUG]  [BUGGY]  result  =  END_OF_STREAM  +  1;  record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  +  1;  record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  +  1;  record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	55	None	replace
415	[BUG]  [BUGGY]  result  =  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  cannot  find  symbol  result	55	None	replace
416	[BUG]  [BUGGY]  return  END_EmptyLines  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_EmptyLines  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_EmptyLines  ||  c!=  END_SURroundingSpaces;	  return    ENDSPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	143	None	replace
417	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c!=  ignoreEmptyLines;	  return    ENDSPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	143	None	replace
418	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM.length;	  return    END_OF_STREAM    ||    c.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
419	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c.length  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c.length  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c.length  +  1;	  return    END_OF_STREAM    ||    c.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
420	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c.length  +  2;  [CE]  int  cannot  be  dereferenced  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c.length  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c.length  +  2;	  return    END_OF_STREAM    ||    c.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
421	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c.length();  [CE]  int  cannot  be  dereferenced  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c.length();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c.length();	  return    END_OF_STREAM    ||    c.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
422	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c.length  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c.length  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c.length  -  1;	  return    END_OF_STREAM    ||    c.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
423	[BUG]  [BUGGY]  return  CSVFormat.END  +  1;  [CE]  cannot  find  symbol  END  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END  +  1;	  return    CSVFormat.END;    	non-compiled	[CE]  cannot  find  symbol  END	130	None	replace
424	[BUG]  [BUGGY]  return  CSVFormat.START;  [CE]  cannot  find  symbol  START  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.START;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START;	  return    CSVFormat.END;    	non-compiled	[CE]  cannot  find  symbol  START	130	None	replace
425	[BUG]  [BUGGY]  return  CSV_NUMBER_OF_STREAM  +  1;  [CE]  cannot  find  symbol  CSV_NUMBER_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_NUMBER_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_NUMBER_OF_STREAM  +  1;	  return    CSV_NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV_NUMBER_OF_STREAM	48	None	replace
426	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  LF;	  return    CR;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	92	8	replace
427	[BUG]  [BUGGY]  return  LF;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  LF;	  return    CR;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	92	8	replace
428	[BUG]  [BUGGY]  return  FIRST;  [CE]  cannot  find  symbol  FIRST  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FIRST;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FIRST;	  return    CR;    	non-compiled	[CE]  cannot  find  symbol  FIRST	92	None	replace
429	[BUG]  [BUGGY]  return  FIRST_OCCURRENCE;  [CE]  cannot  find  symbol  FIRST_OCCURRENCE  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FIRST_OCCURRENCE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FIRST_OCCURRENCE;	  return    CR;    	non-compiled	[CE]  cannot  find  symbol  FIRST_OCCURRENCE	92	None	replace
430	[BUG]  [BUGGY]  return  FIRST_EXPECTED;  [CE]  cannot  find  symbol  FIRST_EXPECTED  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FIRST_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FIRST_EXPECTED;	  return    CR;    	non-compiled	[CE]  cannot  find  symbol  FIRST_EXPECTED	92	None	replace
431	[BUG]  [BUGGY]  case  END_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  cannot  find  symbol  END_SECOND  [FE]        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END_SECOND	124	None	replace
432	[BUG]  [BUGGY]  case  END_F_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  cannot  find  symbol  END_F_SECOND  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_F_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_F_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END_F_SECOND	124	None	replace
433	[BUG]  [BUGGY]  case  END_OBJECT:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  cannot  find  symbol  END_OBJECT  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OBJECT:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OBJECT:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	124	None	replace
434	[BUG]  [BUGGY]  Case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	124	None	replace
435	[BUG]  [BUGGY]  case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  cannot  find  symbol  END_OF_SECOND  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_SECOND:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END_OF_SECOND	124	None	replace
436	[BUG]  [BUGGY]  return  CR  ||  c  ==  LF;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  LF;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	59	None	replace
437	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_OF_STREAM;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	59	None	replace
438	[BUG]  [BUGGY]  return  CR  ||  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  DISABLED;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	59	None	replace
439	[BUG]  [BUGGY]  return  CR  ||  c  ==  DElimiter;  [CE]  cannot  find  symbol  DElimiter  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  DElimiter;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  DElimiter;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  DElimiter	59	None	replace
440	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_OF_STREAMS;  [CE]  cannot  find  symbol  END_OF_STREAMS  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_OF_STREAMS;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_OF_STREAMS;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAMS	59	None	replace
441	[BUG]  [BUGGY]  return  CR  ||  c  ==  RECORD;  [CE]  cannot  find  symbol  RECORD  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  RECORD;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  RECORD;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  RECORD	59	None	replace
442	[BUG]  [BUGGY]  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEscapeChar();	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	139	None	replace
443	[BUG]  [BUGGY]  Integer  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getEscapeChar();	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	139	None	replace
444	[BUG]  [BUGGY]  char  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  getEscapeChar();	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	139	None	replace
445	[BUG]  [BUGGY]  c  =  getEscapeChar();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getEscapeChar();	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	139	None	replace
446	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	89	None	replace
447	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  >>  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  >>  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  >>  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	89	None	replace
448	[BUG]  [BUGGY]  return  c  ||  c  >  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	168	None	replace
449	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	168	None	replace
450	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >  NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	168	None	replace
451	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	168	None	replace
452	[BUG]  [BUGGY]  return  CR  ||  c  >  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	168	None	replace
453	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >  NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  >  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	168	None	replace
454	[BUG]  [BUGGY]  return  BACKSPACE  ||  c  >  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	168	None	replace
455	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
456	[BUG]  [BUGGY]  else  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  'else'  without  'if'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  else  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	else  if(c  ==  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
457	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
458	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  Record  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  Record  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  Record  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
459	[BUG]  [BUGGY]  else  if(c  ==  'n'  ||  c  ==  'r')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  'else'  without  'if'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  else  if(c  ==  'n'  ||  c  ==  'r')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	else  if(c  ==  'n'  ||  c  ==  'r')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
460	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result  ()  ==  return  TAB;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result  ()  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result  ()  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
461	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	1	None	add
462	[BUG]  [BUGGY]  return  TAB;  Document  do  not  match  expected  result  ()  ==  return  TAB;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Document  do  not  match  expected  result  ()  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Document  do  not  match  expected  result  ()  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
463	[BUG]  [BUGGY]  return  TAB;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Document  do  not  match  expected  result(c)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
464	[BUG]  [BUGGY]  return  TAB;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	1	None	add
465	[BUG]  [BUGGY]  return  TAB;  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Context.codeBug();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Context.codeBug();	  	non-compiled	[CE]  cannot  find  symbol  Context	1	None	add
466	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  return  TAB;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(c)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
467	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  LF;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  LF;	  return    END_OF_STREAM    ||    CR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	76	None	replace
468	[BUG]  [BUGGY]  return  LF  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  LF  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  LF  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    CR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	76	None	replace
469	[BUG]  [BUGGY]  return  FR  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  FR  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FR  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FR  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    CR;    	non-compiled	[CE]  cannot  find  symbol  FR	76	None	replace
470	[BUG]  [BUGGY]  return  0;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	117	None	add
471	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
472	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  records  do  not  match  expected  result  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  records  do  not  match  expected  result  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  records  do  not  match  expected  result	  	non-compiled	[CE]  not  a  statement	117	None	add
473	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  Records  do  not  match  expected  result  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  Records  do  not  match  expected  result  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  Records  do  not  match  expected  result	  	non-compiled	[CE]  not  a  statement	117	None	add
474	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  records  do  not  match  expected  result  (  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  records  do  not  match  expected  result  (  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  records  do  not  match  expected  result  (	  	non-compiled	[CE]  not  a  statement	117	None	add
475	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  Records  do  not  match  expected  result  (  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  Records  do  not  match  expected  result  (  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  Records  do  not  match  expected  result  (	  	non-compiled	[CE]  not  a  statement	117	None	add
476	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
477	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
478	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
479	[BUG]  [BUGGY]  result  =  RecordDo  not  match  expected  result(c)  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RecordDo  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RecordDo  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	21	None	replace
480	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(b)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(b)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(b)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
481	[BUG]  [BUGGY]  result  =  Record.do  not  match  expected  result(c)  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  <identifier>  expected	21	None	replace
482	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  2;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  2;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
483	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  /  1;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  /  1;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
484	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
485	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  3;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  3;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
486	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  |  1;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  |  1;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
487	[BUG]  [BUGGY]  Enum.int  c  =  getEscapeChar();  [CE]  <identifier>  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Enum.int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Enum.int  c  =  getEscapeChar();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
488	[BUG]  [BUGGY]  Enum.int  c  =  getSurroundingSpaces().length;  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Enum.int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Enum.int  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
489	[BUG]  [BUGGY]  return  in.intValue()  -  1;  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  in.intValue()  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  in.intValue()  -  1;	  return    in.intValue();    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
490	[BUG]  [BUGGY]  return  in.intValue()  +  1;  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  in.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  in.intValue()  +  1;	  return    in.intValue();    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
491	[BUG]  [BUGGY]  int  c  =  in.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  in.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  in.intValue();	  return    in.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	187	None	replace
492	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  END_OBJECT;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	116	None	replace
493	[BUG]  [BUGGY]  return  END_OBJECT  ||  c  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  c  ==  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	116	None	replace
494	[BUG]  [BUGGY]  return  CR  ||  c  ==  CR;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  CR;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	116	None	replace
495	[BUG]  [BUGGY]  return  c  ||  END_OBJECT  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OBJECT  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OBJECT  ==  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	116	None	replace
496	[BUG]  [BUGGY]  return  OBJECT  ||  c  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  OBJECT  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  OBJECT  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  OBJECT  ||  c  ==  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  OBJECT	116	None	replace
497	[BUG]  [BUGGY]  return  BACKSPACE.charValue();  [CE]  char  cannot  be  dereferenced  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.charValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.charValue();	  return    BACKSPACE.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
498	[BUG]  [BUGGY]  return  BACKSPACE.intValue()  +  1;  [CE]  char  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.intValue()  +  1;	  return    BACKSPACE.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
499	[BUG]  [BUGGY]  int  c  =  BACKSPACE.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  BACKSPACE.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  BACKSPACE.intValue();	  return    BACKSPACE.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	85	None	replace
500	[BUG]  [BUGGY]  return  BACKSPACE.doubleValue();  [CE]  char  cannot  be  dereferenced  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.doubleValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.doubleValue();	  return    BACKSPACE.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
501	[BUG]  [BUGGY]  return  BACKSPACE.floatValue();  [CE]  char  cannot  be  dereferenced  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.floatValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.floatValue();	  return    BACKSPACE.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
502	[BUG]  [BUGGY]  return  c  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_OF_SCRIPT  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SCRIPT	133	None	replace
503	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_OF_SCRIPT  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SCRIPT	133	None	replace
504	[BUG]  [BUGGY]  return  END_SPACE  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_SPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	133	None	replace
505	[BUG]  [BUGGY]  return  END_BACKSPACE  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_BACKSPACE  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	133	None	replace
506	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	133	None	replace
507	[BUG]  [BUGGY]  return  END_OBJECT  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	133	None	replace
508	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  duplicate  case  label	63	None	replace
509	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  incompatible  types	63	None	replace
510	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
511	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(b)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(b)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(b)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
512	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(BACKSPACE)  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(BACKSPACE)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(BACKSPACE)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
513	[BUG]  [BUGGY]  result  =  c.matches(BACKSPACE);  [CE]  cannot  find  symbol  result  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  c.matches(BACKSPACE);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  c.matches(BACKSPACE);	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  cannot  find  symbol  result	22	None	replace
514	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
515	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
516	[BUG]  [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
517	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	32	9	replace
518	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	32	9	replace
519	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c!=  ignoreEmptyLines;	  return    ENDSPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	142	None	replace
520	[BUG]  [BUGGY]  return  CSVFormat.NUMBER_OF_STREAM  +  1;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.NUMBER_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.NUMBER_OF_STREAM  +  1;	  return    CSVFormat.NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	47	None	replace
521	[BUG]  [BUGGY]  return  CSVFormat.NUMBER;  [CE]  cannot  find  symbol  NUMBER  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.NUMBER;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.NUMBER;	  return    CSVFormat.NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER	47	None	replace
522	[BUG]  [BUGGY]  return  END_EmptyLines  ||  c  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_EmptyLines  ||  c  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_EmptyLines  ||  c  ==  END_EmptyLines;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	62	None	replace
523	[BUG]  [BUGGY]  return  END_EmptyLines  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_EmptyLines  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_EmptyLines  ||  c  ==  END_SURroundingSpaces;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	62	None	replace
524	[BUG]  [BUGGY]  return  c  ||  END_SURroundingSpaces  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SURroundingSpaces  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SURroundingSpaces  ==  ignoreEmptyLines;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	62	None	replace
525	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c  ==  END_OF_STREAM;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	62	None	replace
526	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c  ==  END_EmptyLines;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	62	None	replace
527	[BUG]  [BUGGY]  return  b;  [CE]  cannot  find  symbol  b  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  b;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b;	  return    TAB;    	non-compiled	[CE]  cannot  find  symbol  b	2	None	replace
528	[BUG]  [BUGGY]  int  b  =  this.intValue();  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  b  =  this.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  b  =  this.intValue();	  return    b.intValue();    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
529	[BUG]  [BUGGY]  return  CSV.intValue();  [CE]  cannot  find  symbol  CSV  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV.intValue();	  return    b.intValue();    	non-compiled	[CE]  cannot  find  symbol  CSV	150	None	replace
530	[BUG]  [BUGGY]  return  c  &&  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_STREAM;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	80	None	replace
531	[BUG]  [BUGGY]  return  CR  &&  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  &&  END_OF_STREAM;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	80	None	replace
532	[BUG]  [BUGGY]  return  CR  &&  c;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  &&  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  &&  c;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	80	None	replace
533	[BUG]  [BUGGY]  return  DISABLED;  DISABLED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    DISABLED;	  	non-compiled	[CE]  not  a  statement	120	None	add
534	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.parseInt(c);  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.parseInt(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  Integer.parseInt(c);	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	120	None	add
535	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  getCommentStart();  [CE]  cannot  find  symbol  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  getCommentStart();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  getCommentStart();	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
536	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.parseInt(quoteChar);  [CE]  no  suitable  method  found  for  parseInt(char)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.parseInt(quoteChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  Integer.parseInt(quoteChar);	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(char)	120	None	add
537	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.toHexString(c);  [CE]  incompatible  types  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.toHexString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  Integer.toHexString(c);	  	non-compiled	[CE]  incompatible  types	120	None	add
538	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  getCommentStart(c);  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  getCommentStart(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  getCommentStart(c);	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
539	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.toString(c);  [CE]  incompatible  types  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  Integer.toString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  Integer.toString(c);	  	non-compiled	[CE]  incompatible  types	120	None	add
540	[BUG]  [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	120	None	add
541	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_SURroundingSpaces;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	109	None	replace
542	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c  ==  ignoreEmptyLines;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	109	None	replace
543	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  ==  END_OF_STREAM;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	109	None	replace
544	[BUG]  [BUGGY]  result  =  c;  [CE]  cannot  find  symbol  result  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  c;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
545	[BUG]  [BUGGY]  result  =  BACKSPACE;  [CE]  cannot  find  symbol  result  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  BACKSPACE;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
546	[BUG]  [BUGGY]  result  =  END_OF_STREAM  |  BACKSPACE;  [CE]  cannot  find  symbol  result  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  |  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  |  BACKSPACE;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
547	[BUG]  [BUGGY]  result  =  END_OF_STREAM  |  1;  [CE]  cannot  find  symbol  result  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  |  1;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
548	[BUG]  [BUGGY]  result  =  CR;  [CE]  cannot  find  symbol  result  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  CR;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
549	[BUG]  [BUGGY]  return  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.length;	  return    END_OF_STREAM;    Return    END_OF_STREAM;    	non-compiled	[CE]  int  cannot  be  dereferenced	169	None	replace
550	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  ==  END_OF_STREAM;  [CE]  incomparable  types:  boolean  and  int  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  ==  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  incomparable  types:  boolean  and  int	61	None	replace
551	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	61	None	replace
552	[BUG]  [BUGGY]  return  c  ||  ignoreSurroundingSpaces  ==  END_OF_STREAM;  [CE]  incomparable  types:  boolean  and  int  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreSurroundingSpaces  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreSurroundingSpaces  ==  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  incomparable  types:  boolean  and  int	61	None	replace
553	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  c;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  c;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	61	None	replace
554	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  ignoreSurroundingSpaces;  [CE]  incomparable  types:  int  and  boolean  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  ignoreSurroundingSpaces;	  return    c    ||    END_OF_STREAM    ==    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	57	None	replace
555	[BUG]  [BUGGY]  return  c  &&  END_OF_STREAM  ==  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_STREAM  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_STREAM  ==  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    ==    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	57	None	replace
556	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_OF_EXPECTED;  [CE]  cannot  find  symbol  END_OF_EXPECTED  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  ==  END_OF_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  END_OF_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPECTED	207	None	replace
557	[BUG]  [BUGGY]  return  c  ||  END_OF_EXPECTED;  [CE]  cannot  find  symbol  END_OF_EXPECTED  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPECTED	207	None	replace
558	[BUG]  [BUGGY]  return  END_SPACE  ||  c  ==  END_OF_EXPECTED;  [CE]  cannot  find  symbol  END_SPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  c  ==  END_OF_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c  ==  END_OF_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	207	None	replace
559	[BUG]  [BUGGY]  return  END_OBJECT  ||  c  ==  END_OF_EXPECTED;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  c  ==  END_OF_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  c  ==  END_OF_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	207	None	replace
560	[BUG]  [BUGGY]  return  c.longValue();  [CE]  int  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c.longValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c.longValue();	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
561	[BUG]  [BUGGY]  return  END_OF_STREAM.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.doubleValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.doubleValue();	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
562	[BUG]  [BUGGY]  return  END_OF_STREAM.longValue()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.longValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.longValue()  +  1;	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
563	[BUG]  [BUGGY]  return  END_OF_STREAM.length();  [CE]  int  cannot  be  dereferenced  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.length();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.length();	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
564	[BUG]  [BUGGY]  return  END_OF_STREAM.floatValue();  [CE]  int  cannot  be  dereferenced  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.floatValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.floatValue();	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	86	None	replace
565	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	112	None	replace
566	[BUG]  [BUGGY]  return  END_BACKSPACE  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_BACKSPACE  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_BACKSPACE  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	112	None	replace
567	[BUG]  [BUGGY]  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
568	[BUG]  [BUGGY]  return  c  +  1;  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
569	[BUG]  [BUGGY]  END_OF_STREAM  =  1;  [CE]  cannot  assign  a  value  to  final  variable  END_OF_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  END_OF_STREAM  =  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	END_OF_STREAM  =  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  END_OF_STREAM	49	None	replace
570	[BUG]  [BUGGY]  ||  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
571	[BUG]  [BUGGY]  ||  END_OF_STREAM  ==  BACKSPACE;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  END_OF_STREAM  ==  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  END_OF_STREAM  ==  BACKSPACE;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
572	[BUG]  [BUGGY]  (END_OF_STREAM  +  1));  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  (END_OF_STREAM  +  1));  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	(END_OF_STREAM  +  1));	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
573	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	44	None	replace
574	[BUG]  [BUGGY]  return  CSVFormatUtilities.END_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  CSVFormatUtilities  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormatUtilities.END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormatUtilities.END_OF_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  CSVFormatUtilities	44	None	replace
575	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  +  2;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  +  2;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	44	None	replace
576	[BUG]  [BUGGY]  return  CSVFormat.END_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	44	None	replace
577	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
578	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(b)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(b)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(b)  ==  RecordedReader.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
579	[BUG]  [BUGGY]  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result(c)  ==  RecordedReader.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
580	[BUG]  [BUGGY]  RecordedReader.DEFAULT,  do  not  match  expected  result(c)  ==  BACKSPACE;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  RecordedReader.DEFAULT,  do  not  match  expected  result(c)  ==  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	RecordedReader.DEFAULT,  do  not  match  expected  result(c)  ==  BACKSPACE;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
581	[BUG]  [BUGGY]  RecordedReader.DEFAULT  do  not  match  expected  result(c)  ==  BACKSPACE;  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  RecordedReader.DEFAULT  do  not  match  expected  result(c)  ==  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	RecordedReader.DEFAULT  do  not  match  expected  result(c)  ==  BACKSPACE;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
582	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  RecordedReader.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
583	[BUG]  [BUGGY]  RecordedReader.DEFAULT  =  do  not  match  expected  result(c)  ==  BACKSPACE;  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  RecordedReader.DEFAULT  =  do  not  match  expected  result(c)  ==  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	RecordedReader.DEFAULT  =  do  not  match  expected  result(c)  ==  BACKSPACE;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
584	[BUG]  [BUGGY]  return  CSVFormat.END_SCRIPT;  [CE]  cannot  find  symbol  END_SCRIPT  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SCRIPT;	  return    CSVFormat.END_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  END_SCRIPT	129	None	replace
585	[BUG]  [BUGGY]  return  CR  ||  LF;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  LF;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	79	None	replace
586	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM  |  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  END_OF_STREAM  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM  |  1;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	79	None	replace
587	[BUG]  [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(c);  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  Integer.parseInt(c);	  	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	91	None	add
588	[BUG]  [BUGGY]  return  CR;  int  CR  =  getSurroundingSpaces().size();  [CE]  cannot  find  symbol  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
589	[BUG]  [BUGGY]  return  CR;  int  CR  =  getSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  getSurroundingSpaces();	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
590	[BUG]  [BUGGY]  return  CR;  int  CR  =  getSurroundingSpaces().length;  [CE]  cannot  find  symbol  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
591	[BUG]  [BUGGY]  return  CR;  int  CR  =  Integer.toHexString(c);  [CE]  incompatible  types  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  Integer.toHexString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  Integer.toHexString(c);	  	non-compiled	[CE]  incompatible  types	91	None	add
592	[BUG]  [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(text.length());  [CE]  cannot  find  symbol  text  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(text.length());  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  Integer.parseInt(text.length());	  	non-compiled	[CE]  cannot  find  symbol  text	91	None	add
593	[BUG]  [BUGGY]  return  CR;  int  CR  =  Integer.MAX_VALUE;  [CE]  unreachable  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  unreachable  statement	91	None	add
594	[BUG]  [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(outlineChar);  [CE]  cannot  find  symbol  outlineChar  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(outlineChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  Integer.parseInt(outlineChar);	  	non-compiled	[CE]  cannot  find  symbol  outlineChar	91	None	add
595	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
596	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry  +  1);  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry  +  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry  +  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
597	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry.getChar()  -  1);  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry.getChar()  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry.getChar()  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
598	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry.length  -  1);  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry.length  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry.length  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
599	[BUG]  [BUGGY]  result  =  Record  do  not  match  expected  result(entry  -  1);  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record  do  not  match  expected  result(entry  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  ';'  expected	177	None	replace
600	[BUG]  [BUGGY]  record  does  not  match  expected  result(entry  -  1);  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result(entry  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  ';'  expected	177	None	replace
601	[BUG]  [BUGGY]  Result  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(entry  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
602	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(c);  [CE]  cannot  find  symbol  result  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  JsonStringEncoder.getInstance().encodeAsString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  JsonStringEncoder.getInstance().encodeAsString(c);	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
603	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().escapeSurroundingSpaces(c);  [CE]  cannot  find  symbol  result  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  JsonStringEncoder.getInstance().escapeSurroundingSpaces(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  JsonStringEncoder.getInstance().escapeSurroundingSpaces(c);	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
604	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().escapeSurroundingSpace(c);  [CE]  cannot  find  symbol  result  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  JsonStringEncoder.getInstance().escapeSurroundingSpace(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  JsonStringEncoder.getInstance().escapeSurroundingSpace(c);	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
605	[BUG]  [BUGGY]  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  result  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	int  result  =  END_OF_STREAM;	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  IOException  	170	9	replace
606	[BUG]  [BUGGY]  int  result  =  END_OF_STREAM;  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  result  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  result  =  END_OF_STREAM;	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  IOException  	170	9	replace
607	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().escape(c);  [CE]  cannot  find  symbol  result  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  JsonStringEncoder.getInstance().escape(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  JsonStringEncoder.getInstance().escape(c);	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
608	[BUG]  [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(c);  [CE]  cannot  find  symbol  result  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  JsonStringEncoder.getInstance().quoteAsString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  JsonStringEncoder.getInstance().quoteAsString(c);	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
609	[BUG]  [BUGGY]  result  =  RecordDo  not  match  expected  result(entry  -  1);  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RecordDo  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RecordDo  not  match  expected  result(entry  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  ';'  expected	199	None	replace
610	[BUG]  [BUGGY]  record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  do  not  match  expected  result(entry  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	199	None	replace
611	[BUG]  [BUGGY]  int  c  =  Integer.parseInt(quoteChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  Integer.parseInt(quoteChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  Integer.parseInt(quoteChar);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
612	[BUG]  [BUGGY]  Integer  c  =  Integer.parseInt(quoteChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  Integer.parseInt(quoteChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  Integer.parseInt(quoteChar);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
613	[BUG]  [BUGGY]  char  c  =  Integer.parseInt(quoteChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  Integer.parseInt(quoteChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  Integer.parseInt(quoteChar);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
614	[BUG]  [BUGGY]  c  =  Integer.parseInt(quoteChar);  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  Integer.parseInt(quoteChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  Integer.parseInt(quoteChar);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	13	None	replace
615	[BUG]  [BUGGY]  double  c  =  Integer.parseInt(quoteChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  double  c  =  Integer.parseInt(quoteChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	double  c  =  Integer.parseInt(quoteChar);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
616	[BUG]  [BUGGY]  int  c  =  Integer.parseInt(commmentStart);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  Integer.parseInt(commmentStart);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  Integer.parseInt(commmentStart);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
617	[BUG]  [BUGGY]  return  CSVFormat.AB_BACKSPACE  +  1;  [CE]  cannot  find  symbol  AB_BACKSPACE  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.AB_BACKSPACE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.AB_BACKSPACE  +  1;	  return    TAB    +    1;    	non-compiled	[CE]  cannot  find  symbol  AB_BACKSPACE	99	None	replace
618	[BUG]  [BUGGY]  return  CSV_SIZE  +  1;  [CE]  cannot  find  symbol  CSV_SIZE  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_SIZE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SIZE  +  1;	  return    TAB    +    1;    	non-compiled	[CE]  cannot  find  symbol  CSV_SIZE	99	None	replace
619	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
620	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
621	[BUG]  [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
622	[BUG]  [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
623	[BUG]  [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
624	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
625	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
626	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  quoteChar;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  quoteChar;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  quoteChar;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	181	None	replace
627	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  quoteSurroundingSpaces;  [CE]  cannot  find  symbol  quoteSurroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  quoteSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  quoteSurroundingSpaces;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  cannot  find  symbol  quoteSurroundingSpaces	181	None	replace
628	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  delimiter;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  delimiter;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  delimiter;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	181	None	replace
629	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  commmentStart;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  commmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  commmentStart;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	181	None	replace
630	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DElimiter;  [CE]  cannot  find  symbol  DElimiter  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DElimiter;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DElimiter;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  cannot  find  symbol  DElimiter	181	None	replace
631	[BUG]  [BUGGY]  END_OF_STREAM;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	END_OF_STREAM;	  return    END_OF_STREAM;    END_OF_STREAM;    	non-compiled	[CE]  not  a  statement	27	None	replace
632	[BUG]  [BUGGY]  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  '.')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
633	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
634	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
635	[BUG]  [BUGGY]  if(c  ==  'n')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
636	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  '.')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  '.')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
637	[BUG]  [BUGGY]  if(c!=  '.')  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  '.')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  '.')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
638	[BUG]  [BUGGY]  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
639	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
640	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
641	[BUG]  [BUGGY]  if(c!=  'n')  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
642	[BUG]  [BUGGY]  return  c  ||  CR  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  CR  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  CR  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	107	None	replace
643	[BUG]  [BUGGY]  return  c  ||  END_EmptyLines  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_EmptyLines  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_EmptyLines  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	107	None	replace
644	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	107	None	replace
645	[BUG]  [BUGGY]  return  CSVFormat.END_OF;  [CE]  cannot  find  symbol  END_OF  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF;	  return    CSVFormat.END_EOF;    	non-compiled	[CE]  cannot  find  symbol  END_OF	96	None	replace
646	[BUG]  [BUGGY]  return  CSVFormat.START_EOF;  [CE]  cannot  find  symbol  START_EOF  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.START_EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START_EOF;	  return    CSVFormat.END_EOF;    	non-compiled	[CE]  cannot  find  symbol  START_EOF	96	None	replace
647	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  [CE]  duplicate  case  label  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_OF_STREAM  +  1;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  duplicate  case  label	67	None	replace
648	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_OBJECT;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	67	None	replace
649	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_SURroundingSpaces;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	67	None	replace
650	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  EOF;  [CE]  cannot  find  symbol  EOF  [FE]                      IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  EOF;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  EOF	67	None	replace
651	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]                        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_OF_STREAM.length;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  int  cannot  be  dereferenced	67	None	replace
652	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE;  [CE]  duplicate  case  label  [FE]                          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  BACKSPACE;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  duplicate  case  label	67	None	replace
653	[BUG]  [BUGGY]  null  c  =  getEscapeChar();  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getEscapeChar();	  return    END_OF_STREAM;    int    c    =    getEscapeChar();    	non-compiled	[CE]  not  a  statement	172	None	replace
654	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  <  =  END_OF_STREAM;	  return    c    ||    END_OF_STREAM    <    =    ignoreEmptyLines;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
655	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  <  ignoreSurroundingSpaces;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  <  ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  <  ignoreSurroundingSpaces;	  return    c    ||    END_OF_STREAM    <    =    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	71	None	replace
656	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  <  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  <  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  <  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    <    =    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	71	None	replace
657	[BUG]  [BUGGY]  return  c  ||  ignoreSurroundingSpaces  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreSurroundingSpaces  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreSurroundingSpaces  <  =  END_OF_STREAM;	  return    c    ||    END_OF_STREAM    <    =    ignoreEmptyLines;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
658	[BUG]  [BUGGY]  int  c  =  getSurroundingSpace().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpace().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpace().length;	  return    BACKSPACE;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	26	None	replace
659	[BUG]  [BUGGY]  return  BACKSPACE  &&  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  &&  END_OF_STREAM;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	102	None	replace
660	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  BACKSPACE;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  BACKSPACE;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	102	None	replace
661	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM  +  1;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	102	None	replace
662	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  |  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM  |  1;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	102	None	replace
663	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM,  c;  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM,  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM,  c;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	102	None	replace
664	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  +  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM  +  2;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	102	None	replace
665	[BUG]  [BUGGY]  return  RECORD_OF_STREAM  +  2;  [CE]  cannot  find  symbol  RECORD_OF_STREAM  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  RECORD_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD_OF_STREAM  +  2;	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  cannot  find  symbol  RECORD_OF_STREAM	101	None	replace
666	[BUG]  [BUGGY]  return  ACCESS_SURroundingSpaces  +  2;  [CE]  cannot  find  symbol  ACCESS_SURroundingSpaces  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACCESS_SURroundingSpaces  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACCESS_SURroundingSpaces  +  2;	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  cannot  find  symbol  ACCESS_SURroundingSpaces	101	None	replace
667	[BUG]  [BUGGY]  return  RECORD_OF_STREAM  +  1;  [CE]  cannot  find  symbol  RECORD_OF_STREAM  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  RECORD_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD_OF_STREAM  +  1;	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  cannot  find  symbol  RECORD_OF_STREAM	101	None	replace
668	[BUG]  [BUGGY]  return  END_OF_STREAM.length  +  2;  [CE]  int  cannot  be  dereferenced  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.length  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.length  +  2;	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  int  cannot  be  dereferenced	101	None	replace
669	[BUG]  [BUGGY]  return  CSVFormat.END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_EmptyLines;	  return    CSVFormat.END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	45	None	replace
670	[BUG]  [BUGGY]  return  CSVFormat.END_EMPTY;  [CE]  cannot  find  symbol  END_EMPTY  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_EMPTY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_EMPTY;	  return    CSVFormat.END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EMPTY	45	None	replace
671	[BUG]  [BUGGY]  int  c  +=  1;  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  +=  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  +=  1;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  ';'  expected	6	None	replace
672	[BUG]  [BUGGY]  int  c  =  this.ignoreSurroundingSpaces.size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.ignoreSurroundingSpaces.size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.ignoreSurroundingSpaces.size();	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
673	[BUG]  [BUGGY]  int  c  =  this.ignoreEmptyLines.size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.ignoreEmptyLines.size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.ignoreEmptyLines.size();	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
674	[BUG]  [BUGGY]  int  c  +=  2;  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  +=  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  +=  2;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  ';'  expected	6	None	replace
675	[BUG]  [BUGGY]  int  c  =  this.escapeSurroundingSpaces  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.escapeSurroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.escapeSurroundingSpaces  +  1;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
676	[BUG]  [BUGGY]  return  c  ||  DISABLED!=  ignoreEmptyLines;  [CE]  incomparable  types:  char  and  boolean  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  DISABLED!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  DISABLED!=  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  char  and  boolean	16	None	replace
677	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >>  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >>  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  >>  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	16	None	replace
678	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	16	None	replace
679	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence,  should  be   ");  [CE]  duplicate  case  label  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence,  should  be   ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence,  should  be   ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence,   ");    	non-compiled	[CE]  duplicate  case  label	68	None	replace
680	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c  ==  ignoreEmptyLines;	  return    ENDSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	106	None	replace
681	[BUG]  [BUGGY]  return  CR  ||  c!=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  END_OF_STREAM;	  return    CR    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
682	[BUG]  [BUGGY]  return  CR  ||  c!=  LF;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c!=  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  LF;	  return    CR    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
683	[BUG]  [BUGGY]  return  CR  ||  c!=  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c!=  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  DISABLED;	  return    CR    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
684	[BUG]  [BUGGY]  return  CR  ||  c  >=  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >=  END_OF_STREAM;	  return    CR    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	replace
685	[BUG]  [BUGGY]  int  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentSurroundingSpaces();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	137	None	replace
686	[BUG]  [BUGGY]  Integer  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getCurrentSurroundingSpaces();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	137	None	replace
687	[BUG]  [BUGGY]  c  =  getCurrentSurroundingSpaces();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getCurrentSurroundingSpaces();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	137	None	replace
688	[BUG]  [BUGGY]  char  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  getCurrentSurroundingSpaces();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	137	None	replace
689	[BUG]  [BUGGY]  int  c  =  getCurrentSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentSurroundingSpaces().length;	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	137	None	replace
690	[BUG]  [BUGGY]  return  CR  ||  c  >=  LF;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >=  LF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >=  LF;	  return    CR    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	88	None	replace
691	[BUG]  [BUGGY]  return  CR  ||  c  >=  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >=  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >=  DISABLED;	  return    CR    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	88	None	replace
692	[BUG]  [BUGGY]  return  c  ||  DISABLED  ==  ignoreEmptyLines;  [CE]  incomparable  types:  char  and  boolean  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  DISABLED  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  DISABLED  ==  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    ==    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  char  and  boolean	58	None	replace
693	[BUG]  [BUGGY]  return  c  ||  DElimiter  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  DElimiter  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  DElimiter  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  DElimiter  ==  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    ==    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  DElimiter	58	None	replace
694	[BUG]  [BUGGY]  return  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_EmptyLines;	  return    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	93	None	replace
695	[BUG]  [BUGGY]  return  CSV_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SURroundingSpaces;	  return    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV_SURroundingSpaces	93	None	replace
696	[BUG]  [BUGGY]  return  END_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  +  1;	  return    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	93	None	replace
697	[BUG]  [BUGGY]  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentSurroundingSpace();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	140	None	replace
698	[BUG]  [BUGGY]  Integer  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getCurrentSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getCurrentSurroundingSpace();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	140	None	replace
699	[BUG]  [BUGGY]  c  =  getCurrentSurroundingSpace();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getCurrentSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getCurrentSurroundingSpace();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	140	None	replace
700	[BUG]  [BUGGY]  null  c  =  getCurrentSurroundingSpace();  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getCurrentSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getCurrentSurroundingSpace();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  not  a  statement	140	None	replace
701	[BUG]  [BUGGY]  int  c  =  getCurrentSurroundingSpace().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentSurroundingSpace().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentSurroundingSpace().length;	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	140	None	replace
702	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM!=  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM!=  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM!=  END_OBJECT;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	144	None	replace
703	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  END_BACKSPACE;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	144	None	replace
704	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM!=  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	144	None	replace
705	[BUG]  [BUGGY]  return  END_OBJECT  ||  c!=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  c!=  END_OF_STREAM;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	144	None	replace
706	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  DISABLED;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	144	None	replace
707	[BUG]  [BUGGY]  int  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  Integer.MAX_VALUE;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	11	None	replace
708	[BUG]  [BUGGY]  Integer  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  Integer.MAX_VALUE;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	11	None	replace
709	[BUG]  [BUGGY]  c  =  Integer.MAX_VALUE;  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  Integer.MAX_VALUE;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	11	None	replace
710	[BUG]  [BUGGY]  long  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  long  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	long  c  =  Integer.MAX_VALUE;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	11	None	replace
711	[BUG]  [BUGGY]  double  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  double  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	double  c  =  Integer.MAX_VALUE;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	11	None	replace
712	[BUG]  [BUGGY]  Integer  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	165	None	replace
713	[BUG]  [BUGGY]  null  c  =  getSurroundingSpaces().size();  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  null  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	null  c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  not  a  statement	165	None	replace
714	[BUG]  [BUGGY]  c  =  getSurroundingSpaces().size();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	165	None	replace
715	[BUG]  [BUGGY]  char  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	165	None	replace
716	[BUG]  [BUGGY]  int  c  =  getSurroundingSpaces().size()  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpaces().size()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpaces().size()  +  1;	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	165	None	replace
717	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  2;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  +  2;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
718	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  /  1;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  /  1;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
719	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
720	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  3;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  +  3;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
721	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  |  1;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  |  1;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
722	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  4;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  +  4;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
723	[BUG]  [BUGGY]  int  c  =  readEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  readEscapeSurroundingSpaces();	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
724	[BUG]  [BUGGY]  Integer  c  =  readEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Integer  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Integer  c  =  readEscapeSurroundingSpaces();	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
725	[BUG]  [BUGGY]  c  =  readEscapeSurroundingSpaces();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  readEscapeSurroundingSpaces();	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	182	None	replace
726	[BUG]  [BUGGY]  int  c  =  readEscapeSurroundingSpaces(false);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  readEscapeSurroundingSpaces(false);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  readEscapeSurroundingSpaces(false);	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
727	[BUG]  [BUGGY]  int  c  =  readSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  readSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  readSurroundingSpaces();	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
728	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces?  1  :  0;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces?  1  :  0;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces?  1  :  0;	  return    CSVFormat.END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	43	None	replace
729	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  -  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces  -  1;	  return    CSVFormat.END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	43	None	replace
730	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  BACKSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE  ||  END_OF_STREAM;	  return    b    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	180	None	replace
731	[BUG]  [BUGGY]  return  f  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  f  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  f  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  f  ||  END_OF_STREAM;	  return    b    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  f	180	None	replace
732	[BUG]  [BUGGY]  return  OBJECT_OF_STREAM.intValue();  [CE]  cannot  find  symbol  OBJECT_OF_STREAM  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  OBJECT_OF_STREAM.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  OBJECT_OF_STREAM.intValue();	  return    END_OF_STREAM.intValue()    +    2;    	non-compiled	[CE]  cannot  find  symbol  OBJECT_OF_STREAM	151	None	replace
733	[BUG]  [BUGGY]  return  BACKSPACE.intValue()  +  2;  [CE]  char  cannot  be  dereferenced  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.intValue()  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.intValue()  +  2;	  return    END_OF_STREAM.intValue()    +    2;    	non-compiled	[CE]  char  cannot  be  dereferenced	151	None	replace
734	[BUG]  [BUGGY]  return  'n';  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
735	[BUG]  [BUGGY]  return  'n';  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
736	[BUG]  [BUGGY]  return  'n';  if(c  ==  'n')  {  Records  do  not  match  expected  result  (false)  {  return  TAB;  }  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  if(c  ==  'n')  {  Records  do  not  match  expected  result  (false)  {  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    if(c  ==  'n')  {  Records  do  not  match  expected  result  (false)  {  return  TAB;  }	  	non-compiled	[CE]  not  a  statement	174	None	add
737	[BUG]  [BUGGY]  return  'n';  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	174	None	add
738	[BUG]  [BUGGY]  return  'n';  if(c  ==  'n')  {  Records  do  not  match  expected  result  (entry  0)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  if(c  ==  'n')  {  Records  do  not  match  expected  result  (entry  0)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    if(c  ==  'n')  {  Records  do  not  match  expected  result  (entry  0)  ==  return  TAB;  }	  	non-compiled	[CE]  not  a  statement	174	None	add
739	[BUG]  [BUGGY]  return  'n';  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
740	[BUG]  [BUGGY]  return  'n';  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	174	None	add
741	[BUG]  [BUGGY]  return  'n';  if(c  ==  'n')  {  Records  do  not  match  expected  result  (entry  0)  {  return  TAB;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  if(c  ==  'n')  {  Records  do  not  match  expected  result  (entry  0)  {  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    if(c  ==  'n')  {  Records  do  not  match  expected  result  (entry  0)  {  return  TAB;  }	  	non-compiled	[CE]  not  a  statement	174	None	add
742	[BUG]  [BUGGY]  int  c  =  getEscapeSurroundingSpaces().size()  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEscapeSurroundingSpaces().size()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEscapeSurroundingSpaces().size()  +  1;	  return    END_OF_STREAM;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	166	None	replace
743	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  handling  escape  sequence. ");  [CE]  duplicate  case  label  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  handling  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  handling  escape  sequence. ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence.   ");    	non-compiled	[CE]  duplicate  case  label	64	None	replace
744	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence. ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence.   ");    	non-compiled	[CE]  incompatible  types	64	None	replace
745	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
746	[BUG]  [BUGGY]  return  c  &&  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
747	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  <  =  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
748	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
749	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  END_OF_STREAMINGSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces!=  END_OF_STREAMINGSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces!=  END_OF_STREAMINGSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	90	None	replace
750	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAMES!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_STREAMES  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAMES!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAMES!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAMES	90	None	replace
751	[BUG]  [BUGGY]  return  END_PREFIX  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_PREFIX  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_PREFIX  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_PREFIX  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_PREFIX	60	None	replace
752	[BUG]  [BUGGY]  return  END_STREAM  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_STREAM  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_STREAM  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_STREAM  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_STREAM	60	None	replace
753	[BUG]  [BUGGY]  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
754	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  /  1;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  /  1;	  return    CSVFormat.END_OF_STREAM    -    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	184	None	replace
755	[BUG]  [BUGGY]  return  CSVFormat.END_OBJECT  -  1;  [CE]  cannot  find  symbol  END_OBJECT  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OBJECT  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OBJECT  -  1;	  return    CSVFormat.END_OF_STREAM    -    1;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	184	None	replace
756	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  -  2;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  -  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  -  2;	  return    CSVFormat.END_OF_STREAM    -    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	184	None	replace
757	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  &  END_OF_STREAM;	  return    c    ||    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	74	3	replace
758	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &  END_OF_STREAM;	  return    c    ||    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	74	3	replace
759	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  |  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  |  1;	  return    c    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	74	None	replace
760	[BUG]  [BUGGY]  return  END_OF_SIZE;  [CE]  cannot  find  symbol  END_OF_SIZE  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SIZE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SIZE;	  return    CSV_SIZE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SIZE	5	None	replace
761	[BUG]  [BUGGY]  return  CSV_SIZE  -  1;  [CE]  cannot  find  symbol  CSV_SIZE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_SIZE  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SIZE  -  1;	  return    CSV_SIZE;    	non-compiled	[CE]  cannot  find  symbol  CSV_SIZE	5	None	replace
762	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >=  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  >=  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >=  END_OBJECT;	  return    END_OF_STREAM    ||    c    >=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	114	None	replace
763	[BUG]  [BUGGY]  return  c  ||  c  >=  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  >=  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >=  END_OBJECT;	  return    END_OF_STREAM    ||    c    >=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	114	None	replace
764	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_BACKSPACE;	  return    END_OF_STREAM    ||    c    >=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	114	None	replace
765	[BUG]  [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
766	[BUG]  [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
767	[BUG]  [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
768	[BUG]  [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
769	[BUG]  [BUGGY]  return  c  +  3;  c  +  3;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  c  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    c  +  3;	  	non-compiled	[CE]  not  a  statement	41	None	add
770	[BUG]  [BUGGY]  return  c  +  3;  int  c  +  3;  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  +  3;	  	non-compiled	[CE]  ';'  expected	41	None	add
771	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
772	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
773	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
774	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  Integer.MAX_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  Integer.MAX_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  Integer.MAX_VALUE;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
775	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
776	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getEscapeSurroundingSpaces(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getEscapeSurroundingSpaces(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getEscapeSurroundingSpaces(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
777	[BUG]  [BUGGY]  c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	164	None	replace
778	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
779	[BUG]  [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  <  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  <  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_SURroundingSpaces  ||  c  <  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	203	None	replace
780	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
781	[BUG]  [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
782	[BUG]  [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	203	None	replace
783	[BUG]  [BUGGY]  return  c  ==  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
784	[BUG]  [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_SURroundingSpaces  ||  c  ==  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	203	None	replace
785	[BUG]  [BUGGY]  return  c,  END_OF_STREAM.intValue()  +  1;  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c,  END_OF_STREAM.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c,  END_OF_STREAM.intValue()  +  1;	  return    END_OF_STREAM.intValue()    +    1;    	non-compiled	[CE]  ';'  expected	83	None	replace
786	[BUG]  [BUGGY]  return  CSVFormat.intValue()  +  1;  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.intValue()  +  1;	  return    END_OF_STREAM.intValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
787	[BUG]  [BUGGY]  return  b.intValue()  +  1;  [CE]  cannot  find  symbol  b  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  b.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b.intValue()  +  1;	  return    END_OF_STREAM.intValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol  b	83	None	replace
788	[BUG]  [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
789	[BUG]  [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
790	[BUG]  [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
791	[BUG]  [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
792	[BUG]  [BUGGY]  return  c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  '0'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
793	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  line  end  in  character  literal	34	None	replace
794	[BUG]  [BUGGY]  [FE]  IOException  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	34	9	replace
795	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	34	9	replace
796	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_  [CE]  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  	34	None	replace
797	[BUG]  [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
798	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
799	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OBJECT;  }  [CE]  cannot  find  symbol  END_OBJECT  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OBJECT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OBJECT;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	34	None	replace
800	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  EOF;  }  [CE]  cannot  find  symbol  EOF  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  EOF;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  EOF;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  EOF	34	None	replace
801	[BUG]  [BUGGY]  return  c;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
802	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  +  1;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
803	[BUG]  [BUGGY]  result  =  Collections.emptyList();  [CE]  cannot  find  symbol  result  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  result	160	None	replace
804	[BUG]  [BUGGY]  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
805	[BUG]  [BUGGY]  return  END_SPACE  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  END_SPACE  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	146	None	replace
806	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	146	None	replace
807	[BUG]  [BUGGY]  return  END_OBJECT  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	146	None	replace
808	[BUG]  [BUGGY]  int  c  =  this.escapeSurroundingSpaces.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.escapeSurroundingSpaces.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.escapeSurroundingSpaces.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
809	[BUG]  [BUGGY]  char  c  =  END_OF_STREAM.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  char  c  =  END_OF_STREAM.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	char  c  =  END_OF_STREAM.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
810	[BUG]  [BUGGY]  int  c  =  this.escapeChar.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.escapeChar.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.escapeChar.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
811	[BUG]  [BUGGY]  int  c  =  this.endSurroundingSpaces.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.endSurroundingSpaces.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.endSurroundingSpaces.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
812	[BUG]  [BUGGY]  int  c  =  format.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  format.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  format.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
813	[BUG]  [BUGGY]  int  c  =  getSurroundingSpaces().intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpaces().intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpaces().intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
814	[BUG]  [BUGGY]  int  c  =  this.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
815	[BUG]  [BUGGY]  int  c  =  getEmptyLines().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEmptyLines().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEmptyLines().size();	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	replace
816	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	176	None	replace
817	[BUG]  [BUGGY]  Result  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	176	None	replace
818	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry)  {  return  END_OF_STREAM  +  1;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry)  {  return  END_OF_STREAM  +  1;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry)  {  return  END_OF_STREAM  +  1;  }	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	176	None	replace
819	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry)  {  return  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry)  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry)  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	176	None	replace
820	[BUG]  [BUGGY]  result  =  Record.matches(entry)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.matches(entry)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.matches(entry)?  END_OF_STREAM  :  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  result	176	None	replace
821	[BUG]  [BUGGY]  result  |=  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  result	176	None	replace
822	[BUG]  [BUGGY]  result  |=  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  |=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  |=  END_OF_STREAM;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  result	176	None	replace
823	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_STREAM  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_STREAM  <  =  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_STREAM  <  =  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
824	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  >=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	70	None	replace
825	[BUG]  [BUGGY]  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
826	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  0;  }  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
827	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  1;	  return    0;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	118	9	replace
828	[BUG]  [BUGGY]  return  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  1;	  return    0;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	118	9	replace
829	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n'  ||  c  ==  'r')  {  return  0;  }	  return    0;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	118	9	replace
830	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  0;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  return  0;  }	  return    0;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	118	9	replace
831	[BUG]  [BUGGY]  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'e'  ||  c  ==  'E')  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
832	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  0;  }  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'e'  ||  c  ==  'E')  {  return  0;  }	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
833	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( " ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	throw  new  IOException( " ");	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
834	[BUG]  [BUGGY]  throw  new  IOException( " ");  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( " ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	throw  new  IOException( " ");	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
835	[BUG]  [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  cannot  find  symbol  END  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  case    END:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END	127	None	replace
836	[BUG]  [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [CE]  cannot  find  symbol  END  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);	  case    END:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END	127	None	replace
837	[BUG]  [BUGGY]  return  c  >=  END_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURroundingSpaces.length;	  return    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	191	None	replace
838	[BUG]  [BUGGY]  int  ch  =  in.intValue();  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  ch  =  in.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  ch  =  in.intValue();	  return    ch.intValue();    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
839	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  END_OF_STREAM  +  2;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    END_OF_STREAM  +  2;	  	non-compiled	[CE]  not  a  statement	100	None	add
840	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  return  END_OF_STREAM  +  2;  [CE]  unreachable  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  return  END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    return  END_OF_STREAM  +  2;	  	non-compiled	[CE]  unreachable  statement	100	None	add
841	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
842	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
843	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
844	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
845	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
846	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
847	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM!=  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM!=  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM!=  END_EmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	115	None	replace
848	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >=  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  >=  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >=  END_EmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	115	None	replace
849	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	115	None	replace
850	[BUG]  [BUGGY]  return  CR  ||  c  >=  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >=  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >=  END_EmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	115	None	replace
851	[BUG]  [BUGGY]  return  '['  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  '['  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  '['  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
852	[BUG]  [BUGGY]  return  0  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  0  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
853	[BUG]  [BUGGY]  return  EOF  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  EOF  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  EOF  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
854	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  c  +  1;  int  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  c  +  1;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  return  c  +  1;  int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
855	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c!=  'r')  {  return  c  +  1;  int  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c!=  'r')  {  return  c  +  1;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c!=  'r')  {  return  c  +  1;  int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
856	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
857	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  't')  {  return  c  +  1;  int  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  't')  {  return  c  +  1;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  't')  {  return  c  +  1;  int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
858	[BUG]  [BUGGY]  return  END_OF_SYNTHETIC;  [CE]  cannot  find  symbol  END_OF_SYNTHETIC  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SYNTHETIC;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SYNTHETIC;	  return    CSV_SYNTHETIC;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SYNTHETIC	173	None	replace
859	[BUG]  [BUGGY]  return  CSVFormat.END_OPTIONAL;  [CE]  cannot  find  symbol  END_OPTIONAL  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OPTIONAL;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OPTIONAL;	  return    CSVFormat.END_EOF;    	non-compiled	[CE]  cannot  find  symbol  END_OPTIONAL	96	None	replace
860	[BUG]  [BUGGY]  return  CSVFormat.ENDEOF;  [CE]  cannot  find  symbol  ENDEOF  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.ENDEOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.ENDEOF;	  return    CSVFormat.END_EOF;    	non-compiled	[CE]  cannot  find  symbol  ENDEOF	96	None	replace
861	[BUG]  [BUGGY]  return  CSV_NUMBER;  [CE]  cannot  find  symbol  CSV_NUMBER  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_NUMBER;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_NUMBER;	  return    CSV_NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV_NUMBER	48	None	replace
862	[BUG]  [BUGGY]  return  READ_OF_STREAM  ||  DISABLED;  [CE]  cannot  find  symbol  READ_OF_STREAM  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  READ_OF_STREAM  ||  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  READ_OF_STREAM  ||  DISABLED;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  READ_OF_STREAM	77	None	replace
863	[BUG]  [BUGGY]  return  DISABLED  ||  END_OF_STREAM.equals(DISABLED);  [CE]  int  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  END_OF_STREAM.equals(DISABLED);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  END_OF_STREAM.equals(DISABLED);	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
864	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DISABLED  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DISABLED  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DISABLED  +  1;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	77	None	replace
865	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
866	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
867	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
868	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
869	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
870	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  +  4;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  +  4;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
871	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  +  6;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  +  6;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  +  6;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
872	[BUG]  [BUGGY]  return  c  ||  END_SPACE  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SPACE  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SPACE  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	111	None	replace
873	[BUG]  [BUGGY]  return  c  ||  ENDSPACE  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ENDSPACE  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ENDSPACE  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	111	None	replace
874	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	111	None	replace
875	[BUG]  [BUGGY]  int  c  =  this.ignoreSurroundingSpaces  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.ignoreSurroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.ignoreSurroundingSpaces  +  1;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
876	[BUG]  [BUGGY]  int  c  =  this.ignoreEmptyLines  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.ignoreEmptyLines  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.ignoreEmptyLines  +  1;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
877	[BUG]  [BUGGY]  int  c  =  this.ignoreEmptyLines;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.ignoreEmptyLines;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
878	[BUG]  [BUGGY]  int  c  =  this.ignoreSurroundingSpaces;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.ignoreSurroundingSpaces;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
879	[BUG]  [BUGGY]  return  c  ||  END_SPACE!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SPACE!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SPACE!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	90	None	replace
880	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	90	None	replace
881	[BUG]  [BUGGY]  return  0;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	117	None	add
882	[BUG]  [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	117	None	add
883	[BUG]  [BUGGY]  return  0;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	117	None	add
884	[BUG]  [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  	non-compiled	[CE]  not  a  statement	117	None	add
885	[BUG]  [BUGGY]  return  0;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  Collections	117	None	add
886	[BUG]  [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;	  	non-compiled	[CE]  not  a  statement	117	None	add
887	[BUG]  [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  Recorder.DEFAULT;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Document  do  not  match  expected  result(c)  ==  Recorder.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    Document  do  not  match  expected  result(c)  ==  Recorder.DEFAULT;	  	non-compiled	[CE]  not  a  statement	117	None	add
888	[BUG]  [BUGGY]  return  s.intValue();  [CE]  cannot  find  symbol  s  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  s.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  s.intValue();	  return    ch.intValue();    	non-compiled	[CE]  cannot  find  symbol  s	188	None	replace
889	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	205	None	replace
890	[BUG]  [BUGGY]  return  END_SPACE  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_SPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	205	None	replace
891	[BUG]  [BUGGY]  return  END_EmptyLines  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_EmptyLines  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_EmptyLines  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	205	None	replace
892	[BUG]  [BUGGY]  return  TAB  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRUARY  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUARY	205	None	replace
893	[BUG]  [BUGGY]  return  END_OF_SURRATOR  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRATOR  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRATOR  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRATOR  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRATOR	205	None	replace
894	[BUG]  [BUGGY]  Int  c  =  getEscapeSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getEscapeSurroundingSpaces();	  return    c    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
895	[BUG]  [BUGGY]  int  c  =  getEscapeSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEscapeSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEscapeSurroundingSpaces().length;	  return    c    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	9	None	replace
896	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	141	None	replace
897	[BUG]  [BUGGY]  return  c  ||  ENDSPACE!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ENDSPACE!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ENDSPACE!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	141	None	replace
898	[BUG]  [BUGGY]  Int  c  =  getCurrentSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getCurrentSurroundingSpaces();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
899	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpaces()  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpaces()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  int  c  =  getCurrentSurroundingSpaces()  +  1;	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	137	None	replace
900	[BUG]  [BUGGY]  case  END:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [CE]  cannot  find  symbol  END  [FE]        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END:  throw  new  IOException( "EOF  while  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END	124	None	replace
901	[BUG]  [BUGGY]  case  RECORD:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  cannot  find  symbol  RECORD  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  RECORD:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  RECORD:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  RECORD	124	None	replace
902	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'e'  ||  c  ==  'E')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
903	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
904	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'e'  ||  c  ==  'E')  {  records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
905	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	18	None	replace
906	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
907	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SOURCE;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SOURCE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SOURCE;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
908	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SURRUING;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces!=  END_OF_SURRUING;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	18	None	replace
909	[BUG]  [BUGGY]  Int  c  =  getEscapeSurroundingSpaces().size();  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getEscapeSurroundingSpaces().size();	  return    c    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
910	[BUG]  [BUGGY]  return  CSVFormat.END_OBJECT_STREAM  *  2;  [CE]  cannot  find  symbol  END_OBJECT_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OBJECT_STREAM  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OBJECT_STREAM  *  2;	  return    CSVFormat.END_OF_STREAM    *    2;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT_STREAM	185	None	replace
911	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  *  2  +  1;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  *  2  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  *  2  +  1;	  return    CSVFormat.END_OF_STREAM    *    2;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	185	None	replace
912	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getEscapeChar();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  c  =  getEscapeChar();	  return    END_OF_STREAM;    int    c    =    getEscapeChar();    	non-compiled	[CE]  orphaned  case	172	None	replace
913	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  c  =  getEscapeChar();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  c  =  getEscapeChar();	  return    END_OF_STREAM;    int    c    =    getEscapeChar();    	non-compiled	[CE]  orphaned  case	172	None	replace
914	[BUG]  [BUGGY]  return  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_OF_BACKSPACE  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_BACKSPACE;	  return    TAB;    	non-compiled	[CE]  cannot  find  symbol  END_OF_BACKSPACE	2	None	replace
915	[BUG]  [BUGGY]  return  END_OF_FUNCTION;  [CE]  cannot  find  symbol  END_OF_FUNCTION  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_FUNCTION;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_FUNCTION;	  return    TAB;    	non-compiled	[CE]  cannot  find  symbol  END_OF_FUNCTION	2	None	replace
916	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  new  IOException( "EOF  whilst  processing  escape  sequence ",  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	66	None	replace
917	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ",  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	66	None	replace
918	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence, ",  c);  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence, ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence, ",  c);	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ",    c);    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	66	None	replace
919	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  END_OF_STREAM  +  4;	  return    END_OF_STREAM    +    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	101	9	replace
920	[BUG]  [BUGGY]  return  END_OF_STREAM  +  4;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  4;	  return    END_OF_STREAM    +    2;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	101	9	replace
921	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence, ");  [CE]  duplicate  case  label  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence, ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence, ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence,   ");    	non-compiled	[CE]  duplicate  case  label	68	None	replace
922	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence, ");  [CE]  duplicate  case  label  [FE]                    IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence, ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence, ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence,   ");    	non-compiled	[CE]  duplicate  case  label	68	None	replace
923	[BUG]  [BUGGY]  return  STREAM.intValue();  [CE]  cannot  find  symbol  STREAM  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  STREAM.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  STREAM.intValue();	  return    END_OF_STREAM.intValue()    +    2;    	non-compiled	[CE]  cannot  find  symbol  STREAM	151	None	replace
924	[BUG]  [BUGGY]  return  b  ||  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  b  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  b  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b  ||  END_OF_STREAM  +  1;	  return    b    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  b	180	None	replace
925	[BUG]  [BUGGY]  return  END  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  END_OF_STREAM;	  return    b    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END	180	None	replace
926	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SPACE;  [CE]  cannot  find  symbol  END_OF_SPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SPACE;	  return    b    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SPACE	180	None	replace
927	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	146	None	replace
928	[BUG]  [BUGGY]  return  END_OF_SURRUING_SPACE  +  1;  [CE]  cannot  find  symbol  END_OF_SURRUING_SPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRUING_SPACE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUING_SPACE  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING_SPACE	44	None	replace
929	[BUG]  [BUGGY]  return  RECORD_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  RECORD_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  RECORD_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD_OF_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  RECORD_OF_SURroundingSpaces	44	None	replace
930	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  +  8;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  +  8;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  +  8;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	44	None	replace
931	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  +  3;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  +  3;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	44	None	replace
932	[BUG]  [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  Record  do  not  match  expected  result(entry  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
933	[BUG]  [BUGGY]  return  END_OF_STREAM.intValue()  *  1;  [CE]  int  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.intValue()  *  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.intValue()  *  1;	  return    END_OF_STREAM.intValue()    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	83	None	replace
934	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
935	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
936	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  else  {  throw  new  IllegalStateException( " ");  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
937	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  else  {  throw  new  IOException( " ");  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  else  {  throw  new  IOException( " ");  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
938	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  -  1;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
939	[BUG]  [BUGGY]  return  TAB;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
940	[BUG]  [BUGGY]  return  TAB  +  1;  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  +  1;  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	49	None	replace
941	[BUG]  [BUGGY]  while(c  <  getSurroundingSpaces().size())  {  c  =  getSurroundingSpaces().size();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  getSurroundingSpaces().size())  {  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  getSurroundingSpaces().size())  {  c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  orphaned  case	165	None	replace
942	[BUG]  [BUGGY]  while(c  <  getSurroundingSpaces().size())  {  return  END_OF_STREAM;  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  getSurroundingSpaces().size())  {  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  getSurroundingSpaces().size())  {  return  END_OF_STREAM;	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  orphaned  case	165	None	replace
943	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  DISABLED  +  1;	  return    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	121	9	replace
944	[BUG]  [BUGGY]  return  DISABLED  +  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  +  1;	  return    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	121	9	replace
945	[BUG]  [BUGGY]  return  DISABLED  ||  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  DISABLED;	  return    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	121	None	replace
946	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  END_OF_STREAM;	  return    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	121	None	replace
947	[BUG]  [BUGGY]  return  DISABLED  ||  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  END_OF_SURroundingSpaces;	  return    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	121	None	replace
948	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	35	None	add
949	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	35	None	add
950	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(result  0)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(result  0)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Record  do  not  match  expected  result(result  0)	  	non-compiled	[CE]  not  a  statement	35	None	add
951	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  	non-compiled	[CE]  not  a  statement	35	None	add
952	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	35	None	add
953	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Context.codeBug();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Context.codeBug();	  	non-compiled	[CE]  cannot  find  symbol  Context	35	None	add
954	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  >>  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  >>  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  >>  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	16	None	replace
955	[BUG]  [BUGGY]  return  BACKSPACE.intValue()  -  1;  [CE]  char  cannot  be  dereferenced  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.intValue()  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.intValue()  -  1;	  return    BACKSPACE.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
956	[BUG]  [BUGGY]  return  BACKSPACE.longValue();  [CE]  char  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE.longValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE.longValue();	  return    BACKSPACE.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	85	None	replace
957	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM.longValue();  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM.longValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM.longValue();	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	86	None	replace
958	[BUG]  [BUGGY]  return  TAB  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  END_OF_STREAM;	  return    c    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	74	None	replace
959	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	155	None	replace
960	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	155	None	replace
961	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	155	None	replace
962	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  break;  [CE]  duplicate  case  label  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
963	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  break;  [CE]  duplicate  case  label  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
964	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  break;  [CE]  duplicate  case  label  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
965	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  break;  [CE]  no  suitable  constructor  found  for  IOException(String,int)  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(String,int)	65	None	replace
966	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  8;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  8;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  8;	  return    END_OF_STREAM    ||    END_OF_STREAM    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	134	None	replace
967	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  +  3;	  return    BACKSPACE    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	36	9	replace
968	[BUG]  [BUGGY]  return  BACKSPACE  +  3;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  +  3;	  return    BACKSPACE    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	36	9	replace
969	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  BACKSPACE  +  4;	  return    BACKSPACE    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	36	8	replace
970	[BUG]  [BUGGY]  return  BACKSPACE  +  4;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  +  4;	  return    BACKSPACE    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	36	8	replace
971	[BUG]  [BUGGY]  return  CSVFormat.END_ARRAY  +  1;  [CE]  cannot  find  symbol  END_ARRAY  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_ARRAY  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_ARRAY  +  1;	  return    CSVFormat.END_ARRAY;    	non-compiled	[CE]  cannot  find  symbol  END_ARRAY	129	None	replace
972	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1E;  [CE]  malformed  floating  point  literal  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  1E;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  1E;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  malformed  floating  point  literal	110	None	replace
973	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1B;  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  1B;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  1B;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  ';'  expected	110	None	replace
974	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END;  [CE]  cannot  find  symbol  END  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END	67	None	replace
975	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_EOF;  [CE]  cannot  find  symbol  END_EOF  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_EOF;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_EOF	67	None	replace
976	[BUG]  [BUGGY]  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
977	[BUG]  [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
978	[BUG]  [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
979	[BUG]  [BUGGY]  Result  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Result  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Result  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
980	[BUG]  [BUGGY]  return  CR  ||  c!=  END;  [CE]  cannot  find  symbol  END  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c!=  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  END;	  return    CR    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	15	None	replace
981	[BUG]  [BUGGY]  return  CR  ||  c!=  END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c!=  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c!=  END_BACKSPACE;	  return    CR    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	15	None	replace
982	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
983	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  AB;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  AB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  AB;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
984	[BUG]  [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
985	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_SURroundingSpaces;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	131	None	replace
986	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_SPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_SPACE;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	131	None	replace
987	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM!=  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	87	None	replace
988	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM!=  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  END_OF_STREAM!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	87	None	replace
989	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  END_OF_STREAM  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  END_OF_STREAM  >=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	replace
990	[BUG]  [BUGGY]  return  c  &&  END_OF_STREAM  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  &&  END_OF_STREAM  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  &&  END_OF_STREAM  >=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	replace
991	[BUG]  [BUGGY]  return  CSVFormat.NUMBER_OBJECT;  [CE]  cannot  find  symbol  NUMBER_OBJECT  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.NUMBER_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.NUMBER_OBJECT;	  return    CSVFormat.NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OBJECT	47	None	replace
992	[BUG]  [BUGGY]  return  DISABLED  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
993	[BUG]  [BUGGY]  return  END_SPACE  ||  c!=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_SPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c!=  END_OF_STREAM;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	145	None	replace
994	[BUG]  [BUGGY]  return  ENDSPACE  ||  c!=  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c!=  END_OF_STREAM;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	145	None	replace
995	[BUG]  [BUGGY]  return  END_SURroundingSpaces  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURroundingSpaces  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURroundingSpaces  ||  c!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
996	[BUG]  [BUGGY]  return  END  ||  c!=  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c!=  END_OF_STREAM;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	145	None	replace
997	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  +  1L;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  +  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  +  1L;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	40	None	replace
998	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  +  4;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  +  4;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	40	None	replace
999	[BUG]  [BUGGY]  return  c  ||  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  <  =  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1000	[BUG]  [BUGGY]  int  c  =  getSurroundingEmptyLines();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingEmptyLines();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingEmptyLines();	  return    BACKSPACE;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	19	None	replace
1001	[BUG]  [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	206	None	replace
1002	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces  ==  END_EmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
1003	[BUG]  [BUGGY]  return  c  ||  END_SPACE  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SPACE  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SPACE  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	206	None	replace
1004	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getCurrentSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
1005	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
1006	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
1007	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
1008	[BUG]  [BUGGY]  return  END_OBJECT  ||  c  >=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  c  >=  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    >=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	114	None	replace
1009	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  >=  END_OBJECT;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  >=  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  >=  END_OBJECT;	  return    END_OF_STREAM    ||    c    >=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	114	None	replace
1010	[BUG]  [BUGGY]  return  OBJECT  ||  c  >=  END_OF_STREAM;  [CE]  cannot  find  symbol  OBJECT  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  OBJECT  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  OBJECT  ||  c  >=  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    >=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  OBJECT	114	None	replace
1011	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  c  +  1;  int  c  =  getSurroundingSpaces();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  c  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  return  c  +  1;  int  c  =  getSurroundingSpaces();	  return    c    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	8	None	replace
1012	[BUG]  [BUGGY]  while(c  >=  'n')  {  return  c  +  1;  int  c  =  getSurroundingSpaces();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n')  {  return  c  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n')  {  return  c  +  1;  int  c  =  getSurroundingSpaces();	  return    c    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	8	None	replace
1013	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  int  c  =  getSurroundingSpaces();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  int  c  =  getSurroundingSpaces();	  return    c    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	8	None	replace
1014	[BUG]  [BUGGY]  return  TAB;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	1	None	add
1015	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  >>  return  TAB;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  >>  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  >>  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
1016	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  >>  return  0;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  >>  return  0;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  >>  return  0;	  	non-compiled	[CE]  not  a  statement	1	None	add
1017	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(result  0)  ==  records  do  not  match  expected  result(result  0)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(result  0)  ==  records  do  not  match  expected  result(result  0)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(result  0)  ==  records  do  not  match  expected  result(result  0)	  	non-compiled	[CE]  not  a  statement	1	None	add
1018	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)!=  return  0;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)!=  return  0;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)!=  return  0;	  	non-compiled	[CE]  not  a  statement	1	None	add
1019	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(result  0)  ==  records  do  not  match  expected  result(result  0);  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(result  0)  ==  records  do  not  match  expected  result(result  0);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(result  0)  ==  records  do  not  match  expected  result(result  0);	  	non-compiled	[CE]  not  a  statement	1	None	add
1020	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)!=  return  TAB;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)!=  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)!=  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
1021	[BUG]  [BUGGY]  int  c  =  getIgnoredSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getIgnoredSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getIgnoredSurroundingSpaces().size();	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	replace
1022	[BUG]  [BUGGY]  return  DISABLED  ||  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	204	None	replace
1023	[BUG]  [BUGGY]  return  TAB  ||  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	204	None	replace
1024	[BUG]  [BUGGY]  return  END_OF_SURRUING_SPACE  ||  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURRUING_SPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRUING_SPACE  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUING_SPACE  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING_SPACE	204	None	replace
1025	[BUG]  [BUGGY]  return  END_OF_SURRING_SPACE  ||  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURRING_SPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRING_SPACE  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRING_SPACE  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRING_SPACE	204	None	replace
1026	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces();  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	28	None	replace
1027	[BUG]  [BUGGY]  Int  c  =  getSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getSurroundingSpaces();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
1028	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_OF_STREAM;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	62	None	replace
1029	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SURRINGS;  [CE]  cannot  find  symbol  END_SURRINGS  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SURRINGS;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_SURRINGS;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURRINGS	62	None	replace
1030	[BUG]  [BUGGY]  return  CSVFormat.intValue()  -  1;  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.intValue()  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.intValue()  -  1;	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1031	[BUG]  [BUGGY]  return  CSVFormat.delimiter();  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.delimiter();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.delimiter();	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1032	[BUG]  [BUGGY]  return  CSVFormat.intValue()  -  2;  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.intValue()  -  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.intValue()  -  2;	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1033	[BUG]  [BUGGY]  result  =  END_OF_STREAM.result;  [CE]  cannot  find  symbol  result  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM.result;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM.result;	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
1034	[BUG]  [BUGGY]  result  =  END_OF_STREAM.intValue();  [CE]  cannot  find  symbol  result  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM.intValue();	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
1035	[BUG]  [BUGGY]  result  =  END_OF_STREAM.doubleValue();  [CE]  cannot  find  symbol  result  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM.doubleValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM.doubleValue();	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
1036	[BUG]  [BUGGY]  result  =  END_OF_STREAM.clone();  [CE]  cannot  find  symbol  result  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM.clone();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM.clone();	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	170	None	replace
1037	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  END_OF_STREAM  -  1;	  return    CSVFormat.END_OF_STREAM    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	184	9	replace
1038	[BUG]  [BUGGY]  return  END_OF_STREAM  -  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  -  1;	  return    CSVFormat.END_OF_STREAM    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	184	9	replace
1039	[BUG]  [BUGGY]  return  NUMBER.intValue();  [CE]  cannot  find  symbol  NUMBER  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER.intValue();	  return    b.intValue();    	non-compiled	[CE]  cannot  find  symbol  NUMBER	150	None	replace
1040	[BUG]  [BUGGY]  return  TAB.intValue();  [CE]  char  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB.intValue();	  return    b.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	150	None	replace
1041	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  ==  END_OF_EXPECTED;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  ==  END_OF_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  ==  END_OF_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	207	None	replace
1042	[BUG]  [BUGGY]  return  ACC_SYNTHETIC;  [CE]  cannot  find  symbol  ACC_SYNTHETIC  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACC_SYNTHETIC;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACC_SYNTHETIC;	  return    END_OF_STREAM;    return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ACC_SYNTHETIC	29	None	replace
1043	[BUG]  [BUGGY]  Int  c  =  readEscapeSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  readEscapeSurroundingSpaces();	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1044	[BUG]  [BUGGY]  long  c  =  readEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  long  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	long  c  =  readEscapeSurroundingSpaces();	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
1045	[BUG]  [BUGGY]  int  c  =  readEscapeSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  readEscapeSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  readEscapeSurroundingSpaces().length;	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
1046	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  c;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  c;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1047	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END  +  1;  [CE]  cannot  find  symbol  END  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END  +  1;	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  cannot  find  symbol  END	139	None	replace
1048	[BUG]  [BUGGY]  return  END_OF_NUMBER;  [CE]  cannot  find  symbol  END_OF_NUMBER  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_NUMBER;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_NUMBER;	  return    CSV_SIZE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_NUMBER	5	None	replace
1049	[BUG]  [BUGGY]  return  END_OF_LINES;  [CE]  cannot  find  symbol  END_OF_LINES  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_LINES;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_LINES;	  return    CSV_SIZE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_LINES	5	None	replace
1050	[BUG]  [BUGGY]  return  END_OF_SLASH;  [CE]  cannot  find  symbol  END_OF_SLASH  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SLASH;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SLASH;	  return    CSV_SIZE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SLASH	5	None	replace
1051	[BUG]  [BUGGY]  result  =  RECORD;  [CE]  cannot  find  symbol  result  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  RECORD;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  RECORD;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
1052	[BUG]  [BUGGY]  result  =  END_OF_STREAM  +  2;  [CE]  cannot  find  symbol  result  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  +  2;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
1053	[BUG]  [BUGGY]  return  ENDSPACE  ||  ignoreEmptyLines  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  ignoreEmptyLines  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  ignoreEmptyLines  ==  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    ==    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	58	None	replace
1054	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  orphaned  case	54	None	replace
1055	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  orphaned  case	54	None	replace
1056	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c!=  'r')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c!=  'r')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c!=  'r')  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  orphaned  case	54	None	replace
1057	[BUG]  [BUGGY]  return  c  >  END_OF_SURroundingSpaces  &&  c  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >  END_OF_SURroundingSpaces  &&  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_SURroundingSpaces  &&  c  <  =  END_OF_SURroundingSpaces;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1058	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  1;  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	50	None	replace
1059	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpaces();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	50	None	replace
1060	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	50	None	replace
1061	[BUG]  [BUGGY]  return  DISABLED  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c!=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	17	None	replace
1062	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c!=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	17	None	replace
1063	[BUG]  [BUGGY]  return  END  ||  c!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c!=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	17	None	replace
1064	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  c  >>  DISABLED;	  return    c    >>    END_OF_SURroundingSpaces;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	190	9	replace
1065	[BUG]  [BUGGY]  return  c  >>  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  DISABLED;	  return    c    >>    END_OF_SURroundingSpaces;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	190	9	replace
1066	[BUG]  [BUGGY]  return  c  >>  END_OF_SURRUING;  [CE]  cannot  find  symbol  END_OF_SURRUING  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  END_OF_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  END_OF_SURRUING;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING	190	None	replace
1067	[BUG]  [BUGGY]  return  c!=  DISABLED;  [CE]  incompatible  types  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  DISABLED;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	190	None	replace
1068	[BUG]  [BUGGY]  return  c  >=  DISABLED;  [CE]  incompatible  types  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  DISABLED;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	190	None	replace
1069	[BUG]  [BUGGY]  return  ENDSPACE  ||  c!=  END_OBJECT;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c!=  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c!=  END_OBJECT;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	144	None	replace
1070	[BUG]  [BUGGY]  return  OBJECT  ||  c!=  END_OF_STREAM;  [CE]  cannot  find  symbol  OBJECT  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  OBJECT  ||  c!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  OBJECT  ||  c!=  END_OF_STREAM;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  OBJECT	144	None	replace
1071	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	196	None	replace
1072	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  illegal  line  end  in  character  literal	196	None	replace
1073	[BUG]  [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	196	None	replace
1074	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
1075	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  illegal  line  end  in  character  literal	196	None	replace
1076	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
1077	[BUG]  [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
1078	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  END_SURroundingSpaces;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	109	None	replace
1079	[BUG]  [BUGGY]  return  END  ||  c  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c  ==  END_OF_STREAM;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	109	None	replace
1080	[BUG]  [BUGGY]  return  ACCESS  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  ACCESS  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACCESS  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACCESS  ||  c  ==  END_SURroundingSpaces;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ACCESS	109	None	replace
1081	[BUG]  [BUGGY]  return  RECORD  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  RECORD  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  RECORD  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD  ||  c  ==  END_SURroundingSpaces;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  RECORD	109	None	replace
1082	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	60	None	replace
1083	[BUG]  [BUGGY]  return  END  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	60	None	replace
1084	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	60	None	replace
1085	[BUG]  [BUGGY]  return  END_OF_SURroundingSpace;  [CE]  cannot  find  symbol  END_OF_SURroundingSpace  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpace;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpace;	  return    TEXT;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpace	119	None	replace
1086	[BUG]  [BUGGY]  return  END_OF_Escape;  [CE]  cannot  find  symbol  END_OF_Escape  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_Escape;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_Escape;	  return    TEXT;    	non-compiled	[CE]  cannot  find  symbol  END_OF_Escape	119	None	replace
1087	[BUG]  [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
1088	[BUG]  [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
1089	[BUG]  [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	154	None	replace
1090	[BUG]  [BUGGY]  record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	162	None	replace
1091	[BUG]  [BUGGY]  c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	162	None	replace
1092	[BUG]  [BUGGY]  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result(c)  ==  records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	162	None	replace
1093	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  Integer.MAX_VALUE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  Integer.MAX_VALUE  +  1;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	11	9	replace
1094	[BUG]  [BUGGY]  return  Integer.MAX_VALUE  +  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  Integer.MAX_VALUE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  Integer.MAX_VALUE  +  1;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	11	9	replace
1095	[BUG]  [BUGGY]  int  c  =  Integer.MIN_VALUE;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  Integer.MIN_VALUE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  Integer.MIN_VALUE;	  return    c    +    1;    int    c    =    Integer.MAX_VALUE;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	11	None	replace
1096	[BUG]  [BUGGY]  return  END_OF_SECOND;  [CE]  cannot  find  symbol  END_OF_SECOND  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SECOND;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SECOND;	  return    RECORD;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SECOND	122	None	replace
1097	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	132	None	replace
1098	[BUG]  [BUGGY]  return  END_SPACE  ||  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    END_OF_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	132	None	replace
1099	[BUG]  [BUGGY]  return  BACKSPACE  -  1L;  [CE]  possible  loss  of  precision  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  -  1L;	  return    BACKSPACE    -    1;    	non-compiled	[CE]  possible  loss  of  precision	105	None	replace
1100	[BUG]  [BUGGY]  return  ENDSPACE  |  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	148	None	replace
1101	[BUG]  [BUGGY]  return  ENDSPACE  |  NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  |  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  |  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	148	None	replace
1102	[BUG]  [BUGGY]  return  END_OF_STREAM  |  NUMBER_OBJECT;  [CE]  cannot  find  symbol  NUMBER_OBJECT  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  |  NUMBER_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  |  NUMBER_OBJECT;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OBJECT	148	None	replace
1103	[BUG]  [BUGGY]  return  END  |  NUMBER_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  |  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  |  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END	148	None	replace
1104	[BUG]  [BUGGY]  return  ACCESS  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  ACCESS  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACCESS  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACCESS  ||  c!=  END_SURroundingSpaces;	  return    ENDSPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ACCESS	143	None	replace
1105	[BUG]  [BUGGY]  return  c  ||  c  >=  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  >=  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >=  DISABLED;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	193	None	replace
1106	[BUG]  [BUGGY]  return  c  ||  c  >=  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  >=  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  >=  END_EmptyLines;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	193	None	replace
1107	[BUG]  [BUGGY]  return  c  ||  RECORD  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  RECORD  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  RECORD  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  RECORD  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  RECORD	107	None	replace
1108	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_EmptyLines;	  return    c    ||    END_OF_STREAM    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	107	None	replace
1109	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(entry  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	199	None	replace
1110	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry  +  1);  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry  +  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result(entry  +  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	199	None	replace
1111	[BUG]  [BUGGY]  return  0;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  0;  Record  do  not  match  expected  result(entry  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	199	None	replace
1112	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry.length  -  1);  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry.length  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result(entry.length  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	199	None	replace
1113	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB;  Record  do  not  match  expected  result(entry  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	199	None	replace
1114	[BUG]  [BUGGY]  return  c  ||  END_EmptyLines  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_EmptyLines  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_EmptyLines  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	89	None	replace
1115	[BUG]  [BUGGY]  return  AB  +  1;  [CE]  cannot  find  symbol  AB  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  AB  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  AB  +  1;	  return    TAB    +    1;    	non-compiled	[CE]  cannot  find  symbol  AB	99	None	replace
1116	[BUG]  [BUGGY]  return  ACCESS  +  1;  [CE]  cannot  find  symbol  ACCESS  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACCESS  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACCESS  +  1;	  return    TAB    +    1;    	non-compiled	[CE]  cannot  find  symbol  ACCESS	99	None	replace
1117	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  TAB  +  2;	  return    TAB    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	99	9	replace
1118	[BUG]  [BUGGY]  return  TAB  +  2;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  +  2;	  return    TAB    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	99	9	replace
1119	[BUG]  [BUGGY]  return  DISABLED  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	112	None	replace
1120	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	112	None	replace
1121	[BUG]  [BUGGY]  return  END  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c  >=  END_OF_SURroundingSpaces;	  return    END_SPACE    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	112	None	replace
1122	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	104	None	add
1123	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	104	None	add
1124	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	104	None	add
1125	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  int  BACKSPACE  =  getSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  int  BACKSPACE  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    int  BACKSPACE  =  getSurroundingSpaces();	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
1126	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Document  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	104	None	add
1127	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  int  BACKSPACE  =  getSurroundingSpaces().size();  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  int  BACKSPACE  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    int  BACKSPACE  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  cannot  find  symbol	104	None	add
1128	[BUG]  [BUGGY]  record  does  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	164	None	replace
1129	[BUG]  [BUGGY]  c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	164	None	replace
1130	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	164	None	replace
1131	[BUG]  [BUGGY]  result  =  expectedResult(c)  ==  Records  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  expectedResult(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  expectedResult(c)  ==  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	164	None	replace
1132	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	194	None	replace
1133	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  illegal  line  end  in  character  literal	194	None	replace
1134	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  '	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  illegal  line  end  in  character  literal	194	None	replace
1135	[BUG]  [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	194	None	replace
1136	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1137	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1138	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  illegal  line  end  in  character  literal	194	None	replace
1139	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpace();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpace();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  orphaned  case	178	None	replace
1140	[BUG]  [BUGGY]  while(c  >=  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  1;  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  orphaned  case	178	None	replace
1141	[BUG]  [BUGGY]  return  c  ||  c  ==  END;  [CE]  cannot  find  symbol  END  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	208	None	replace
1142	[BUG]  [BUGGY]  return  c  ||  c  ==  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_EmptyLines;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	208	None	replace
1143	[BUG]  [BUGGY]  return  c  ||  c  ==  END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_BACKSPACE;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	208	None	replace
1144	[BUG]  [BUGGY]  return  c  ||  c  ==  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_OBJECT;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	208	None	replace
1145	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	133	None	replace
1146	[BUG]  [BUGGY]  return  TAB  ||  END_OF_SCRIPT;  [CE]  cannot  find  symbol  END_OF_SCRIPT  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  END_OF_SCRIPT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  END_OF_SCRIPT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SCRIPT	133	None	replace
1147	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OBJECT;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	133	None	replace
1148	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	98	None	add
1149	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(result  0)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(result  0)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(result  0)	  	non-compiled	[CE]  not  a  statement	98	None	add
1150	[BUG]  [BUGGY]  return  TAB  +  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	98	None	add
1151	[BUG]  [BUGGY]  return  TAB  +  1;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  Collections	98	None	add
1152	[BUG]  [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  	non-compiled	[CE]  not  a  statement	98	None	add
1153	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	98	None	add
1154	[BUG]  [BUGGY]  return  TAB  +  1;  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Context.codeBug();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Context.codeBug();	  	non-compiled	[CE]  cannot  find  symbol  Context	98	None	add
1155	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpace();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpace();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  orphaned  case	171	None	replace
1156	[BUG]  [BUGGY]  Int  c  =  getSurroundingSpace();  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getSurroundingSpace();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1157	[BUG]  [BUGGY]  return  DETERMINISTIC_SURroundingSpaces;  [CE]  cannot  find  symbol  DETERMINISTIC_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DETERMINISTIC_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DETERMINISTIC_SURroundingSpaces;	  return    CSV_STREAM;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_SURroundingSpaces	4	None	replace
1158	[BUG]  [BUGGY]  return  DETERMINISTIC_EXPR_STREAM;  [CE]  cannot  find  symbol  DETERMINISTIC_EXPR_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DETERMINISTIC_EXPR_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DETERMINISTIC_EXPR_STREAM;	  return    CSV_STREAM;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_EXPR_STREAM	4	None	replace
1159	[BUG]  [BUGGY]  return  DETERMINISTIC_BACKSPACE;  [CE]  cannot  find  symbol  DETERMINISTIC_BACKSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DETERMINISTIC_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DETERMINISTIC_BACKSPACE;	  return    CSV_STREAM;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_BACKSPACE	4	None	replace
1160	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	189	None	replace
1161	[BUG]  [BUGGY]  return  c  <  END_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  END_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  END_OF_SURroundingSpaces.length;	  return    c    <    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	189	None	replace
1162	[BUG]  [BUGGY]  Int  c  =  getSurroundingSpaces().size();  [CE]  cannot  find  symbol  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getSurroundingSpaces().size();	  return    c    +    1;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
1163	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	61	None	replace
1164	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SOURCE;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SOURCE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SOURCE;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	61	None	replace
1165	[BUG]  [BUGGY]  return  ENDSPACE  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	61	None	replace
1166	[BUG]  [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  CSV  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_SURroundingSpaces  ==  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV	61	None	replace
1167	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SECOND;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SECOND;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  ==  END_OF_SECOND;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	61	None	replace
1168	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence. ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence.   ");    	non-compiled	[CE]  duplicate  case  label	64	None	replace
1169	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence. ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence.   ");    	non-compiled	[CE]  duplicate  case  label	64	None	replace
1170	[BUG]  [BUGGY]  return  ACCESS;  [CE]  cannot  find  symbol  ACCESS  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACCESS;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACCESS;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  ACCESS	123	None	replace
1171	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getCurrentSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getCurrentSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
1172	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
1173	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
1174	[BUG]  [BUGGY]  return  CR;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	91	None	add
1175	[BUG]  [BUGGY]  return  CR;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	91	None	add
1176	[BUG]  [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(getEscapeChar());  [CE]  cannot  find  symbol  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  Integer.parseInt(getEscapeChar());  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  Integer.parseInt(getEscapeChar());	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
1177	[BUG]  [BUGGY]  return  CR;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  	non-compiled	[CE]  not  a  statement	91	None	add
1178	[BUG]  [BUGGY]  return  CR;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Record  do  not  match  expected  result(false)	  	non-compiled	[CE]  not  a  statement	91	None	add
1179	[BUG]  [BUGGY]  return  CR;  Collections.sort(readEscapes());  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Collections.sort(readEscapes());  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Collections.sort(readEscapes());	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
1180	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  >=  END_EmptyLines;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  >=  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  >=  END_EmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	115	None	replace
1181	[BUG]  [BUGGY]  return  CR  ||  c  >=  END;  [CE]  cannot  find  symbol  END  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >=  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >=  END;	  return    CR    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	88	None	replace
1182	[BUG]  [BUGGY]  return  CR  ||  c  >>  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >>  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >>  END_OF_STREAM;	  return    CR    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	88	None	replace
1183	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1184	[BUG]  [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1185	[BUG]  [BUGGY]  return  'u'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'u'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  'u'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1186	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  '	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  illegal  line  end  in  character  literal	195	None	replace
1187	[BUG]  [BUGGY]  return  c;  record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  record  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
1188	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines!=  END_OF_STREAM;  [CE]  incomparable  types:  boolean  and  int  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  ignoreEmptyLines!=  END_OF_STREAM;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  boolean  and  int	14	None	replace
1189	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  *  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM  *  2;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	102	None	replace
1190	[BUG]  [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  +  4;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  END_OF_STREAM  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  END_OF_STREAM  +  4;	  return    BACKSPACE    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	102	None	replace
1191	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  AB;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  AB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result  ()  ==  return  AB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	25	None	replace
1192	[BUG]  [BUGGY]  return  CC  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  CC  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CC  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CC  ||  END_OF_STREAM;	  return    END_OF_STREAM    ||    CR;    	non-compiled	[CE]  cannot  find  symbol  CC	76	None	replace
1193	[BUG]  [BUGGY]  int  c  =  Integer.parseInt(quoteSurroundingSpaces);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  Integer.parseInt(quoteSurroundingSpaces);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  Integer.parseInt(quoteSurroundingSpaces);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
1194	[BUG]  [BUGGY]  int  c  =  Integer.parseInt(quoeChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  Integer.parseInt(quoeChar);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  Integer.parseInt(quoeChar);	  return    c    +    1;    int    c    =    Integer.parseInt(quoteChar);    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	replace
1195	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  orphaned  case	51	None	replace
1196	[BUG]  [BUGGY]  return  START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  START_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  START_OBJECT;	  return    CSVFormat.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	97	None	replace
1197	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  [CE]  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
1198	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  [CE]  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
1199	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "JSC  while  processing  escape  sequence ");  [CE]  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "JSC  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "JSC  while  processing  escape  sequence ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
1200	[BUG]  [BUGGY]  int  c  =  this.endOfSurroundingSpaces.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.endOfSurroundingSpaces.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.endOfSurroundingSpaces.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
1201	[BUG]  [BUGGY]  int  c  =  data.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  data.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  data.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
1202	[BUG]  [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	55	None	replace
1203	[BUG]  [BUGGY]  RectangleEscapes.EMPTY_STREAM  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  RectangleEscapes.EMPTY_STREAM  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	RectangleEscapes.EMPTY_STREAM  +  1;  Record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	55	None	replace
1204	[BUG]  [BUGGY]  RectangleEscapes.EMPTY_LIST  +  1;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  RectangleEscapes.EMPTY_LIST  +  1;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	RectangleEscapes.EMPTY_LIST  +  1;  Record  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	55	None	replace
1205	[BUG]  [BUGGY]  if(c  ==  'n')  {  return  END_OF_STREAM;  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n')  {  return  END_OF_STREAM;  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n')  {  return  END_OF_STREAM;  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	non-compiled	[CE]  not  a  statement	27	None	replace
1206	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  END_OF_STREAM;  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  END_OF_STREAM;  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  END_OF_STREAM;  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	non-compiled	[CE]  not  a  statement	27	None	replace
1207	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
1208	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
1209	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  END_OF_STREAM;  }  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	non-compiled	[CE]  not  a  statement	27	None	replace
1210	[BUG]  [BUGGY]  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'e'  ||  c  ==  'E')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
1211	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'e'  ||  c  ==  'E')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  IOException  	27	9	replace
1212	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
1213	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	27	9	replace
1214	[BUG]  [BUGGY]  return  NUMBER_OF_SURRUING_SPACE;  [CE]  cannot  find  symbol  NUMBER_OF_SURRUING_SPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_SURRUING_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_SURRUING_SPACE;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_SURRUING_SPACE	46	None	replace
1215	[BUG]  [BUGGY]  return  END_OF_SURroundINGSpaces.length;  [CE]  cannot  find  symbol  END_OF_SURroundINGSpaces  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundINGSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundINGSpaces.length;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundINGSpaces	46	None	replace
1216	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  AB;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  AB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  AB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	200	None	replace
1217	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	200	None	replace
1218	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  END_OF_STREAM;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  END_OF_STREAM;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
1219	[BUG]  [BUGGY]  c  =  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
1220	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  END;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  END;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
1221	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalStateException( " ");  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IllegalStateException  	198	9	replace
1222	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalStateException( " ");  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IllegalStateException  	198	9	replace
1223	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  return  BACKSPACE;  }  [CE]  unreachable  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	non-compiled	[CE]  unreachable  statement	198	None	replace
1224	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	198	8	replace
1225	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  return  BACKSPACE;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	198	8	replace
1226	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IllegalArgumentException  	198	9	replace
1227	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IllegalArgumentException  	198	9	replace
1228	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	168	None	replace
1229	[BUG]  [BUGGY]  return  END_SPACE  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  END_SPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SPACE  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SPACE  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	168	None	replace
1230	[BUG]  [BUGGY]  return  END_OBJECT  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OBJECT  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OBJECT  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	168	None	replace
1231	[BUG]  [BUGGY]  return  END  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END	168	None	replace
1232	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  ignoreSurroundingSpaces;  [CE]  incomparable  types:  int  and  boolean  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  ==  ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  ignoreSurroundingSpaces;	  return    c    ||    END_OF_STREAM    <    =    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	71	None	replace
1233	[BUG]  [BUGGY]  return  BACKSPACE  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_BACKSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	108	None	replace
1234	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  ==  END_BACKSPACE;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  c  ==  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  c  ==  END_BACKSPACE;	  return    END_BACKSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	108	None	replace
1235	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  1L;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  1L;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
1236	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  4;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  4;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  4;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
1237	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  0;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  0;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  +  0;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
1238	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1239	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  unclosed  character  literal	33	None	replace
1240	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  '	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  line  end  in  character  literal	33	None	replace
1241	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  unclosed  character  literal	33	None	replace
1242	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_  [CE]  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  	33	None	replace
1243	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_  [CE]  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  	33	None	replace
1244	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM  +  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  END_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM  +  2;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	79	None	replace
1245	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM,  DISABLED;  [CE]  ';'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  END_OF_STREAM,  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM,  DISABLED;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	79	None	replace
1246	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM  *  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  END_OF_STREAM  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM  *  2;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	79	None	replace
1247	[BUG]  [BUGGY]  result  =  Record.matches(entry)?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.matches(entry)?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.matches(entry)?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  result	176	None	replace
1248	[BUG]  [BUGGY]  return  ACC_END_OF_STREAM  &&  c;  [CE]  cannot  find  symbol  ACC_END_OF_STREAM  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ACC_END_OF_STREAM  &&  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ACC_END_OF_STREAM  &&  c;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  cannot  find  symbol  ACC_END_OF_STREAM	80	None	replace
1249	[BUG]  [BUGGY]  return  escape  &&  c;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  escape  &&  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  escape  &&  c;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	80	None	replace
1250	[BUG]  [BUGGY]  return  b  &&  c;  [CE]  cannot  find  symbol  b  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  b  &&  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b  &&  c;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  cannot  find  symbol  b	80	None	replace
1251	[BUG]  [BUGGY]  return  END_OF_STREAM  |&  c;  [CE]  illegal  start  of  expression  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  |&  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  |&  c;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1252	[BUG]  [BUGGY]  int  c  =  getIgnoredSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getIgnoredSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getIgnoredSurroundingSpaces().length;	  return    BACKSPACE;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	23	None	replace
1253	[BUG]  [BUGGY]  return  'n';  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	174	None	add
1254	[BUG]  [BUGGY]  return  'n';  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	174	None	add
1255	[BUG]  [BUGGY]  return  'n';  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
1256	[BUG]  [BUGGY]  return  'n';  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  	non-compiled	[CE]  not  a  statement	174	None	add
1257	[BUG]  [BUGGY]  return  'n';  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
1258	[BUG]  [BUGGY]  return  'n';  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
1259	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c.length  *  2;  [CE]  int  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c.length  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c.length  *  2;	  return    END_OF_STREAM    ||    c.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	78	None	replace
1260	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	100	None	add
1261	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    Record  do  not  match  expected  result(c)  ==  Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	100	None	add
1262	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  int  c  =  getEscapeSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    int  c  =  getEscapeSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	100	None	add
1263	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  ==  END_OBJECT;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  ==  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  ==  END_OBJECT;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	116	None	replace
1264	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_OBJECT;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	116	None	replace
1265	[BUG]  [BUGGY]  Int  c  =  getCurrentSurroundingSpace();  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Int  c  =  getCurrentSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Int  c  =  getCurrentSurroundingSpace();	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1266	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpace()  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpace()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  int  c  =  getCurrentSurroundingSpace()  +  1;	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	140	None	replace
1267	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  duplicate  case  label	63	None	replace
1268	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  duplicate  case  label	63	None	replace
1269	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  END_OF_STREAM  +  3;	  return    END_OF_STREAM    +    1;    return    END_OF_STREAM    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	152	9	replace
1270	[BUG]  [BUGGY]  return  END_OF_STREAM  +  3;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  +  3;	  return    END_OF_STREAM    +    1;    return    END_OF_STREAM    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	152	9	replace
1271	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  break  c;  [CE]  undefined  label:  c  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence. ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
1272	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  break  c;  [CE]  undefined  label:  c  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "TODO  while  processing  escape  sequence ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
1273	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  break  c;  [CE]  undefined  label:  c  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "JSC  whilst  processing  escape  sequence ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
1274	[BUG]  [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Record  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	120	None	add
1275	[BUG]  [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(commmentStart)  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(commmentStart)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Document  do  not  match  expected  result(commmentStart)	  	non-compiled	[CE]  not  a  statement	120	None	add
1276	[BUG]  [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(commmentStart)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(commmentStart)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Record  do  not  match  expected  result(commmentStart)	  	non-compiled	[CE]  not  a  statement	120	None	add
1277	[BUG]  [BUGGY]  return  DISABLED;  int  commmentStart  =  readEscape(c);  [CE]  method  readEscape  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  commmentStart  =  readEscape(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  commmentStart  =  readEscape(c);	  	non-compiled	[CE]  method  readEscape  in  class  Lexer  cannot  be  applied  to  given  types;	120	None	add
1278	[BUG]  [BUGGY]  return  DISABLED;  Collections.sort(readEscapes());  [CE]  cannot  find  symbol  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Collections.sort(readEscapes());  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Collections.sort(readEscapes());	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
1279	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
1280	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
1281	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  else  {  throw  new  IllegalStateException( " ");  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
1282	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  else  {  throw  new  IOException( " ");  }  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  else  {  throw  new  IOException( " ");  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
1283	[BUG]  [BUGGY]  return  CSVFormat.END  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END  ||  END_OF_STREAM;	  return    CSVFormat.END;    	non-compiled	[CE]  cannot  find  symbol  END	130	None	replace
1284	[BUG]  [BUGGY]  return  CSVFormat.END  -  1;  [CE]  cannot  find  symbol  END  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END  -  1;	  return    CSVFormat.END;    	non-compiled	[CE]  cannot  find  symbol  END	130	None	replace
1285	[BUG]  [BUGGY]  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
1286	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
1287	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
1288	[BUG]  [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
1289	[BUG]  [BUGGY]  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1290	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1291	[BUG]  [BUGGY]  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1292	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1293	[BUG]  [BUGGY]  return  Integer.intValue();  [CE]  non-static  method  intValue()  cannot  be  referenced  from  a  static  context  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  Integer.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  Integer.intValue();	  return    in.intValue();    	non-compiled	[CE]  non-static  method  intValue()  cannot  be  referenced  from  a  static  context	187	None	replace
1294	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  COMMENTStart;  [CE]  cannot  find  symbol  COMMENTStart  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  COMMENTStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  COMMENTStart;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  cannot  find  symbol  COMMENTStart	181	None	replace
1295	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DEPRECATED;  [CE]  cannot  find  symbol  DEPRECATED  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DEPRECATED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DEPRECATED;	  return    END_OF_STREAM    ||    escapeChar;    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	181	None	replace
1296	[BUG]  [BUGGY]  return  CSVFormat.END_EXPR_STREAM;  [CE]  cannot  find  symbol  END_EXPR_STREAM  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_EXPR_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_EXPR_STREAM;	  return    CSVFormat.END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_EXPR_STREAM	45	None	replace
1297	[BUG]  [BUGGY]  return  CSVFormat.END_SURRUARY;  [CE]  cannot  find  symbol  END_SURRUARY  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURRUARY;	  return    CSVFormat.END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURRUARY	45	None	replace
1298	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  1L;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  +  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  +  1L;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
1299	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  -  1;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  -  1;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
1300	[BUG]  [BUGGY]  return  ENDSPACE  ||  c  ==  END_EmptyLines;  [CE]  cannot  find  symbol  ENDSPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ENDSPACE  ||  c  ==  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ENDSPACE  ||  c  ==  END_EmptyLines;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  ENDSPACE	209	None	replace
1301	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_SPACE;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	209	None	replace
1302	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
1303	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1304	[BUG]  [BUGGY]  return  CR  ||  c  ==  END;  [CE]  cannot  find  symbol  END  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	59	None	replace
1305	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_BACKSPACE;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_BACKSPACE;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	59	None	replace
1306	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_AB;  [CE]  cannot  find  symbol  END_OF_AB  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_AB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_AB;	  return    END_OF_STREAM    ||    escape;    	non-compiled	[CE]  cannot  find  symbol  END_OF_AB	179	None	replace
1307	[BUG]  [BUGGY]  return  c  ||  ignoreSurroundingSpaces  <  =  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreSurroundingSpaces  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreSurroundingSpaces  <  =  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1308	[BUG]  [BUGGY]  c  +=  getSurroundingSpace();  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  +=  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  +=  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	183	None	replace
1309	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  +  2;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  +  2;	  return    NUMBER_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	147	None	replace
1310	[BUG]  [BUGGY]  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  TAB;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
1311	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  TAB;  }  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  TAB;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
1312	[BUG]  [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(true)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE;  Record  do  not  match  expected  result(true)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  BACKSPACE;  Record  do  not  match  expected  result(true)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1313	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB;  Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1314	[BUG]  [BUGGY]  return  0;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  0;  Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1315	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  &&!ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  &&!ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  &&!ignoreEmptyLines;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1316	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  &&!ignoredEmptyLines;  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  &&!ignoredEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  &&!ignoredEmptyLines;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1317	[BUG]  [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;	  return    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1318	[BUG]  [BUGGY]  throw  new  IOException( " ".equals(c));  [CE]  no  suitable  constructor  found  for  IOException(boolean)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( " ".equals(c));  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	throw  new  IOException( " ".equals(c));	  return    0;    	non-compiled	[CE]  no  suitable  constructor  found  for  IOException(boolean)	118	None	replace
1319	[BUG]  [BUGGY]  return  RECORD  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  RECORD  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  RECORD  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  RECORD  ||  c  ==  END_OF_SURroundingSpaces;	  return    ENDSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  RECORD	106	None	replace
1320	[BUG]  [BUGGY]  return  c  >=  END_OF_SURRUING;  [CE]  cannot  find  symbol  END_OF_SURRUING  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURRUING;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURRUING;	  return    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING	191	None	replace
1321	[BUG]  [BUGGY]  return  c  >=  END_OF_SURRUING_SPACE;  [CE]  cannot  find  symbol  END_OF_SURRUING_SPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURRUING_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURRUING_SPACE;	  return    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING_SPACE	191	None	replace
1322	[BUG]  [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURroundingSpaces  +  1;	  return    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	191	None	replace
1323	[BUG]  [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  [CE]  cannot  find  symbol  END  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence, ");	  case    END:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END	127	None	replace
1324	[BUG]  [BUGGY]  Case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  case    END:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	127	None	replace
1325	[BUG]  [BUGGY]  while(c  <  =  'n'  ||  c  >=  'r')  {  c  =  getSurroundingSpace();  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  'n'  ||  c  >=  'r')  {  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  'n'  ||  c  >=  'r')  {  c  =  getSurroundingSpace();	  return    BACKSPACE;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1326	[BUG]  [BUGGY]  while(c  <  =  'n'  ||  c  >=  getSurroundingSpace())  {  c  =  getSurroundingSpace();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  'n'  ||  c  >=  getSurroundingSpace())  {  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  'n'  ||  c  >=  getSurroundingSpace())  {  c  =  getSurroundingSpace();	  return    BACKSPACE;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1327	[BUG]  [BUGGY]  return  c  +  2;  return  c  +  2;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  return  c  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    return  c  +  2;	  	non-compiled	[CE]  unreachable  statement	37	None	add
1328	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  readEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  readEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
1329	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    2;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	37	None	add
1330	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  return  c  +  1;  int  c  =  getSurroundingSpace();  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  return  c  +  1;  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  return  c  +  1;  int  c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  orphaned  case	183	None	replace
1331	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  +=  1;  int  c  =  getSurroundingSpace();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  +=  1;  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  +=  1;  int  c  =  getSurroundingSpace();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  orphaned  case	183	None	replace
1332	[BUG]  [BUGGY]  int  c  =  getSurroundingSpace().ignoreEmptyLines();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getSurroundingSpace().ignoreEmptyLines();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getSurroundingSpace().ignoreEmptyLines();	  return    c    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	183	None	replace
1333	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines!=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  ignoreEmptyLines!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	14	None	replace
1334	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM!=  ignoreSurroundingSpaces;  [CE]  incomparable  types:  int  and  boolean  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM!=  ignoreSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM!=  ignoreSurroundingSpaces;	  return    c    ||    END_OF_STREAM!=    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	14	None	replace
1335	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  break  c;  [CE]  undefined  label:  c  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
1336	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "Worst  processing  escape  sequence ");  break  c;  [CE]  undefined  label:  c  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "Worst  processing  escape  sequence ");  break  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "Worst  processing  escape  sequence ");  break  c;	  case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break    c;    	non-compiled	[CE]  undefined  label:  c	125	None	replace
1337	[BUG]  [BUGGY]  return  CR  ||  END_OF_STREAM,  c;  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  END_OF_STREAM,  c;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  END_OF_STREAM,  c;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	79	None	replace
1338	[BUG]  [BUGGY]  return  FRACTION  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  FRACTION  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  FRACTION  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  FRACTION  ||  END_OF_STREAM;	  return    CR    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  FRACTION	79	None	replace
1339	[BUG]  [BUGGY]  return  CR  ||  c  ==  END_OF_SURRUING_SPACE;  [CE]  cannot  find  symbol  END_OF_SURRUING_SPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  ==  END_OF_SURRUING_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  ==  END_OF_SURRUING_SPACE;	  return    CR    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING_SPACE	59	None	replace
1340	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
1341	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)!=  not  a  statement  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)!=  not  a  statement  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)!=  not  a  statement	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
1342	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  >=  not  a  statement  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  >=  not  a  statement  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  >=  not  a  statement	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
1343	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  >>  not  a  statement  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  >>  not  a  statement  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  >>  not  a  statement	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
1344	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)!=  not  a  statement  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)!=  not  a  statement  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)!=  not  a  statement	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	22	None	replace
1345	[BUG]  [BUGGY]  return  END_OPTIONAL_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OPTIONAL_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OPTIONAL_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OPTIONAL_SURroundingSpaces;	  return    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OPTIONAL_SURroundingSpaces	93	None	replace
1346	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1347	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  Records  do  not  match  expected  result  (entry  0);  }  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  Records  do  not  match  expected  result  (entry  0);  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  Records  do  not  match  expected  result  (entry  0);  }	  	non-compiled	[CE]  not  a  statement	117	None	add
1348	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1349	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1350	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1351	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')return  0;  [CE]  unreachable  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')return  0;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')return  0;	  	non-compiled	[CE]  unreachable  statement	117	None	add
1352	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }  [CE]  unreachable  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  0;  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1353	[BUG]  [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  Record  do  not  match  expected  result  (entry  0);  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  0;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  Record  do  not  match  expected  result  (entry  0);  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    0;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  Record  do  not  match  expected  result  (entry  0);  }	  	non-compiled	[CE]  not  a  statement	117	None	add
1354	[BUG]  [BUGGY]  result  =  Record.matches(entry  -  1);  [CE]  cannot  find  symbol  result  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.matches(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.matches(entry  -  1);	  return    BACKSPACE;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  cannot  find  symbol  result	199	None	replace
1355	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  c  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  c  +  1;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  c  +  1;  int  c  =  getEscapeChar();	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	139	None	replace
1356	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  c  +  1;  [CE]  duplicate  case  label  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  c  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  c  +  1;	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  duplicate  case  label	139	None	replace
1357	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE  +  1;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  BACKSPACE  +  1;  int  c  =  getEscapeChar();	  return    c    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	139	None	replace
1358	[BUG]  [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_SURroundingSpaces!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	90	None	replace
1359	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'	  return    DISABLED;    	non-compiled	[CE]  ';'  expected	121	None	replace
1360	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    DISABLED;    	non-compiled	[CE]  ';'  expected	121	None	replace
1361	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't'	  return    DISABLED;    	non-compiled	[CE]  ';'  expected	121	None	replace
1362	[BUG]  [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't'	  return    DISABLED;    	non-compiled	[CE]  ';'  expected	121	None	replace
1363	[BUG]  [BUGGY]  int  c  =  getEmptyLines();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getEmptyLines();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getEmptyLines();	  return    BACKSPACE;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	19	None	replace
1364	[BUG]  [BUGGY]  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
1365	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	30	9	replace
1366	[BUG]  [BUGGY]  return  c  ||  END_SURroundingSpaces  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SURroundingSpaces  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SURroundingSpaces  ==  END_SURroundingSpaces;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	62	None	replace
1367	[BUG]  [BUGGY]  return  END_SURRUNNING_LINES  ||  c  ==  END_SURRUNNING_LINES;  [CE]  cannot  find  symbol  END_SURRUNNING_LINES  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURRUNNING_LINES  ||  c  ==  END_SURRUNNING_LINES;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURRUNNING_LINES  ||  c  ==  END_SURRUNNING_LINES;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURRUNNING_LINES	62	None	replace
1368	[BUG]  [BUGGY]  return  END_SURRUNNING_SPACE  ||  c  ==  END_SURRUNNING_SPACE;  [CE]  cannot  find  symbol  END_SURRUNNING_SPACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_SURRUNNING_SPACE  ||  c  ==  END_SURRUNNING_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_SURRUNNING_SPACE  ||  c  ==  END_SURRUNNING_SPACE;	  return    END_SURroundingSpaces    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURRUNNING_SPACE	62	None	replace
1369	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_EOF;  [CE]  cannot  find  symbol  END_EOF  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_EOF;	  return    END_OF_STREAM    ||    END_OF_SCRIPT;    	non-compiled	[CE]  cannot  find  symbol  END_EOF	133	None	replace
1370	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  {  return  BACKSPACE;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  {  return  BACKSPACE;  }	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  not  a  statement	24	None	replace
1371	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  END;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  ==  return  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  ==  return  END;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    BACKSPACE;    	non-compiled	[CE]  not  a  statement	24	None	replace
1372	[BUG]  [BUGGY]  return  END_OF_SURRU;  [CE]  cannot  find  symbol  END_OF_SURRU  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRU;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRU;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRU	123	None	replace
1373	[BUG]  [BUGGY]  return  END_OF_SURRUING  +  1;  [CE]  cannot  find  symbol  END_OF_SURRUING  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRUING  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUING  +  1;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING	123	None	replace
1374	[BUG]  [BUGGY]  return  END_OF_SURRUED;  [CE]  cannot  find  symbol  END_OF_SURRUED  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRUED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUED;	  return    END_OF_SURRUING;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUED	123	None	replace
1375	[BUG]  [BUGGY]  return  END_OF_STREAM  =  END_OF_STREAM;  [CE]  cannot  assign  a  value  to  final  variable  END_OF_STREAM  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  =  END_OF_STREAM;	  return    END_OF_STREAM;    Return    END_OF_STREAM;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  END_OF_STREAM	169	None	replace
1376	[BUG]  [BUGGY]  return  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  END_OF_STREAM;	  return    BACKSPACE    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1377	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  <  =  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1378	[BUG]  [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces  +  1;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_SURroundingSpaces  <  =  END_OF_SURroundingSpaces  +  1;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1379	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  &&!ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  &&!ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces  &&!ignoreEmptyLines;	  return    CSVFormat.END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	43	None	replace
1380	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  &&  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  &&  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces  &&  ignoreEmptyLines;	  return    CSVFormat.END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	43	None	replace
1381	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  &&!ignoredEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces  &&!ignoredEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_SURroundingSpaces  &&!ignoredEmptyLines;	  return    CSVFormat.END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	43	None	replace
1382	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_SPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_SPACE;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	115	None	replace
1383	[BUG]  [BUGGY]  return  c  >>  END_EmptyLines;  [CE]  cannot  find  symbol  END_EmptyLines  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  END_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  END_EmptyLines;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EmptyLines	115	None	replace
1384	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_EOF;  [CE]  cannot  find  symbol  END_EOF  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_EOF;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EOF	115	None	replace
1385	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_EXPECTED;  [CE]  cannot  find  symbol  END_EXPECTED  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  >=  END_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  >=  END_EXPECTED;	  return    END_OF_STREAM    ||    c    >=    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EXPECTED	115	None	replace
1386	[BUG]  [BUGGY]  return  CSV.intValue()  +  1;  [CE]  cannot  find  symbol  CSV  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV.intValue()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV.intValue()  +  1;	  return    END_OF_STREAM.intValue()    +    1;    	non-compiled	[CE]  cannot  find  symbol  CSV	83	None	replace
1387	[BUG]  [BUGGY]  if(c!=  'n')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
1388	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  Record.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    Record.DEFAULT;    	non-compiled	[CE]  not  a  statement	159	None	replace
1389	[BUG]  [BUGGY]  return  c  {  END_OF_STREAM  &&  c  <  =  END_OF_SURroundingSpaces;  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  {  END_OF_STREAM  &&  c  <  =  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  {  END_OF_STREAM  &&  c  <  =  END_OF_SURroundingSpaces;	  return    END_OF_STREAM    &&    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  ';'  expected	72	None	replace
1390	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	54	None	replace
1391	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  orphaned  case	54	None	replace
1392	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces().length;  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces().length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces().length;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().length;    	non-compiled	[CE]  orphaned  case	54	None	replace
1393	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  ==  ignoreEmptyLines;  [CE]  incomparable  types:  int  and  boolean  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  ==  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    ==    ignoreEmptyLines;    	non-compiled	[CE]  incomparable  types:  int  and  boolean	57	None	replace
1394	[BUG]  [BUGGY]  return  c  ||  escapeEmptyLines  ==  ignoreEmptyLines;  [CE]  cannot  find  symbol  escapeEmptyLines  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  escapeEmptyLines  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  escapeEmptyLines  ==  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    ==    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  escapeEmptyLines	57	None	replace
1395	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines!=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines!=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    ==    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	57	None	replace
1396	[BUG]  [BUGGY]  return  END_OF_CREAM;  [CE]  cannot  find  symbol  END_OF_CREAM  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_CREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_CREAM;	  return    RECORD;    	non-compiled	[CE]  cannot  find  symbol  END_OF_CREAM	122	None	replace
1397	[BUG]  [BUGGY]  int  c  =  readEscapeSurroundingSpaces(ignoreEmptyLines);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  readEscapeSurroundingSpaces(ignoreEmptyLines);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  readEscapeSurroundingSpaces(ignoreEmptyLines);	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
1398	[BUG]  [BUGGY]  int  c  =  readEscapeSurroundingSpaces(ignoredEmptyLines);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  readEscapeSurroundingSpaces(ignoredEmptyLines);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  readEscapeSurroundingSpaces(ignoredEmptyLines);	  return    c    +    1;    int    c    =    readEscapeSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	182	None	replace
1399	[BUG]  [BUGGY]  return  NUMBER_OF_SURroundingSpaces  ||  ignoreEmptyLines;  [CE]  cannot  find  symbol  NUMBER_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_SURroundingSpaces  ||  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_SURroundingSpaces  ||  ignoreEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_SURroundingSpaces	204	None	replace
1400	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignorEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignorEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignorEmptyLines;	  return    END_OF_SURroundingSpaces    ||    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	204	None	replace
1401	[BUG]  [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_SURroundingSpaces  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	89	None	replace
1402	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  if(c  >=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  if(c  >=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  if(c  >=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1403	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  if(c  ==  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  if(c  ==  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  if(c  ==  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1404	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  if(c!=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  if(c!=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  if(c!=  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  }	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1405	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getSurroundingSpaces();  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  c  =  getSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1406	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence. ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence.   ");    	non-compiled	[CE]  duplicate  case  label	64	None	replace
1407	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  [CE]  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
1408	[BUG]  [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  [CE]  [FE]              IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Case  END_OF_STREAM:  throw  new  IOException( "EOF  while  processing  escape  sequence ",  c);	  Case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  	126	None	replace
1409	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM.length;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  int  cannot  be  dereferenced	131	None	replace
1410	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_LAST;  [CE]  cannot  find  symbol  END_OF_LAST  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_LAST;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_LAST;	  return    END_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_OF_LAST	131	None	replace
1411	[BUG]  [BUGGY]  else  if(c  ==  'e'  ||  c  ==  'E')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  'else'  without  'if'  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  else  if(c  ==  'e'  ||  c  ==  'E')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	else  if(c  ==  'e'  ||  c  ==  'E')  {  Records  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
1412	[BUG]  [BUGGY]  else  if(c  ==  'e'  ||  c  ==  'E')  {  Record  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [CE]  'else'  without  'if'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  else  if(c  ==  'e'  ||  c  ==  'E')  {  Record  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	else  if(c  ==  'e'  ||  c  ==  'E')  {  Record  do  not  match  expected  result  (result  0);  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r')    {    Records    do    not    match    expected    result    (result    0);    }    else    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
1413	[BUG]  [BUGGY]  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  //  TODO  is  this  correct?  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	//  TODO  is  this  correct?  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	compilable	  [FE]  IOException  	49	9	replace
1414	[BUG]  [BUGGY]  //  TODO  is  this  correct?  return  END_OF_STREAM  +  1;  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  //  TODO  is  this  correct?  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	//  TODO  is  this  correct?  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	compilable	  [FE]  IOException  	49	9	replace
1415	[BUG]  [BUGGY]  ||  END_OF_STREAM  <  1)  {  return  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  END_OF_STREAM  <  1)  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  END_OF_STREAM  <  1)  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1416	[BUG]  [BUGGY]  ||  END_OF_STREAM  <  1)return  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  ||  END_OF_STREAM  <  1)return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	||  END_OF_STREAM  <  1)return  END_OF_STREAM;	  return    END_OF_STREAM    +    1;    END_OF_STREAM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1417	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1418	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1419	[BUG]  [BUGGY]  if(c  ==  'n')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [CE]  not  a  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false)	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1420	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false);  }  [CE]  not  a  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false);  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(false);  }	  return    BACKSPACE;    Record    do    not    match    expected    result(false)    	non-compiled	[CE]  not  a  statement	161	None	replace
1421	[BUG]  [BUGGY]  return  b  &&  END_OF_STREAM;  [CE]  cannot  find  symbol  b  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  b  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b  &&  END_OF_STREAM;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  cannot  find  symbol  b	80	None	replace
1422	[BUG]  [BUGGY]  return  ch  &&  END_OF_STREAM;  [CE]  cannot  find  symbol  ch  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  ch  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  ch  &&  END_OF_STREAM;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  cannot  find  symbol  ch	80	None	replace
1423	[BUG]  [BUGGY]  return  t  &&  END_OF_STREAM;  [CE]  cannot  find  symbol  t  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  t  &&  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  t  &&  END_OF_STREAM;	  return    END_OF_STREAM    &&    c;    	non-compiled	[CE]  cannot  find  symbol  t	80	None	replace
1424	[BUG]  [BUGGY]  return  c  +  3;  return  c  +  3;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  return  c  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    return  c  +  3;	  	non-compiled	[CE]  unreachable  statement	41	None	add
1425	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  readEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  readEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  readEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
1426	[BUG]  [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  3;  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    c    +    3;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	41	None	add
1427	[BUG]  [BUGGY]  return  END  ||  c  ==  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c  ==  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c  ==  END_SURroundingSpaces;	  return    ENDSPACE    ||    c    ==    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	109	None	replace
1428	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  /  1;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  /  1;	  return    NUMBER_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	147	None	replace
1429	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces();  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1430	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1431	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  int  c  =  getEscapeSurroundingSpaces();  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  int  c  =  getEscapeSurroundingSpaces();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1432	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT;  [CE]  incompatible  types  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT;	  return    c    +    2;    	non-compiled	[CE]  incompatible  types	38	None	replace
1433	[BUG]  [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	176	None	replace
1434	[BUG]  [BUGGY]  result  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(entry)  ==  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry)    ==    return    END_OF_STREAM    +    1;    	non-compiled	[CE]  not  a  statement	176	None	replace
1435	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  return  c  +  1;  int  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  return  c  +  1;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  return  c  +  1;  int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
1436	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
1437	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  +=  1;  int  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  +=  1;  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  +=  1;  int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
1438	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  int  c  =  getCurrentIndex();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  int  c  =  getCurrentIndex();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  int  c  =  getCurrentIndex();	  return    c    +    1;    int    c    =    getCurrentIndex();    	non-compiled	[CE]  orphaned  case	138	None	replace
1439	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  getSurroundingSpace())  {  return  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  getSurroundingSpace())  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM  ||  c  >  getSurroundingSpace())  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1440	[BUG]  [BUGGY]  return  CSVFormat.END_FONT;  [CE]  cannot  find  symbol  END_FONT  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_FONT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_FONT;	  return    CSVFormat.END_EOF;    	non-compiled	[CE]  cannot  find  symbol  END_FONT	96	None	replace
1441	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  DISABLED  ||  COMmmentStart;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  DISABLED  ||  COMmmentStart;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  DISABLED  ||  COMmmentStart;	  return    END_OF_STREAM    ||    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	77	None	replace
1442	[BUG]  [BUGGY]  return  c!=  END_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c!=  END_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c!=  END_OF_SURroundingSpaces.length;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	190	None	replace
1443	[BUG]  [BUGGY]  return  c  >>  END_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >>  END_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >>  END_OF_SURroundingSpaces.length;	  return    c    >>    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	190	None	replace
1444	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces().size();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  orphaned  case	52	None	replace
1445	[BUG]  [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpaces().size();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  >=  END_OF_STREAM)  {  c  =  getSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getSurroundingSpaces().size();    	non-compiled	[CE]  orphaned  case	52	None	replace
1446	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getSurroundingSpace();  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  c  =  getSurroundingSpace();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1447	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  int  c  =  getSurroundingSpace();  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  int  c  =  getSurroundingSpace();	  return    END_OF_STREAM;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1448	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  return  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  return  END_OF_STREAM;	  return    END_OF_STREAM;    int    c    =    getSurroundingSpace();    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1449	[BUG]  [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [CE]  cannot  find  symbol  CSV  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_SURroundingSpaces!=  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces!=    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV	18	None	replace
1450	[BUG]  [BUGGY]  return  CR  ||  c  >>  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR  ||  c  >>  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CR  ||  c  >>  END_OF_SURroundingSpaces;	  return    CR    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	88	None	replace
1451	[BUG]  [BUGGY]  return  CSVFormat.NUMBER_OF_STREAM  -  1;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.NUMBER_OF_STREAM  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.NUMBER_OF_STREAM  -  1;	  return    CSVFormat.NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	47	None	replace
1452	[BUG]  [BUGGY]  return  TAB  ||  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  END_OF_STREAM  +  1;	  return    END_OF_STREAM    ||    c    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	replace
1453	[BUG]  [BUGGY]  return  END_OF_LIST;  [CE]  cannot  find  symbol  END_OF_LIST  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_LIST;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_LIST;	  return    CSV_SIZE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_LIST	5	None	replace
1454	[BUG]  [BUGGY]  Record  do  not  match  expected  result(entry  *  END_OF_STREAM  -  1);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result(entry  *  END_OF_STREAM  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result(entry  *  END_OF_STREAM  -  1);	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(entry    -    1);    	non-compiled	[CE]  not  a  statement	177	None	replace
1455	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	98	None	add
1456	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB  +  1;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(entry)  ==  return  TAB  +  1;	  	non-compiled	[CE]  not  a  statement	98	None	add
1457	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	98	None	add
1458	[BUG]  [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB  +  1;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Document  do  not  match  expected  result(entry)  ==  return  TAB  +  1;	  	non-compiled	[CE]  not  a  statement	98	None	add
1459	[BUG]  [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Document  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	98	None	add
1460	[BUG]  [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry)!=  return  TAB  +  1;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  +  1;  Record  do  not  match  expected  result(entry)!=  return  TAB  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB    +    1;    Record  do  not  match  expected  result(entry)!=  return  TAB  +  1;	  	non-compiled	[CE]  not  a  statement	98	None	add
1461	[BUG]  [BUGGY]  return  c  ||  c  ==  END_OF_SURRUING_SPACE;  [CE]  cannot  find  symbol  END_OF_SURRUING_SPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_OF_SURRUING_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_OF_SURRUING_SPACE;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUING_SPACE	208	None	replace
1462	[BUG]  [BUGGY]  return  c  ||  c  ==  escapeSurroundingSpaces;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  escapeSurroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  escapeSurroundingSpaces;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	208	None	replace
1463	[BUG]  [BUGGY]  return  c  ||  c  ==  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRUARY  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  c  ==  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  c  ==  END_OF_SURRUARY;	  return    c    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUARY	208	None	replace
1464	[BUG]  [BUGGY]  return  c  <  =  NUMBER_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  <  =  NUMBER_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  <  =  NUMBER_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1465	[BUG]  [BUGGY]  return  END_OF_STREAM,  delimiter.longValue();  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM,  delimiter.longValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM,  delimiter.longValue();	  return    END_OF_STREAM.longValue();    	non-compiled	[CE]  ';'  expected	86	None	replace
1466	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
1467	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    return    END_OF_STREAM;    	compilable	  [FE]  IOException  	29	9	replace
1468	[BUG]  [BUGGY]  return  END_OF_STREAM  &&  CR;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  &&  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  &&  CR;	  return    END_OF_STREAM    ||    CR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	76	None	replace
1469	[BUG]  [BUGGY]  return  CSVFormat.END_SURroundING_SPACE;  [CE]  cannot  find  symbol  END_SURroundING_SPACE  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SURroundING_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURroundING_SPACE;	  return    CSVFormat.END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundING_SPACE	45	None	replace
1470	[BUG]  [BUGGY]  return  CSVFormat.END_SURFACE;  [CE]  cannot  find  symbol  END_SURFACE  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_SURFACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_SURFACE;	  return    CSVFormat.END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURFACE	45	None	replace
1471	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( " ");  [CE]  duplicate  case  label  [FE]        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( " ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( " ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  duplicate  case  label	63	None	replace
1472	[BUG]  [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]          IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  throw  new  IOException( "The  EOF  while  processing  escape  sequence ");	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  duplicate  case  label	63	None	replace
1473	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	170	9	replace
1474	[BUG]  [BUGGY]  if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	170	9	replace
1475	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  IOException  	170	9	replace
1476	[BUG]  [BUGGY]  if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(END_OF_STREAM!=  END_OF_STREAM)  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  IOException  	170	9	replace
1477	[BUG]  [BUGGY]  if(END_OF_STREAM!=  END_SURroundingSpaces)  {  return  END_OF_STREAM;  result  =  END_OF_STREAM;  }  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM!=  END_SURroundingSpaces)  {  return  END_OF_STREAM;  result  =  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(END_OF_STREAM!=  END_SURroundingSpaces)  {  return  END_OF_STREAM;  result  =  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	170	None	replace
1478	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	170	9	replace
1479	[BUG]  [BUGGY]  if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  else  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	170	9	replace
1480	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	170	9	replace
1481	[BUG]  [BUGGY]  if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(END_OF_STREAM  ==  END_OF_STREAM)  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    result    =    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	170	9	replace
1482	[BUG]  [BUGGY]  Record  do  not  match  expected  result  ()  {  return  TAB;  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Record  do  not  match  expected  result  ()  {  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Record  do  not  match  expected  result  ()  {  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	25	None	replace
1483	[BUG]  [BUGGY]  record  does  not  match  expected  result  ()  ==  return  TAB;  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result  ()  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result  ()  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result    ()    ==    return    TAB;    	non-compiled	[CE]  ';'  expected	25	None	replace
1484	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces().size();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  c  =  getEscapeSurroundingSpaces().size();	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  orphaned  case	53	None	replace
1485	[BUG]  [BUGGY]  while(c  <  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  orphaned  case	53	None	replace
1486	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  |  END_SPACE;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  |  END_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  |  END_SPACE;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	148	None	replace
1487	[BUG]  [BUGGY]  return  END  |  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END	148	None	replace
1488	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  TAB  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
1489	[BUG]  [BUGGY]  return  TAB  |  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  |  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  |  END_OF_STREAM;	  return    NUMBER_OF_STREAM    |    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	148	9	replace
1490	[BUG]  [BUGGY]  return  CSVFormat.EMPTY;  [CE]  cannot  find  symbol  EMPTY  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.EMPTY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.EMPTY;	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol  EMPTY	84	None	replace
1491	[BUG]  [BUGGY]  return  CSVFormat.EMPTY_STREAM;  [CE]  cannot  find  symbol  EMPTY_STREAM  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.EMPTY_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.EMPTY_STREAM;	  return    CSVFormat.intValue();    	non-compiled	[CE]  cannot  find  symbol  EMPTY_STREAM	84	None	replace
1492	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence   ";  [CE]  [FE]                IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence   ";  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence   ";	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  	67	None	replace
1493	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence;  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence;	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  ';'  expected	67	None	replace
1494	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence   ");  [CE]  [FE]                    IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence   ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  EOF  whilst  processing  escape  sequence   ");	          case    END_OF_STREAM:    return    END_OF_STREAM;    	non-compiled	[CE]  	67	None	replace
1495	[BUG]  [BUGGY]  return  CSV  ||  END_OF_STREAM  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_STREAM  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_STREAM  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	107	None	replace
1496	[BUG]  [BUGGY]  return  TAB  ||  c  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  ||  c  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  ||  c  ==  END_OF_SURroundingSpaces;	  return    END_BACKSPACE    ||    c    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	108	None	replace
1497	[BUG]  [BUGGY]  int  c  =  getCurrentSurroundingSpaces()  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentSurroundingSpaces()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentSurroundingSpaces()  +  1;	  return    c    +    1;    int    c    =    getCurrentSurroundingSpaces();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	137	None	replace
1498	[BUG]  [BUGGY]  return  c  ||  END_SURroundingSpaces!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_SURroundingSpaces!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_SURroundingSpaces!=  END_SURroundingSpaces;	  return    END_SPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_SURroundingSpaces	145	None	replace
1499	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines!=  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	16	None	replace
1500	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  >>  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  >>  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  ignoreEmptyLines  >>  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	16	None	replace
1501	[BUG]  [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;  [CE]  cannot  find  symbol  CSV  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_SURroundingSpaces!=  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces!=    ignoreEmptyLines;    	non-compiled	[CE]  cannot  find  symbol  CSV	16	None	replace
1502	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  return  BACKSPACE  +  1;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  return  BACKSPACE  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    return  BACKSPACE  +  1;	  	non-compiled	[CE]  unreachable  statement	35	None	add
1503	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	35	None	add
1504	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	35	None	add
1505	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Document  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Document  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Document  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	35	None	add
1506	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	35	None	add
1507	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Record  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	35	None	add
1508	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Document  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	35	None	add
1509	[BUG]  [BUGGY]  return  BACKSPACE  +  1;  Collections.sort(c);  [CE]  cannot  find  symbol  Collections  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  +  1;  Collections.sort(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    +    1;    Collections.sort(c);	  	non-compiled	[CE]  cannot  find  symbol  Collections	35	None	add
1510	[BUG]  [BUGGY]  return  CSVFormat.END_BACKSPACE  -  1;  [CE]  cannot  find  symbol  END_BACKSPACE  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_BACKSPACE  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_BACKSPACE  -  1;	  return    CSVFormat.END_BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_BACKSPACE	95	None	replace
1511	[BUG]  [BUGGY]  int  c  =  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  1;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
1512	[BUG]  [BUGGY]  int  c  =  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  c  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  c  +  1;	  return    c    +    1;    int    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	replace
1513	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c);  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().encodeAsString(c);	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	101	None	replace
1514	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM);  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM);	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	101	None	replace
1515	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c));  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c));  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().encodeAsString(c));	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  ';'  expected	101	None	replace
1516	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  escapeSurroundingSpaces));  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  escapeSurroundingSpaces));  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().encodeAsString(c,  escapeSurroundingSpaces));	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  ';'  expected	101	None	replace
1517	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM));  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM));  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM));	  return    END_OF_STREAM    +    2;    	non-compiled	[CE]  ';'  expected	101	None	replace
1518	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_EOF;  [CE]  cannot  find  symbol  END_EOF  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_EOF;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EOF	209	None	replace
1519	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_EXPECTED;  [CE]  cannot  find  symbol  END_EXPECTED  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_EXPECTED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_EXPECTED;	  return    END_OF_STREAM    ||    c    ==    END_EmptyLines;    	non-compiled	[CE]  cannot  find  symbol  END_EXPECTED	209	None	replace
1520	[BUG]  [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURroundingSpaces  ||  c  >=  END_OF_STREAM;	  return    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	191	None	replace
1521	[BUG]  [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  ||  c  >=  ignoreEmptyLines;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >=  END_OF_SURroundingSpaces  ||  c  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >=  END_OF_SURroundingSpaces  ||  c  >=  ignoreEmptyLines;	  return    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	191	None	replace
1522	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  END_EOF;  [CE]  cannot  find  symbol  END_EOF  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  END_EOF;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  END_EOF;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_EOF	144	None	replace
1523	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c!=  END_SPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c!=  END_SPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c!=  END_SPACE;	  return    END_OF_STREAM    ||    c!=    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	144	None	replace
1524	[BUG]  [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM  +  1;  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
1525	[BUG]  [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  +  1;  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  +  1;  Record  do  not  match  expected  result(c)  {  Records  do  not  match  expected  result(c)	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    ==    Records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	153	None	replace
1526	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Collections.emptyList();  }  [CE]  cannot  find  symbol  Collections  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Collections.emptyList();  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Collections.emptyList();  }	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
1527	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  BACKSPACE;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
1528	[BUG]  [BUGGY]  case  END:  return  BACKSPACE;  Collections.emptyList();  [CE]  cannot  find  symbol  END  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END:  return  BACKSPACE;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END:  return  BACKSPACE;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  END	160	None	replace
1529	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')return  BACKSPACE;  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')return  BACKSPACE;  Collections.emptyList();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')return  BACKSPACE;  Collections.emptyList();	  return    BACKSPACE;    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  Collections	160	None	replace
1530	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
1531	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
1532	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
1533	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
1534	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	201	None	replace
1535	[BUG]  [BUGGY]  return  CSV  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_STREAM!=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM!=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	141	None	replace
1536	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  TAB  /  1;	  return    TAB    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	99	8	replace
1537	[BUG]  [BUGGY]  return  TAB  /  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  /  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  /  1;	  return    TAB    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	99	8	replace
1538	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	return  TAB  -  1;	  return    TAB    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	99	8	replace
1539	[BUG]  [BUGGY]  return  TAB  -  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  TAB  -  1;	  return    TAB    +    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	99	8	replace
1540	[BUG]  [BUGGY]  return  CSVFormat.START_OBJECT  ||  CSVFormat.END_OF_STREAM;  [CE]  cannot  find  symbol  START_OBJECT  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.START_OBJECT  ||  CSVFormat.END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.START_OBJECT  ||  CSVFormat.END_OF_STREAM;	  return    CSVFormat.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	97	None	replace
1541	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getEscapeChar();  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM)  {  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM)  {  c  =  getEscapeChar();	  return    END_OF_STREAM;    int    c    =    getEscapeChar();    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1542	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  return  END_OF_STREAM;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  return  END_OF_STREAM;  int  c  =  getEscapeChar();	  return    END_OF_STREAM;    int    c    =    getEscapeChar();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	172	None	replace
1543	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  getEscapeChar())  {  return  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  getEscapeChar())  {  return  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM  ||  c  >  getEscapeChar())  {  return  END_OF_STREAM;	  return    END_OF_STREAM;    int    c    =    getEscapeChar();    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1544	[BUG]  [BUGGY]  return  STRING_OF_SURroundingSpaces.length;  [CE]  cannot  find  symbol  STRING_OF_SURroundingSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  STRING_OF_SURroundingSpaces.length;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  STRING_OF_SURroundingSpaces.length;	  return    END_OF_SURroundingSpaces.length;    	non-compiled	[CE]  cannot  find  symbol  STRING_OF_SURroundingSpaces	46	None	replace
1545	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  &  1;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  &  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  &  1;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
1546	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  -  1;  [CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  -  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_EscapeSURroundingSpaces  -  1;	  return    CSVFormat.DEFAULT_EscapeSURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EscapeSURroundingSpaces	135	None	replace
1547	[BUG]  [BUGGY]  return  NUMBER  ||  END_OF_STREAM;  [CE]  cannot  find  symbol  NUMBER  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER  ||  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER  ||  END_OF_STREAM;	  return    b    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER	180	None	replace
1548	[BUG]  [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Record  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	155	None	replace
1549	[BUG]  [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(entry)  ==  return  DISABLED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(entry)  ==  return  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Record  do  not  match  expected  result(entry)  ==  return  DISABLED;	  	non-compiled	[CE]  not  a  statement	120	None	add
1550	[BUG]  [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(entry)  ==  return  DISABLED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(entry)  ==  return  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Document  do  not  match  expected  result(entry)  ==  return  DISABLED;	  	non-compiled	[CE]  not  a  statement	120	None	add
1551	[BUG]  [BUGGY]  return  DISABLED;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  c  =  getSurroundingSpaces();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	120	None	add
1552	[BUG]  [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	120	None	add
1553	[BUG]  [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(c)  ==  return  DISABLED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  Document  do  not  match  expected  result(c)  ==  return  DISABLED;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    Document  do  not  match  expected  result(c)  ==  return  DISABLED;	  	non-compiled	[CE]  not  a  statement	120	None	add
1554	[BUG]  [BUGGY]  return  DISABLED;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  c  =  getEscapeChar();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	120	None	add
1555	[BUG]  [BUGGY]  return  DISABLED;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  DISABLED;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    DISABLED;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	120	None	add
1556	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  >=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	111	None	replace
1557	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  >>  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  >>  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  >>  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	111	None	replace
1558	[BUG]  [BUGGY]  return  CSV  ||  END_OF_STREAM  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  END_OF_STREAM  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  END_OF_STREAM  >=  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_STREAM    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	111	None	replace
1559	[BUG]  [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  &  1;  [CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.DEFAULT_SURroundingSpaces  &  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.DEFAULT_SURroundingSpaces  &  1;	  return    CSVFormat.DEFAULT_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_SURroundingSpaces	136	None	replace
1560	[BUG]  [BUGGY]  return  c  ||  this.ignoreEmptyLines  ==  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  this.ignoreEmptyLines  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  this.ignoreEmptyLines  ==  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    ==    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	58	None	replace
1561	[BUG]  [BUGGY]  return  c  ||  ignoreEmptyLines  ==  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  ignoreEmptyLines  ==  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  ignoreEmptyLines  ==  ignoreEmptyLines;	  return    c    ||    END_OF_SURroundingSpaces    ==    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	58	None	replace
1562	[BUG]  [BUGGY]  return  CSVFormat.END  ||  c  >  END_OF_STREAM;  [CE]  cannot  find  symbol  END  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END  ||  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END  ||  c  >  END_OF_STREAM;	  return    CSVFormat.END;    	non-compiled	[CE]  cannot  find  symbol  END	130	None	replace
1563	[BUG]  [BUGGY]  return  'n';  if(c  ==  'n')  {  Record  do  not  match  expected  result  (entry  0)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  if(c  ==  'n')  {  Record  do  not  match  expected  result  (entry  0)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    if(c  ==  'n')  {  Record  do  not  match  expected  result  (entry  0)  ==  return  TAB;  }	  	non-compiled	[CE]  not  a  statement	174	None	add
1564	[BUG]  [BUGGY]  return  'n';  if(c  ==  'n')  {  Record  do  not  match  expected  result  (entry  0)  ==  return  TAB;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  if(c  ==  'n')  {  Record  do  not  match  expected  result  (entry  0)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    if(c  ==  'n')  {  Record  do  not  match  expected  result  (entry  0)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	174	None	add
1565	[BUG]  [BUGGY]  return  'n';  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  int  c  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	174	None	add
1566	[BUG]  [BUGGY]  return  'n';  if(c  ==  'n')  {  Record  do  not  match  expected  result(entry  0);  }  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  'n';  if(c  ==  'n')  {  Record  do  not  match  expected  result(entry  0);  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    'n';    if(c  ==  'n')  {  Record  do  not  match  expected  result(entry  0);  }	  	non-compiled	[CE]  not  a  statement	174	None	add
1567	[BUG]  [BUGGY]  case  END_OF_SECOND:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [CE]  cannot  find  symbol  END_OF_SECOND  [FE]        IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_SECOND:  throw  new  IOException( "EOF  while  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_SECOND:  throw  new  IOException( "EOF  while  processing  escape  sequence ");	  case    END_OF_SECOND:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    	non-compiled	[CE]  cannot  find  symbol  END_OF_SECOND	124	None	replace
1568	[BUG]  [BUGGY]  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
1569	[BUG]  [BUGGY]  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
1570	[BUG]  [BUGGY]  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
1571	[BUG]  [BUGGY]  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  return    0;    	compilable	  [FE]  IOException  	118	9	replace
1572	[BUG]  [BUGGY]  int  c  =  this.end_OF_STREAM.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.end_OF_STREAM.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.end_OF_STREAM.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
1573	[BUG]  [BUGGY]  int  c  =  this.end_of_STREAM.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  this.end_of_STREAM.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  this.end_of_STREAM.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
1574	[BUG]  [BUGGY]  int  c  =  code.intValue();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  code.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  code.intValue();	  int    c    =    END_OF_STREAM.intValue();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	82	None	replace
1575	[BUG]  [BUGGY]  int  c  =  getCurrentSurroundingSpace()  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getCurrentSurroundingSpace()  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getCurrentSurroundingSpace()  +  1;	  return    c    +    1;    int    c    =    getCurrentSurroundingSpace();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	140	None	replace
1576	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  BACKSPACE;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  }	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	200	None	replace
1577	[BUG]  [BUGGY]  record  does  not  match  expected  result(entry)  ==  return  TAB;  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  record  does  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	record  does  not  match  expected  result(entry)  ==  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  ';'  expected	200	None	replace
1578	[BUG]  [BUGGY]  result  =  Record.does  not  match  expected  result(entry)  {  return  TAB;  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.does  not  match  expected  result(entry)  {  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.does  not  match  expected  result(entry)  {  return  TAB;	  return    BACKSPACE;    Record    do    not    match    expected    result(entry)    ==    return    TAB;    	non-compiled	[CE]  ';'  expected	200	None	replace
1579	[BUG]  [BUGGY]  return  END_OF_STREAM.intValue;  [CE]  int  cannot  be  dereferenced  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM.intValue;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM.intValue;	  return    CSV_STREAM;    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
1580	[BUG]  [BUGGY]  return  CSV  ||  c  >=  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  CSV  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV  ||  c  >=  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV  ||  c  >=  END_OF_SURroundingSpaces;	  return    c    ||    c    >=    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  CSV	193	None	replace
1581	[BUG]  [BUGGY]  return  c  >  END_OF_STREAM;  [CE]  incompatible  types  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_STREAM;	  return    NUMBER_OF_STREAM    ||    c    >    END_OF_STREAM;    	non-compiled	[CE]  incompatible  types	168	None	replace
1582	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	197	None	replace
1583	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAM  ==  END;  [CE]  cannot  find  symbol  END  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAM  ==  END;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAM  ==  END;	  return    END_OF_STREAM    ||    c    ==    END_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END	116	None	replace
1584	[BUG]  [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces  +  1;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  >  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  >  END_OF_SURroundingSpaces  ||  c  <  =  END_OF_SURroundingSpaces  +  1;	  return    c    >    END_OF_SURroundingSpaces    ||    c    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1585	[BUG]  [BUGGY]  return  END  ||  c!=  END_SURroundingSpaces;  [CE]  cannot  find  symbol  END  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END  ||  c!=  END_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END  ||  c!=  END_SURroundingSpaces;	  return    ENDSPACE    ||    c!=    END_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END	143	None	replace
1586	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1587	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1588	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1589	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1590	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1591	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  else  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  else  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM  +  2;  }  else  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1592	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  2;  }  else  {  return  END_OF_STREAM  +  2;  }  [CE]  unreachable  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  +  2;  if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  2;  }  else  {  return  END_OF_STREAM  +  2;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    END_OF_STREAM    +    2;    if(c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM  +  2;  }  else  {  return  END_OF_STREAM  +  2;  }	  	non-compiled	[CE]  unreachable  statement	100	None	add
1593	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE  +  END_OF_STREAM;  [CE]  cannot  find  symbol  BACKSPACE  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.BACKSPACE  +  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.BACKSPACE  +  END_OF_STREAM;	  return    CSVFormat.BACKSPACE    +    1;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	39	None	replace
1594	[BUG]  [BUGGY]  return  c  ||  END_OF_EXPECTED  ==  END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_EXPECTED  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_EXPECTED  ==  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_EXPECTED  ==  END_OF_STREAM;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPECTED	207	None	replace
1595	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OF_BACKSPACE;  [CE]  cannot  find  symbol  END_OF_BACKSPACE  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  c  ==  END_OF_BACKSPACE;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  c  ==  END_OF_BACKSPACE;	  return    END_OF_STREAM    ||    c    ==    END_OF_EXPECTED;    	non-compiled	[CE]  cannot  find  symbol  END_OF_BACKSPACE	207	None	replace
1596	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	104	None	add
1597	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c  -  1);  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(c  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(c  -  1);	  	non-compiled	[CE]  not  a  statement	104	None	add
1598	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(entry  -  1)  ==  return  TAB;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(entry  -  1)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(entry  -  1)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	104	None	add
1599	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Record  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	104	None	add
1600	[BUG]  [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  BACKSPACE  -  1;  Document  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    BACKSPACE    -    1;    Document  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	104	None	add
1601	[BUG]  [BUGGY]  result  =  Record.matches(c)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.matches(c)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.matches(c)?  END_OF_STREAM  :  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  cannot  find  symbol  result	55	None	replace
1602	[BUG]  [BUGGY]  result  =  Record.matches(c)?  END_OF_STREAM  :  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  Record.matches(c)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  Record.matches(c)?  END_OF_STREAM  :  END_OF_STREAM;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  cannot  find  symbol  result	55	None	replace
1603	[BUG]  [BUGGY]  c  =  END_OF_STREAM  +  1;  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  c  =  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	c  =  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	55	None	replace
1604	[BUG]  [BUGGY]  return  CR;  return  CR;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  return  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    return  CR;	  	non-compiled	[CE]  unreachable  statement	91	None	add
1605	[BUG]  [BUGGY]  return  CR;  Record  do  not  match  expected  result(entry)  ==  return  CR;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Record  do  not  match  expected  result(entry)  ==  return  CR;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Record  do  not  match  expected  result(entry)  ==  return  CR;	  	non-compiled	[CE]  not  a  statement	91	None	add
1606	[BUG]  [BUGGY]  return  CR;  Record  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Record  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Record  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	91	None	add
1607	[BUG]  [BUGGY]  return  CR;  int  CR  =  getSurroundingSpace();  [CE]  cannot  find  symbol  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  int  CR  =  getSurroundingSpace();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    int  CR  =  getSurroundingSpace();	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
1608	[BUG]  [BUGGY]  return  CR;  Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CR;  Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    CR;    Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	91	None	add
1609	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result(entry)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result(entry)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
1610	[BUG]  [BUGGY]  return  TAB;  Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Record  do  not  match  expected  result  (entry  -  1)  ==  return  TAB;	  	non-compiled	[CE]  not  a  statement	1	None	add
1611	[BUG]  [BUGGY]  return  TAB;  Collections.reverse(c);  [CE]  cannot  find  symbol  Collections  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Collections.reverse(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Collections.reverse(c);	  	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	add
1612	[BUG]  [BUGGY]  return  TAB;  Collections.sort(c);  [CE]  cannot  find  symbol  Collections  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Collections.sort(c);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Collections.sort(c);	  	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	add
1613	[BUG]  [BUGGY]  return  TAB;  Document  do  not  match  expected  result(entry  -  1);  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  TAB;  Document  do  not  match  expected  result(entry  -  1);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return    TAB;    Document  do  not  match  expected  result(entry  -  1);	  	non-compiled	[CE]  not  a  statement	1	None	add
1614	[BUG]  [BUGGY]  return  CSV_END_OF_STREAM;  [CE]  cannot  find  symbol  CSV_END_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_END_OF_STREAM;	  return    CSV_NUMBER_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  CSV_END_OF_STREAM	48	None	replace
1615	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
1616	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n  [CE]  unclosed  character  literal  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
1617	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  '	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  line  end  in  character  literal	34	None	replace
1618	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    return    END_OF_STREAM;    	non-compiled	[CE]  illegal  line  end  in  character  literal	34	None	replace
1619	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  1;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  1;	  return    c    ||    END_OF_STREAM    <    =    END_OF_SURroundingSpaces;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1620	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
1621	[BUG]  [BUGGY]  Context.codeBug();  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  Context.codeBug();  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	Context.codeBug();  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
1622	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  RecordedReader.DEFAULT;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    RecordedReader.DEFAULT;    	non-compiled	[CE]  not  a  statement	158	None	replace
1623	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'p'  ||  c  ==  't'  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'p'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'p'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1624	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1625	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'h'  ||  c  ==  't'  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'h'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'h'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1626	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'p'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'p'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'p'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	195	None	replace
1627	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	195	None	replace
1628	[BUG]  [BUGGY]  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1629	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [FE]  IOException  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'z')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1630	[BUG]  [BUGGY]  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1631	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [FE]  IOException  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1632	[BUG]  [BUGGY]  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1633	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'a'  ||  c  ==  'f')  {  return  'n';  }	  return    'n';    	compilable	  [FE]  IOException  	175	9	replace
1634	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  *  1;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  *  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  *  1;	  return    CSVFormat.END_OF_STREAM    -    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	184	None	replace
1635	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
1636	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
1637	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  return  TAB;  }	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    return    TAB;    	non-compiled	[CE]  not  a  statement	202	None	replace
1638	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM  ||  c  >  END_OF_STREAM)  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1639	[BUG]  [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  getEscapeChar())  {  return  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  while(c  <  =  END_OF_STREAM  ||  c  >  getEscapeChar())  {  return  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	while(c  <  =  END_OF_STREAM  ||  c  >  getEscapeChar())  {  return  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    int    c    =    getEscapeChar();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1640	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_  [CE]  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  	32	None	replace
1641	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF  [CE]  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	non-compiled	[CE]  	32	None	replace
1642	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	32	9	replace
1643	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    }    	compilable	  [FE]  IOException  	32	9	replace
1644	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundingSpaces  ||  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	206	None	replace
1645	[BUG]  [BUGGY]  return  c  ||  END_OF_STREAMINGSpaces  ==  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_STREAMINGSpaces  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ||  END_OF_STREAMINGSpaces  ==  END_OF_SURroundingSpaces;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ||  END_OF_STREAMINGSpaces  ==  END_OF_SURroundingSpaces;	  return    c    ||    END_OF_SURroundingSpaces    ==    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAMINGSpaces	206	None	replace
1646	[BUG]  [BUGGY]  return  NUMBER_OF_STREAM  ||  END_OBJECT;  [CE]  cannot  find  symbol  NUMBER_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_STREAM  ||  END_OBJECT;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_STREAM  ||  END_OBJECT;	  return    NUMBER_OF_STREAM    ||    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_STREAM	146	None	replace
1647	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  END_OF_SURroundingSpaces  <  =  END_OF_STREAM;	  return    c    ||    END_OF_SURroundingSpaces    <    =    END_OF_STREAM;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1648	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	33	9	replace
1649	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	  return    END_OF_STREAM;    if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't')    {    return    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	33	9	replace
1650	[BUG]  [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_STREAM  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  ||  END_OF_STREAM  +  1;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
1651	[BUG]  [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_STREAM  *  2;  [CE]  cannot  find  symbol  result  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_STREAM  *  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  ||  END_OF_STREAM  *  2;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
1652	[BUG]  [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_CRC;  [CE]  cannot  find  symbol  result  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_CRC;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	result  =  END_OF_STREAM  ||  END_OF_CRC;	  result    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	3	None	replace
1653	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
1654	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
1655	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)!=  not  a  statement  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)!=  not  a  statement  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)!=  not  a  statement	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
1656	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  >=  not  a  statement  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  >=  not  a  statement  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  >=  not  a  statement	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
1657	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  Record  do  not  match  expected  result(c)	  return    BACKSPACE;    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	21	None	replace
1658	[BUG]  [BUGGY]  int  c  =  getNumberSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  getNumberSurroundingSpaces().size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  getNumberSurroundingSpaces().size();	  return    c    +    1;    int    c    =    getEscapeSurroundingSpaces().size();    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	12	None	replace
1659	[BUG]  [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  '.')  {  return  BACKSPACE;  Document  do  not  match  expected  result(c)  ==  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
1660	[BUG]  [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c;  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c;  Document  do  not  match  expected  result(c)  {  records  do  not  match  expected  result(c)	  return    BACKSPACE;    Document    do    not    match    expected    result(c)    ==    records    do    not    match    expected    result(c)    	non-compiled	[CE]  not  a  statement	156	None	replace
1661	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n  [CE]  unclosed  character  literal  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	196	None	replace
1662	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	196	None	replace
1663	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	196	None	replace
1664	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't'  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't'  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  't'	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  ';'  expected	196	None	replace
1665	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't  [CE]  unclosed  character  literal  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	196	None	replace
1666	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines  >=  ignoreEmptyLines;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_STREAM  ||  ignoreEmptyLines  >=  ignoreEmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_STREAM  ||  ignoreEmptyLines  >=  ignoreEmptyLines;	  return    c    ||    END_OF_STREAM    >=    ignoreEmptyLines;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	87	None	replace
1667	[BUG]  [BUGGY]  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1668	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1669	[BUG]  [BUGGY]  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1670	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1671	[BUG]  [BUGGY]  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'e'  ||  c  ==  'E')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1672	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'e'  ||  c  ==  'E')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1673	[BUG]  [BUGGY]  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	add	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1674	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }  [FE]  IOException  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	if(c  ==  'n'  ||  c  ==  't')  {  return  BACKSPACE;  }	  return    BACKSPACE;    return    BACKSPACE;    	compilable	  [FE]  IOException  	198	9	replace
1675	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  |  1;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  |  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  |  1;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	40	None	replace
1676	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM  +  3;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSVFormat.END_OF_STREAM  +  3;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSVFormat.END_OF_STREAM  +  3;	  return    CSVFormat.END_OF_STREAM    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	40	None	replace
1677	[BUG]  [BUGGY]  return  END_OF_SURRARY  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  END_OF_SURRARY  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRARY  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRARY  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRARY	205	None	replace
1678	[BUG]  [BUGGY]  return  NUMBER_SURRUARY  ||  END_OF_SURRUARY;  [CE]  cannot  find  symbol  NUMBER_SURRUARY  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_SURRUARY  ||  END_OF_SURRUARY;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_SURRUARY  ||  END_OF_SURRUARY;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_SURRUARY	205	None	replace
1679	[BUG]  [BUGGY]  return  END_OF_SURRUARY  ||  END_OF_EmptyLines;  [CE]  cannot  find  symbol  END_OF_SURRUARY  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURRUARY  ||  END_OF_EmptyLines;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURRUARY  ||  END_OF_EmptyLines;	  return    END_OF_SURroundingSpaces    ||    END_OF_SURRUARY;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURRUARY	205	None	replace
1680	[BUG]  [BUGGY]  return  this.intValue();  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  this.intValue();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  this.intValue();	  return    in.intValue();    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1681	[BUG]  [BUGGY]  case  END_OF_STREAM:  break;  [CE]  duplicate  case  label  [FE]            IOException      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  case  END_OF_STREAM:  break;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	case  END_OF_STREAM:  break;	          case    END_OF_STREAM:    throw    new    IOException(   "EOF    whilst    processing    escape    sequence   ");    break;    	non-compiled	[CE]  duplicate  case  label	65	None	replace
1682	[BUG]  [BUGGY]  int  c  =  escapeSurroundingSpaces.size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  int  c  =  escapeSurroundingSpaces.size();  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	int  c  =  escapeSurroundingSpaces.size();	  return    c    +    1;    c    +    1;    	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	7	None	replace
1683	[BUG]  [BUGGY]  return  b.intValue()  +  2;  [CE]  cannot  find  symbol  b  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  b.intValue()  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  b.intValue()  +  2;	  return    END_OF_STREAM.intValue()    +    2;    	non-compiled	[CE]  cannot  find  symbol  b	151	None	replace
1684	[BUG]  [BUGGY]  return  t.intValue()  +  2;  [CE]  cannot  find  symbol  t  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  t.intValue()  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  t.intValue()  +  2;	  return    END_OF_STREAM.intValue()    +    2;    	non-compiled	[CE]  cannot  find  symbol  t	151	None	replace
1685	[BUG]  [BUGGY]  return  d.intValue()  +  2;  [CE]  cannot  find  symbol  d  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  d.intValue()  +  2;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  d.intValue()  +  2;	  return    END_OF_STREAM.intValue()    +    2;    	non-compiled	[CE]  cannot  find  symbol  d	151	None	replace
1686	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM)+  1L;  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM)+  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().encodeAsString(c,  END_OF_STREAM)+  1L;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	110	None	replace
1687	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().escape(c,  END_OF_STREAM  +  1L);  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().escape(c,  END_OF_STREAM  +  1L);  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().escape(c,  END_OF_STREAM  +  1L);	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	110	None	replace
1688	[BUG]  [BUGGY]  return  JsonStringEncoder.getInstance().escapeSurroundingSpace(c,  END_OF_STREAM)+  1L;  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  JsonStringEncoder.getInstance().escapeSurroundingSpace(c,  END_OF_STREAM)+  1L;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  JsonStringEncoder.getInstance().escapeSurroundingSpace(c,  END_OF_STREAM)+  1L;	  return    END_OF_STREAM    +    1L;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	110	None	replace
1689	[BUG]  [BUGGY]  return  NUMBER_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  NUMBER_OF_SURroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  NUMBER_OF_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  NUMBER_OF_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_SURroundingSpaces	44	None	replace
1690	[BUG]  [BUGGY]  return  CSV_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  CSV_SURroundingSpaces  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  CSV_SURroundingSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  CSV_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  CSV_SURroundingSpaces	44	None	replace
1691	[BUG]  [BUGGY]  return  END_OF_SURroundINGSpaces  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundINGSpaces  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  END_OF_SURroundINGSpaces  +  1;  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  END_OF_SURroundINGSpaces  +  1;	  return    END_OF_SURroundingSpaces    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundINGSpaces	44	None	replace
1692	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'r'  ||  c  ==  'r	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	194	None	replace
1693	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't'  ||  c  ==  'r	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	194	None	replace
1694	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  'r  [CE]  unclosed  character  literal  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?      [BUGGY]  return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  'r  [BUGGY]      case  END_OF_STREAM:  throw  new  IOException(     "EOF  whilst  processing  escape  sequence     ");  default:  return  c;  }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.2182178902359924	106	106	3	replace	return  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p'  ||  c  ==  'r	  return    END_OF_STREAM    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    't'    	non-compiled	[CE]  unclosed  character  literal	194	None	replace
