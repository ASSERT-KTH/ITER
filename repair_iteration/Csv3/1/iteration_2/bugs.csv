bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  c;  [CE]  duplicate  case  label  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  case  END_OF_STREAM:  return  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	case  END_OF_STREAM:  return  c;	  return    BACKSPACE;    	non-compiled	[CE]  duplicate  case  label	7	None	replace
2	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE;  [CE]  duplicate  case  label  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  case  END_OF_STREAM:  return  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	case  END_OF_STREAM:  return  BACKSPACE;	  return    BACKSPACE;    	non-compiled	[CE]  duplicate  case  label	7	None	replace
3	[BUG]  [BUGGY]  return  CSVFormat.END_OF_STREAM;  [CE]  cannot  find  symbol  END_OF_STREAM  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  CSVFormat.END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  CSVFormat.END_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_STREAM	7	None	replace
4	[BUG]  [BUGGY]  result  =  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  result  =  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	result  =  END_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  result	7	None	replace
5	[BUG]  [BUGGY]  return  CSVFormat.START_OF_STREAM;  [CE]  cannot  find  symbol  START_OF_STREAM  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  CSVFormat.START_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  CSVFormat.START_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  START_OF_STREAM	7	None	replace
6	[BUG]  [BUGGY]  case  END_OF_STREAM:  return  b;  [CE]  duplicate  case  label  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  case  END_OF_STREAM:  return  b;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	case  END_OF_STREAM:  return  b;	  return    BACKSPACE;    	non-compiled	[CE]  duplicate  case  label	7	None	replace
7	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  return  END_OF_STREAM  +  c;  [CE]  unreachable  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  unreachable  statement	15	None	add
8	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  c  +  END_OF_STREAM;  [CE]  not  a  statement  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  c  +  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    c  +  END_OF_STREAM;	  	non-compiled	[CE]  not  a  statement	15	None	add
9	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  c  +=  END_OF_STREAM;  [CE]  cannot  assign  a  value  to  final  variable  c  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  c  +=  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    c  +=  END_OF_STREAM;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  c	15	None	add
10	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
11	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
12	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  (c  +  END_OF_STREAM));  [CE]  not  a  statement  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  (c  +  END_OF_STREAM));  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    (c  +  END_OF_STREAM));	  	non-compiled	[CE]  not  a  statement	15	None	add
13	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
14	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
15	[BUG]  [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  c;  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  c;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  throw  new  IOException( " ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  throw  new  IOException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  throw  new  IOException( " ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  throw  new  IOException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  if(c  ==  END_OF_STREAM)  {  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  }  [CE]  missing  return  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  END_OF_STREAM)  {  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  END_OF_STREAM)  {  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
19	[BUG]  [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  return  c;  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  return  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  return  c;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }	      	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  if(c  ==  END_OF_STREAM)  {  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  }  [CE]  missing  return  statement  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  END_OF_STREAM)  {  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  END_OF_STREAM)  {  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
22	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  c;  }  [CE]  illegal  start  of  expression  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
23	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
24	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart!=  commmentStart)  {  return  commmentStart;  }  [CE]  illegal  start  of  expression  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart!=  commmentStart)  {  return  commmentStart;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart!=  commmentStart)  {  return  commmentStart;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
25	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  throw  new  IOException( " ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  throw  new  IOException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
26	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  return  c;  }  [CE]  illegal  start  of  expression  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  return  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines.contains(c))  {  return  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
27	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readCharAt(c);  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }  [CE]  illegal  start  of  expression  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readCharAt(c);  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readCharAt(c);  if(commmentStart  ==  commmentStart)  {  return  commmentStart;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
28	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  break;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
29	[BUG]  [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentEnd;  }  [CE]  illegal  start  of  expression  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentEnd;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  c  =  0;  c  <  len;  c++)  {  char  commmentStart  =  in.readChar();  if(commmentStart  ==  commmentStart)  {  return  commmentEnd;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
30	[BUG]  [BUGGY]  return  c  +  1;  c  +  1;  [CE]  not  a  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    c  +  1;	  	non-compiled	[CE]  not  a  statement	3	None	add
31	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
32	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
33	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
34	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getEscapeSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
35	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getEscapeSurroundingSpaces(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
36	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
37	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
38	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  c  &  END_OF_STREAM;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  c  &  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    c  &  END_OF_STREAM;	  	non-compiled	[CE]  not  a  statement	22	None	add
39	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
40	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
41	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
42	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
43	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  in.read();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
44	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
45	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
46	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  c  >  0?  c  :  END_OF_STREAM;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  c  >  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    c  >  0?  c  :  END_OF_STREAM;	  	non-compiled	[CE]  not  a  statement	18	None	add
47	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
48	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
49	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
50	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
51	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getCurrentSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getCurrentSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getCurrentSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
52	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
53	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
54	[BUG]  [BUGGY]  return  c  +  2;  c  +  2;  [CE]  not  a  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  c  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    c  +  2;	  	non-compiled	[CE]  not  a  statement	10	None	add
55	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
56	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
57	[BUG]  [BUGGY]  return  c  +  2;  return  c  +  2;  [CE]  unreachable  statement  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  return  c  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    return  c  +  2;	  	non-compiled	[CE]  unreachable  statement	10	None	add
58	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
59	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
60	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpaces(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
61	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
62	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >  0?  1  :  END_OF_STREAM;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
63	[BUG]  [BUGGY]  return  c  >  0?  1  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  END_OF_STREAM;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
64	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  <  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  <  0?  1  :  c;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	25	3	replace
65	[BUG]  [BUGGY]  return  c  <  0?  1  :  c;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  <  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  <  0?  1  :  c;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	25	3	replace
66	[BUG]  [BUGGY]  return  c  >  0?  1  :  escapeSurroundingSpaces;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  escapeSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  escapeSurroundingSpaces;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	25	None	replace
67	[BUG]  [BUGGY]  return  c  >  0?  1  :  END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  END_OBJECT;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  END_OBJECT;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	25	None	replace
68	[BUG]  [BUGGY]  return  c  >  0?  1  :  b;  [CE]  cannot  find  symbol  b  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  b;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  b;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  cannot  find  symbol  b	25	None	replace
69	[BUG]  [BUGGY]  return  c  >  0?  1  :  escape(c);  [CE]  cannot  find  symbol  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  escape(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  escape(c);	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
70	[BUG]  [BUGGY]  return  c  >  0?  1  :  d;  [CE]  cannot  find  symbol  d  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  d;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  d;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  cannot  find  symbol  d	25	None	replace
71	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  2;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  (entry  2)  	14	5	replace
72	[BUG]  [BUGGY]  return  END_OF_STREAM  +  2;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  2;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  (entry  2)  	14	5	replace
73	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1L;  [CE]  possible  loss  of  precision  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1L;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  1L;	  return    END_OF_STREAM    +    1;    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
74	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  4;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  4;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  (entry  2)  	14	5	replace
75	[BUG]  [BUGGY]  return  END_OF_STREAM  +  4;  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  4;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  4;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  (entry  2)  	14	5	replace
76	[BUG]  [BUGGY]  return  default:  END_OF_STREAM  +  1;  [CE]  illegal  start  of  expression  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  default:  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  default:  END_OF_STREAM  +  1;	  return    END_OF_STREAM    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  END_OF_STREAM;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
78	[BUG]  [BUGGY]  return  c  +  END_OF_STREAM;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  END_OF_STREAM;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
79	[BUG]  [BUGGY]  return  END_OF_STREAM  +  escapeSurroundingSpaces;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  escapeSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  escapeSurroundingSpaces;	  return    END_OF_STREAM    +    c;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	16	None	replace
80	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  commmentStart;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  commmentStart;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
81	[BUG]  [BUGGY]  return  END_OF_STREAM  +  commmentStart;  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  commmentStart;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  commmentStart;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
82	[BUG]  [BUGGY]  return  END_OF_STREAM  +  escapeChar;  [CE]  cannot  find  symbol  escapeChar  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  escapeChar;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  escapeChar;	  return    END_OF_STREAM    +    c;    	non-compiled	[CE]  cannot  find  symbol  escapeChar	16	None	replace
83	[BUG]  [BUGGY]  return  END_OF_STREAM  +  commmentSurroundingSpaces;  [CE]  cannot  find  symbol  commmentSurroundingSpaces  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  commmentSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  commmentSurroundingSpaces;	  return    END_OF_STREAM    +    c;    	non-compiled	[CE]  cannot  find  symbol  commmentSurroundingSpaces	16	None	replace
84	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  quoteChar;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  quoteChar;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
85	[BUG]  [BUGGY]  return  END_OF_STREAM  +  quoteChar;  [FE]  (entry  2)  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  quoteChar;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  quoteChar;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
86	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  3;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  3;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
87	[BUG]  [BUGGY]  return  c  +  3;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  3;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  3;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
88	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  4;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  4;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
89	[BUG]  [BUGGY]  return  c  +  4;  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  4;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  4;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
90	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  8;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  8;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
91	[BUG]  [BUGGY]  return  c  +  8;  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  8;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  8;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
92	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  6;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  6;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
93	[BUG]  [BUGGY]  return  c  +  6;  [FE]  (entry  2)  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  6;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  6;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
94	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  5;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  5;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
95	[BUG]  [BUGGY]  return  c  +  5;  [FE]  (entry  2)  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  5;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  5;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
96	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  END_OF_STREAM;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
97	[BUG]  [BUGGY]  return  c  -  END_OF_STREAM;  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  END_OF_STREAM;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
98	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  &  BACKSPACE;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
99	[BUG]  [BUGGY]  return  c  &  BACKSPACE;  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  &  BACKSPACE;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
100	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  &  END_OF_STREAM  +  1;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
101	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM  +  1;  [FE]  (entry  2)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  &  END_OF_STREAM  +  1;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
102	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  %  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  %  END_OF_STREAM;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
103	[BUG]  [BUGGY]  return  c  %  END_OF_STREAM;  [FE]  (entry  2)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  %  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  %  END_OF_STREAM;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
104	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  |  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  &  END_OF_STREAM  |  1;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
105	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM  |  1;  [FE]  (entry  2)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  |  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  &  END_OF_STREAM  |  1;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
106	[BUG]  [BUGGY]  return  c.intValue();  [CE]  int  cannot  be  dereferenced  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c.intValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
107	[BUG]  [BUGGY]  return  END_OF_STREAM.intValue()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.intValue()  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.intValue()  +  1;	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
108	[BUG]  [BUGGY]  return  END_OF_STREAM.doubleValue();  [CE]  int  cannot  be  dereferenced  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.doubleValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.doubleValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
109	[BUG]  [BUGGY]  return  END_OF_STREAM.longValue();  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.longValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.longValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
110	[BUG]  [BUGGY]  return  END_OF_STREAM.floatValue();  [CE]  int  cannot  be  dereferenced  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.floatValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.floatValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
111	[BUG]  [BUGGY]  return  END_OF_STREAM.intValue()  *  2;  [CE]  int  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.intValue()  *  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.intValue()  *  2;	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
112	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  2;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
113	[BUG]  [BUGGY]  return  c  -  2;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  2;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
114	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  4;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  4;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
115	[BUG]  [BUGGY]  return  c  -  4;  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  4;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  4;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
116	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  6;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  6;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
117	[BUG]  [BUGGY]  return  c  -  6;  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  6;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  6;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
118	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  3;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  3;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
119	[BUG]  [BUGGY]  return  c  -  3;  [FE]  (entry  2)  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  3;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  3;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
120	[BUG]  [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  END_OF_STREAM  :  END_OF_STREAM;  [CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.encodeEscapeSurroundingSpaces?  END_OF_STREAM  :  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces	2	None	replace
121	[BUG]  [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  0  :  END_OF_STREAM;  [CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  0  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.encodeEscapeSurroundingSpaces?  0  :  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces	2	None	replace
122	[BUG]  [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  -1  :  END_OF_STREAM;  [CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  -1  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.encodeEscapeSurroundingSpaces?  -1  :  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces	2	None	replace
123	[BUG]  [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  END_OF_STREAM  :  END_BACKSPACE;  [CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.encodeEscapeSurroundingSpaces?  END_OF_STREAM  :  END_BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.encodeEscapeSurroundingSpaces?  END_OF_STREAM  :  END_BACKSPACE;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  encodeEscapeSurroundingSpaces	2	None	replace
124	[BUG]  [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_STREAM.equals(c);  [CE]  cannot  find  symbol  result  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  result  =  END_OF_STREAM  ||  END_OF_STREAM.equals(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	result  =  END_OF_STREAM  ||  END_OF_STREAM.equals(c);	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  result	2	None	replace
125	[BUG]  [BUGGY]  return  END_OF_STREAM;  return  END_OF_STREAM;  [CE]  unreachable  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  return  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    return  END_OF_STREAM;	  	non-compiled	[CE]  unreachable  statement	1	None	add
126	[BUG]  [BUGGY]  return  END_OF_STREAM;  result  =  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  result  =  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    result  =  END_OF_STREAM;	  	non-compiled	[CE]  cannot  find  symbol  result	1	None	add
127	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
128	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
129	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
130	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
131	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
132	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
133	[BUG]  [BUGGY]  return  CSVFormat.EXPR_RESULT;  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  CSVFormat.EXPR_RESULT;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  CSVFormat.EXPR_RESULT;	  return    escape;    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	9	None	replace
134	[BUG]  [BUGGY]  return  c  +  escapeSurroundingSpaces;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  escapeSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  escapeSurroundingSpaces;	  return    escape;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	9	None	replace
135	[BUG]  [BUGGY]  return  CSVFormat.BACKSPACE;  [CE]  cannot  find  symbol  BACKSPACE  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  CSVFormat.BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  CSVFormat.BACKSPACE;	  return    escape;    	non-compiled	[CE]  cannot  find  symbol  BACKSPACE	9	None	replace
136	[BUG]  [BUGGY]  return  CSVFormat.START_EOF;  [CE]  cannot  find  symbol  START_EOF  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  CSVFormat.START_EOF;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  CSVFormat.START_EOF;	  return    escape;    	non-compiled	[CE]  cannot  find  symbol  START_EOF	9	None	replace
137	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  ==  0?  c  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
138	[BUG]  [BUGGY]  return  c  ==  0?  c  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  0?  c  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
139	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
140	[BUG]  [BUGGY]  return  c  >  0?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
141	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >=  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >=  0?  c  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	19	3	replace
142	[BUG]  [BUGGY]  return  c  >=  0?  c  :  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >=  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >=  0?  c  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	19	3	replace
143	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c!=  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c!=  0?  c  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	19	3	replace
144	[BUG]  [BUGGY]  return  c!=  0?  c  :  END_OF_STREAM;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c!=  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c!=  0?  c  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	19	3	replace
145	[BUG]  [BUGGY]  return  this.ignoreEmptyLines;  [CE]  incompatible  types  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.ignoreEmptyLines;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.ignoreEmptyLines;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	17	None	replace
146	[BUG]  [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  CSVFormat.END_OF_SURroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  CSVFormat.END_OF_SURroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	17	None	replace
147	[BUG]  [BUGGY]  return  this.ignoredEmptyLines;  [CE]  cannot  find  symbol  ignoredEmptyLines  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.ignoredEmptyLines;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.ignoredEmptyLines;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ignoredEmptyLines	17	None	replace
148	[BUG]  [BUGGY]  return  escapeSurroundingSpaces;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escapeSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  escapeSurroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	17	None	replace
149	[BUG]  [BUGGY]  return  this.ignoreSurroundingSpaces;  [CE]  incompatible  types  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.ignoreSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.ignoreSurroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  incompatible  types	17	None	replace
150	[BUG]  [BUGGY]  return  c  -  1;  c  -  1;  [CE]  not  a  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    c  -  1;	  	non-compiled	[CE]  not  a  statement	20	None	add
151	[BUG]  [BUGGY]  return  c  -  1;  int  c  -  1;  [CE]  ';'  expected  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  -  1;	  	non-compiled	[CE]  ';'  expected	20	None	add
152	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
153	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
154	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getEscapeSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
155	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpaces(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpaces(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getEscapeSurroundingSpaces(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
156	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
157	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
158	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  c  >  0?  1  :  c;  [CE]  not  a  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  c  >  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    c  >  0?  1  :  c;	  	non-compiled	[CE]  not  a  statement	24	None	add
159	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  >  0?  1  :  c;  [CE]  ';'  expected  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  >  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  >  0?  1  :  c;	  	non-compiled	[CE]  ';'  expected	24	None	add
160	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  Integer  c  >  0?  1  :  c;  [CE]  ';'  expected  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  Integer  c  >  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    Integer  c  >  0?  1  :  c;	  	non-compiled	[CE]  ';'  expected	24	None	add
161	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	24	None	add
162	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	24	None	add
163	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  (c  >  0?  1  :  c);  [CE]  not  a  statement  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  (c  >  0?  1  :  c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    (c  >  0?  1  :  c);	  	non-compiled	[CE]  not  a  statement	24	None	add
164	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	24	None	add
165	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	24	None	add
166	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
167	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
168	[BUG]  [BUGGY]  return  BACKSPACE;  Integer  c  =  in.readInt();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  Integer  c  =  in.readInt();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    Integer  c  =  in.readInt();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
169	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
170	[BUG]  [BUGGY]  return  BACKSPACE;  Integer  c  =  getEscapeSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  Integer  c  =  getEscapeSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    Integer  c  =  getEscapeSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
171	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getEscapeSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
172	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
173	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
174	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  return  END_OF_STREAM  +  1;  [CE]  unreachable  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  return  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    return  END_OF_STREAM  +  1;	  	non-compiled	[CE]  unreachable  statement	13	None	add
175	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  END_OF_STREAM  +  1;  [CE]  not  a  statement  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    END_OF_STREAM  +  1;	  	non-compiled	[CE]  not  a  statement	13	None	add
176	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
177	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
178	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  result  +=  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  result  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  result  +=  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    result  +=  END_OF_STREAM  +  1;	  	non-compiled	[CE]  cannot  find  symbol  result	13	None	add
179	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
180	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpace(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
181	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  result  +=  END_OF_STREAM;  [CE]  cannot  find  symbol  result  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  result  +=  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    result  +=  END_OF_STREAM;	  	non-compiled	[CE]  cannot  find  symbol  result	13	None	add
182	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  DISABLED;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  DISABLED;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
183	[BUG]  [BUGGY]  return  END_OF_STREAM  +  DISABLED;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  DISABLED;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  DISABLED;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
184	[BUG]  [BUGGY]  return  ch  +  END_OF_STREAM;  [CE]  cannot  find  symbol  ch  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  ch  +  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  ch  +  END_OF_STREAM;	  return    END_OF_STREAM    +    c;    	non-compiled	[CE]  cannot  find  symbol  ch	16	None	replace
185	[BUG]  [BUGGY]  return  END_OF_STREAM  +  'ufffd';  [CE]  unclosed  character  literal  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  'ufffd';  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  'ufffd';	  return    END_OF_STREAM    +    c;    	non-compiled	[CE]  unclosed  character  literal	16	None	replace
186	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces();  return  END_OF_STREAM  +  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces();  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpaces();  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
187	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getEscapeSurroundingSpaces();  return  END_OF_STREAM  +  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getEscapeSurroundingSpaces();  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getEscapeSurroundingSpaces();  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
188	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpace();  return  END_OF_STREAM  +  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpace();  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpace();  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
189	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces().size();  return  END_OF_STREAM  +  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces().size();  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpaces().size();  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
190	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
191	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getCurrentIndex();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
192	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
193	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  int  c  =  getSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	13	None	add
194	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  Record  do  not  match  expected  result(c  &  END_OF_STREAM);  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  Record  do  not  match  expected  result(c  &  END_OF_STREAM);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    Record  do  not  match  expected  result(c  &  END_OF_STREAM);	  	non-compiled	[CE]  not  a  statement	22	None	add
195	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  Record  do  not  match  expected  result(c  -  END_OF_STREAM);  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  Record  do  not  match  expected  result(c  -  END_OF_STREAM);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    Record  do  not  match  expected  result(c  -  END_OF_STREAM);	  	non-compiled	[CE]  not  a  statement	22	None	add
196	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  Record  do  not  match  expected  result(c)  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	22	None	add
197	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
198	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  missing  return  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
199	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  missing  return  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
200	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [CE]  missing  return  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
201	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [CE]  missing  return  statement  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
202	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [CE]  missing  return  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  return  END_OF_STREAM;  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
203	[BUG]  [BUGGY]  [FE]  IOException  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }	      	compilable	  [FE]  IOException  	12	5	replace
204	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  return  END_OF_STREAM;  }  else  {  throw  new  IOException( " ");  }	      	compilable	  [FE]  IOException  	12	5	replace
205	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  delimiter;  }  [CE]  missing  return  statement  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  delimiter;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  return  delimiter;  }	      	non-compiled	[CE]  missing  return  statement	12	None	replace
206	[BUG]  [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_OF_STREAM;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	2	None	replace
207	[BUG]  [BUGGY]  return  this.escapeSurroundingSpaces?  0  :  END_OF_STREAM;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.escapeSurroundingSpaces?  0  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.escapeSurroundingSpaces?  0  :  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	2	None	replace
208	[BUG]  [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_EOF;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_EOF;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_EOF;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	2	None	replace
209	[BUG]  [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_BACKSPACE;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_BACKSPACE;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	2	None	replace
210	[BUG]  [BUGGY]  return  this.escapeSurroundingSpaces?  -1  :  END_OF_STREAM;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.escapeSurroundingSpaces?  -1  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.escapeSurroundingSpaces?  -1  :  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	2	None	replace
211	[BUG]  [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_EXPECTED;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_EXPECTED;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.escapeSurroundingSpaces?  END_OF_STREAM  :  END_EXPECTED;	  return    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	2	None	replace
212	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  ==  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
213	[BUG]  [BUGGY]  return  c  ==  0?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
214	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >=  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >=  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
215	[BUG]  [BUGGY]  return  c  >=  0?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >=  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >=  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
216	[BUG]  [BUGGY]  return  c  >  0?  END_OF_STREAM  :  END_SPACE;  [CE]  cannot  find  symbol  END_SPACE  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  END_OF_STREAM  :  END_SPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  END_OF_STREAM  :  END_SPACE;	  return    c    >    0?    c    :    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  END_SPACE	19	None	replace
217	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  8;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  8;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
218	[BUG]  [BUGGY]  return  c  -  8;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  8;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  8;	  return    c    -    1;    	compilable	  [FE]  (entry  2)  	21	5	replace
219	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
220	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getCurrentIndex();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
221	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
222	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
223	[BUG]  [BUGGY]  return  c  +  1;  Integer  c  +  1;  [CE]  ';'  expected  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  Integer  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    Integer  c  +  1;	  	non-compiled	[CE]  ';'  expected	3	None	add
224	[BUG]  [BUGGY]  return  BACKSPACE;  return  BACKSPACE;  [CE]  unreachable  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  return  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    return  BACKSPACE;	  	non-compiled	[CE]  unreachable  statement	6	None	add
225	[BUG]  [BUGGY]  return  BACKSPACE;  Integer  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  Integer  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    Integer  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
226	[BUG]  [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	6	None	add
227	[BUG]  [BUGGY]  return  END_OF_STREAM  +  escapeSurroundingSpaces.length;  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  escapeSurroundingSpaces.length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  escapeSurroundingSpaces.length;	  return    escape;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	9	None	replace
228	[BUG]  [BUGGY]  return  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.length;	  return    escape;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
229	[BUG]  [BUGGY]  return  END_OF_STREAM  +  escapeSurroundingSpaces[c];  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  escapeSurroundingSpaces[c];  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  escapeSurroundingSpaces[c];	  return    escape;    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	9	None	replace
230	[BUG]  [BUGGY]  return  escape;  escape;  [CE]  not  a  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    escape;	  	non-compiled	[CE]  not  a  statement	8	None	add
231	[BUG]  [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape!=  null)  {  return  escape;  }  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape!=  null)  {  return  escape;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape!=  null)  {  return  escape;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
232	[BUG]  [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeChar();  if(escape!=  null)  {  return  escape;  }  [CE]  illegal  start  of  expression  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeChar();  if(escape!=  null)  {  return  escape;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    if(escape!=  0)  {  int  escape  =  getEscapeChar();  if(escape!=  null)  {  return  escape;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
233	[BUG]  [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape  ==  escape)  {  return  escape;  }  [CE]  illegal  start  of  expression  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape  ==  escape)  {  return  escape;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape  ==  escape)  {  return  escape;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
234	[BUG]  [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape  >=  escape)  {  return  escape;  }  [CE]  illegal  start  of  expression  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape  >=  escape)  {  return  escape;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    if(escape!=  0)  {  int  escape  =  getEscapeSurroundingSpaces();  if(escape  >=  escape)  {  return  escape;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
235	[BUG]  [BUGGY]  return  escape;  int  escape  =  readEscape(c,  END_OF_STREAM);  [CE]  method  readEscape  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  int  escape  =  readEscape(c,  END_OF_STREAM);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    int  escape  =  readEscape(c,  END_OF_STREAM);	  	non-compiled	[CE]  method  readEscape  in  class  Lexer  cannot  be  applied  to  given  types;	8	None	add
236	[BUG]  [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeChar();  if(escape!=  0)  {  return  escape;  }  [CE]  illegal  start  of  expression  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  if(escape!=  0)  {  int  escape  =  getEscapeChar();  if(escape!=  0)  {  return  escape;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    if(escape!=  0)  {  int  escape  =  getEscapeChar();  if(escape!=  0)  {  return  escape;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
237	[BUG]  [BUGGY]  return  escape;  int  escape  =  readEscape(in,  c);  [CE]  method  readEscape  in  class  Lexer  cannot  be  applied  to  given  types;  [FE]                  (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  int  escape  =  readEscape(in,  c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    int  escape  =  readEscape(in,  c);	  	non-compiled	[CE]  method  readEscape  in  class  Lexer  cannot  be  applied  to  given  types;	8	None	add
238	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  return  c  +  2;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  return  c  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpaces();  return  c  +  2;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
239	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  return  c  +  2;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  return  c  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces();  return  c  +  2;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
240	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeSurroundingSpaces();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeSurroundingSpaces();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
241	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
242	[BUG]  [BUGGY]  return  escape.intValue();  [CE]  char  cannot  be  dereferenced  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape.intValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  escape.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  char  cannot  be  dereferenced	5	None	replace
243	[BUG]  [BUGGY]  return  in.intValue();  [CE]  cannot  find  symbol  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  in.intValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  in.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
244	[BUG]  [BUGGY]  return  d.intValue();  [CE]  cannot  find  symbol  d  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  d.intValue();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  d.intValue();	  return    END_OF_STREAM.intValue();    	non-compiled	[CE]  cannot  find  symbol  d	5	None	replace
245	[BUG]  [BUGGY]  return  c  -  1;  Integer  c  -  1;  [CE]  ';'  expected  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  Integer  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    Integer  c  -  1;	  	non-compiled	[CE]  ';'  expected	20	None	add
246	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
247	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getCurrentSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getCurrentSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getCurrentSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
248	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  12;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  12;	  return    c    +    1;    	compilable	  [FE]  (entry  2)  	4	5	replace
249	[BUG]  [BUGGY]  return  c  +  12;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  12;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  12;	  return    c    +    1;    	compilable	  [FE]  (entry  2)  	4	5	replace
250	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >=  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >=  0?  1  :  c;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
251	[BUG]  [BUGGY]  return  c  >=  0?  1  :  c;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >=  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >=  0?  1  :  c;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
252	[BUG]  [BUGGY]  return  c  >  0?  1  :  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  END_OF_SURroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  END_OF_SURroundingSpaces;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	25	None	replace
253	[BUG]  [BUGGY]  return  c  >  0?  1  :  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  END_OF_STREAM.length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  END_OF_STREAM.length;	  return    c    >    0?    1    :    c;    	non-compiled	[CE]  int  cannot  be  dereferenced	25	None	replace
254	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  ==  0?  1  :  c;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	25	3	replace
255	[BUG]  [BUGGY]  return  c  ==  0?  1  :  c;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  0?  1  :  c;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	25	3	replace
256	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	24	None	add
257	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpaces().length;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  int  c  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    int  c  =  getSurroundingSpaces().length;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	24	None	add
258	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
259	[BUG]  [BUGGY]  return  END_OF_STREAM;  Integer  c  =  getEscapeSurroundingSpaces();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  Integer  c  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    Integer  c  =  getEscapeSurroundingSpaces();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
260	[BUG]  [BUGGY]  return  END_OF_STREAM;  Integer  c  =  getEscapeSurroundingSpaces();  return  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  Integer  c  =  getEscapeSurroundingSpaces();  return  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    Integer  c  =  getEscapeSurroundingSpaces();  return  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
261	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getCurrentIndex();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
262	[BUG]  [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  return  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  int  c  =  getEscapeSurroundingSpaces();  return  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    int  c  =  getEscapeSurroundingSpaces();  return  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	1	None	add
263	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  END_OF_STREAM?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  ==  END_OF_STREAM?  END_OF_STREAM  :  END_OF_STREAM;	  return    BACKSPACE;    	compilable	  [FE]  (entry  2)  	7	3	replace
264	[BUG]  [BUGGY]  return  c  ==  END_OF_STREAM?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  END_OF_STREAM?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  END_OF_STREAM?  END_OF_STREAM  :  END_OF_STREAM;	  return    BACKSPACE;    	compilable	  [FE]  (entry  2)  	7	3	replace
265	[BUG]  [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >  END_OF_Escape;  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >  END_OF_Escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >  END_OF_Escape;	  return    BACKSPACE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
266	[BUG]  [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >  END_OF_SURroundingSpaces;  [CE]  illegal  start  of  expression  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >  END_OF_SURroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >  END_OF_SURroundingSpaces;	  return    BACKSPACE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
267	[BUG]  [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >=  END_OF_Escape;  [CE]  illegal  start  of  expression  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >=  END_OF_Escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM  ||  c  >=  END_OF_Escape;	  return    BACKSPACE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
268	[BUG]  [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM;  [CE]  illegal  start  of  expression  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  ==  END_OF_STREAM  ||  c  <  =  END_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
269	[BUG]  [BUGGY]  return  c  +  END_OF_SURroundingSpaces;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  END_OF_SURroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  END_OF_SURroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	17	None	replace
270	[BUG]  [BUGGY]  return  this.ignoredSurroundingSpaces;  [CE]  cannot  find  symbol  ignoredSurroundingSpaces  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  this.ignoredSurroundingSpaces;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  this.ignoredSurroundingSpaces;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  ignoredSurroundingSpaces	17	None	replace
271	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  &  END_OF_STREAM  +  2;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
272	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM  +  2;  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  &  END_OF_STREAM  +  2;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	5	replace
273	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  *  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  &  END_OF_STREAM  *  2;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	4	replace
274	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM  *  2;  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM  *  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  &  END_OF_STREAM  *  2;	  return    c    &    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	23	4	replace
275	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getCurrentIndex();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getCurrentIndex();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getCurrentIndex();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
276	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  getSurroundingSpace();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
277	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  8;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  8;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  (entry  2)  	14	5	replace
278	[BUG]  [BUGGY]  return  END_OF_STREAM  +  8;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  8;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  8;	  return    END_OF_STREAM    +    1;    	compilable	  [FE]  (entry  2)  	14	5	replace
279	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  escape;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
280	[BUG]  [BUGGY]  return  END_OF_STREAM  +  escape;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  escape;	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
281	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  'n';  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  END_OF_STREAM  +  'n';	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
282	[BUG]  [BUGGY]  return  END_OF_STREAM  +  'n';  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  'n';  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  'n';	  return    END_OF_STREAM    +    c;    	compilable	  [FE]  (entry  2)  	16	5	replace
283	[BUG]  [BUGGY]  return  END_OF_STREAM  +  in.readLine();  [CE]  incompatible  types  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  in.readLine();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  +  in.readLine();	  return    END_OF_STREAM    +    c;    	non-compiled	[CE]  incompatible  types	16	None	replace
284	[BUG]  [BUGGY]  int  delimiter  =  getDelimiter();  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  getDelimiter();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  getDelimiter();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
285	[BUG]  [BUGGY]  int  delimiter  =  readEscapeSurroundingSpaces(c);  break;  [CE]  cannot  find  symbol  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  readEscapeSurroundingSpaces(c);  break;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  readEscapeSurroundingSpaces(c);  break;	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
286	[BUG]  [BUGGY]  int  delimiter  =  readEscapeSurroundingSpaces(c);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  readEscapeSurroundingSpaces(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  readEscapeSurroundingSpaces(c);	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
287	[BUG]  [BUGGY]  int  delimiter  =  getSurroundingSpaces().length;  [CE]  cannot  find  symbol  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  getSurroundingSpaces().length;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  getSurroundingSpaces().length;	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
288	[BUG]  [BUGGY]  int  delimiter  =  getSurroundingSpaces().size();  [CE]  cannot  find  symbol  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  getSurroundingSpaces().size();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  getSurroundingSpaces().size();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
289	[BUG]  [BUGGY]  int  delimiter  =  readEscapeSurroundingSpaces(c,  escape);  break;  [CE]  cannot  find  symbol  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  readEscapeSurroundingSpaces(c,  escape);  break;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  readEscapeSurroundingSpaces(c,  escape);  break;	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
290	[BUG]  [BUGGY]  int  delimiter  =  getEscapeSurroundingSpaces();  [CE]  cannot  find  symbol  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  int  delimiter  =  getEscapeSurroundingSpaces();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	int  delimiter  =  getEscapeSurroundingSpaces();	      	non-compiled	[CE]  cannot  find  symbol	12	None	replace
291	[BUG]  [BUGGY]  return  entry  &  END_OF_STREAM;  [CE]  cannot  find  symbol  entry  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  entry  &  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  entry  &  END_OF_STREAM;	  return    c    &    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  entry	23	None	replace
292	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  return  c  >  0?  1  :  c;  [CE]  unreachable  statement  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  return  c  >  0?  1  :  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    return  c  >  0?  1  :  c;	  	non-compiled	[CE]  unreachable  statement	24	None	add
293	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  for(int  c  =  0;  c  <  len;  ++c)  {  if(!ignoreEmptyLines)  {  return  c  >  0?  1  :  c;  }  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  for(int  c  =  0;  c  <  len;  ++c)  {  if(!ignoreEmptyLines)  {  return  c  >  0?  1  :  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    for(int  c  =  0;  c  <  len;  ++c)  {  if(!ignoreEmptyLines)  {  return  c  >  0?  1  :  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
294	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  for(int  c  =  0;  c  <  2;  ++c)  {  if(!ignoreEmptyLines)  {  return  c  >  0?  1  :  c;  }  [CE]  illegal  start  of  expression  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  for(int  c  =  0;  c  <  2;  ++c)  {  if(!ignoreEmptyLines)  {  return  c  >  0?  1  :  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    for(int  c  =  0;  c  <  2;  ++c)  {  if(!ignoreEmptyLines)  {  return  c  >  0?  1  :  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
295	[BUG]  [BUGGY]  return  c  >  0?  1  :  c;  for(int  c  =  0;  c  <  len;  ++c)  {  if(c  >  0?  1  :  c;  }  [CE]  ')'  expected  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c;  for(int  c  =  0;  c  <  len;  ++c)  {  if(c  >  0?  1  :  c;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    1    :    c;    for(int  c  =  0;  c  <  len;  ++c)  {  if(c  >  0?  1  :  c;  }	  	non-compiled	[CE]  ')'  expected	24	None	add
296	[BUG]  [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  return  END_OF_STREAM;  [CE]  duplicate  case  label  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  return  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    case  END_OF_STREAM:  return  END_OF_STREAM;	  	non-compiled	[CE]  duplicate  case  label	1	None	add
297	[BUG]  [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  	non-compiled	[CE]  duplicate  case  label	1	None	add
298	[BUG]  [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  EOFException( "EOF  whilst  processing  escape  sequence   ");  [CE]  duplicate  case  label  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  EOFException( "EOF  whilst  processing  escape  sequence   ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    case  END_OF_STREAM:  throw  new  EOFException( "EOF  whilst  processing  escape  sequence   ");	  	non-compiled	[CE]  duplicate  case  label	1	None	add
299	[BUG]  [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");  [CE]  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");	  	non-compiled	[CE]  	1	None	add
300	[BUG]  [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  	non-compiled	[CE]  duplicate  case  label	1	None	add
301	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  -  1  +  1;	  return    c    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	21	3	replace
302	[BUG]  [BUGGY]  return  c  -  1  +  1;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  -  1  +  1;	  return    c    -    1;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	21	3	replace
303	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >  0?  1  :  escape;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
304	[BUG]  [BUGGY]  return  c  >  0?  1  :  escape;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  escape;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
305	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  -1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >  0?  1  :  -1;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
306	[BUG]  [BUGGY]  return  c  >  0?  1  :  -1;  [FE]  (entry  2)  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  -1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  -1;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
307	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  >  0?  1  :  c  +  1;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
308	[BUG]  [BUGGY]  return  c  >  0?  1  :  c  +  1;  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  1  :  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  >  0?  1  :  c  +  1;	  return    c    >    0?    1    :    c;    	compilable	  [FE]  (entry  2)  	25	5	replace
309	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpaces();  return  c  -  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getEscapeSurroundingSpaces();  return  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getEscapeSurroundingSpaces();  return  c  -  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
310	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpaces();  return  c  -  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpaces();  return  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getSurroundingSpaces();  return  c  -  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
311	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getEscapeChar();  return  c  -  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getEscapeChar();  return  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getEscapeChar();  return  c  -  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
312	[BUG]  [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpace();  return  c  -  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  -  1;  int  c  =  getSurroundingSpace();  return  c  -  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    -    1;    int  c  =  getSurroundingSpace();  return  c  -  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	20	None	add
313	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  return  c  >  0?  c  :  END_OF_STREAM;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  return  c  >  0?  c  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    return  c  >  0?  c  :  END_OF_STREAM;	  	non-compiled	[CE]  unreachable  statement	18	None	add
314	[BUG]  [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  Integer.parseInt(quoteChar);  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  >  0?  c  :  END_OF_STREAM;  int  c  =  Integer.parseInt(quoteChar);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    >    0?    c    :    END_OF_STREAM;    int  c  =  Integer.parseInt(quoteChar);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	18	None	add
315	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  [CE]  duplicate  case  label  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  return  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    case  END_OF_STREAM:  return  END_OF_STREAM  +  1;	  	non-compiled	[CE]  duplicate  case  label	13	None	add
316	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence   ");  [CE]  duplicate  case  label  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence   ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence   ");	  	non-compiled	[CE]  duplicate  case  label	13	None	add
317	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");  [CE]  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");	  	non-compiled	[CE]  	13	None	add
318	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  EOFException( "EOF  whilst  processing  escape  sequence   ");  [CE]  duplicate  case  label  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  EOFException( "EOF  whilst  processing  escape  sequence   ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    case  END_OF_STREAM:  throw  new  EOFException( "EOF  whilst  processing  escape  sequence   ");	  	non-compiled	[CE]  duplicate  case  label	13	None	add
319	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   "  +  1;  [CE]  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   "  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   "  +  1;	  	non-compiled	[CE]  	13	None	add
320	[BUG]  [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  1;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    1;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  	non-compiled	[CE]  duplicate  case  label	13	None	add
321	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  return  c  &  END_OF_STREAM;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  return  c  &  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    return  c  &  END_OF_STREAM;	  	non-compiled	[CE]  unreachable  statement	22	None	add
322	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  Collections.sort(c);  [CE]  cannot  find  symbol  Collections  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  Collections.sort(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    Collections.sort(c);	  	non-compiled	[CE]  cannot  find  symbol  Collections	22	None	add
323	[BUG]  [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeChar();  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  &  END_OF_STREAM;  int  c  =  getEscapeChar();  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    &    END_OF_STREAM;    int  c  =  getEscapeChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	22	None	add
324	[BUG]  [BUGGY]  return  END_OF_SURroundingSpaces  +  1;  [CE]  cannot  find  symbol  END_OF_SURroundingSpaces  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_SURroundingSpaces  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_SURroundingSpaces  +  1;	  return    END_OF_SURroundingSpaces;    	non-compiled	[CE]  cannot  find  symbol  END_OF_SURroundingSpaces	17	None	replace
325	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  *  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  *  2;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
326	[BUG]  [BUGGY]  return  c  *  2;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  *  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  *  2;	  return    c    +    2;    	compilable	  [FE]  (entry  2)  	11	5	replace
327	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c!=  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c!=  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
328	[BUG]  [BUGGY]  return  c!=  0?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c!=  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c!=  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
329	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  <  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  <  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
330	[BUG]  [BUGGY]  return  c  <  0?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  (entry  2)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  <  0?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  <  0?  END_OF_STREAM  :  END_OF_STREAM;	  return    c    >    0?    c    :    END_OF_STREAM;    	compilable	  [FE]  (entry  2)  	19	3	replace
331	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  break;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
332	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoredEmptyLines.contains(c))  {  break;  }  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoredEmptyLines.contains(c))  {  break;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoredEmptyLines.contains(c))  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
333	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  break;  }  [CE]  illegal  start  of  expression  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  break;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
334	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
335	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  return  DISABLED;  }  [CE]  illegal  start  of  expression  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  return  DISABLED;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  return  DISABLED;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
336	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  in.read();  }  [CE]  illegal  start  of  expression  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  in.read();  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  ||!ignoreEmptyLines)  {  return  in.read();  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
337	[BUG]  [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  escape;  for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  return  false;  }  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    escape;    for(int  i  =  0,  len  =  escape.length;  i  <  len;  ++i)  {  if(!ignoreEmptyLines  &&!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
338	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  case  END_OF_STREAM:  return  END_OF_STREAM  +  c;  [CE]  duplicate  case  label  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  case  END_OF_STREAM:  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    case  END_OF_STREAM:  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  duplicate  case  label	15	None	add
339	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces().length;  return  END_OF_STREAM  +  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getSurroundingSpaces().length;  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getSurroundingSpaces().length;  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
340	[BUG]  [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getEscapeSurroundingSpace();  return  END_OF_STREAM  +  c;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  +  c;  int  c  =  getEscapeSurroundingSpace();  return  END_OF_STREAM  +  c;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    END_OF_STREAM    +    c;    int  c  =  getEscapeSurroundingSpace();  return  END_OF_STREAM  +  c;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	15	None	add
341	[BUG]  [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  return  BACKSPACE;  [CE]  duplicate  case  label  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  return  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    case  END_OF_STREAM:  return  BACKSPACE;	  	non-compiled	[CE]  duplicate  case  label	6	None	add
342	[BUG]  [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [CE]  duplicate  case  label  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");	  	non-compiled	[CE]  duplicate  case  label	6	None	add
343	[BUG]  [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [CE]  duplicate  case  label  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence. ");	  	non-compiled	[CE]  duplicate  case  label	6	None	add
344	[BUG]  [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");  [CE]  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    case  END_OF_STREAM:  throw  new  EOF  whilst  processing  escape  sequence   ");	  	non-compiled	[CE]  	6	None	add
345	[BUG]  [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  return  BACKSPACE;  [CE]  duplicate  case  label  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  return  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  return  BACKSPACE;	  	non-compiled	[CE]  duplicate  case  label	6	None	add
346	[BUG]  [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break  BACKSPACE;  [CE]  duplicate  case  label  [FE]              (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  BACKSPACE;  case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break  BACKSPACE;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    BACKSPACE;    case  END_OF_STREAM:  throw  new  IOException( "EOF  whilst  processing  escape  sequence ");  break  BACKSPACE;	  	non-compiled	[CE]  duplicate  case  label	6	None	add
347	[BUG]  [BUGGY]  return  END_OF_STREAM.equals(c)?  BACKSPACE  :  END_OF_STREAM;  [CE]  int  cannot  be  dereferenced  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.equals(c)?  BACKSPACE  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.equals(c)?  BACKSPACE  :  END_OF_STREAM;	  return    BACKSPACE;    	non-compiled	[CE]  int  cannot  be  dereferenced	7	None	replace
348	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_EscapeSequences;  [CE]  cannot  find  symbol  END_OF_EscapeSequences  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_EscapeSequences;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_EscapeSequences;	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EscapeSequences	7	None	replace
349	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_Escape.equals(c);  [CE]  cannot  find  symbol  END_OF_Escape  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_Escape.equals(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_Escape.equals(c);	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_Escape	7	None	replace
350	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_EscapeSequences.indexOf(c)  >=  -1;  [CE]  cannot  find  symbol  END_OF_EscapeSequences  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_EscapeSequences.indexOf(c)  >=  -1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_EscapeSequences.indexOf(c)  >=  -1;	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EscapeSequences	7	None	replace
351	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_EscapeSequences.indexOf(c)  >=  0;  [CE]  cannot  find  symbol  END_OF_EscapeSequences  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_EscapeSequences.indexOf(c)  >=  0;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_EscapeSequences.indexOf(c)  >=  0;	  return    BACKSPACE;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EscapeSequences	7	None	replace
352	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getSurroundingSpaces();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getSurroundingSpaces();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
353	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  return  c  +  2;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  return  c  +  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeChar();  return  c  +  2;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
354	[BUG]  [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  2;  int  c  =  getEscapeChar();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    2;    int  c  =  getEscapeChar();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	10	None	add
355	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM;	  return    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	2	None	replace
356	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM.equals(c);  [CE]  int  cannot  be  dereferenced  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM.equals(c);  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM.equals(c);	  return    END_OF_STREAM;    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
357	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  1;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  +  1;	  return    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	2	None	replace
358	[BUG]  [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  *  2;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM  ||  END_OF_STREAM  *  2;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM  ||  END_OF_STREAM  *  2;	  return    END_OF_STREAM;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	2	None	replace
359	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpaces();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getSurroundingSpaces();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
360	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getEscapeSurroundingSpaces();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getEscapeSurroundingSpaces();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
361	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getEscapeChar();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getEscapeChar();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getEscapeChar();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
362	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpace();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getSurroundingSpace();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getSurroundingSpace();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
363	[BUG]  [BUGGY]  return  c  +  1;  int  c  =  getChar();  return  c  +  1;  [CE]  variable  c  is  already  defined  in  method  readEscape()  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  1;  int  c  =  getChar();  return  c  +  1;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return    c    +    1;    int  c  =  getChar();  return  c  +  1;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEscape()	3	None	add
364	[BUG]  [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_Escape;  [CE]  int  cannot  be  dereferenced  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_Escape;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_Escape;	  return    escape;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
365	[BUG]  [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_SURroundingSpaces  :  END_OF_STREAM;  [CE]  int  cannot  be  dereferenced  [FE]      (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_SURroundingSpaces  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.equals(c)?  END_OF_SURroundingSpaces  :  END_OF_STREAM;	  return    escape;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
366	[BUG]  [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_EOF;  [CE]  int  cannot  be  dereferenced  [FE]        (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_EOF;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_EOF;	  return    escape;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
367	[BUG]  [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_Escape  :  END_OF_STREAM;  [CE]  int  cannot  be  dereferenced  [FE]          (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_Escape  :  END_OF_STREAM;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.equals(c)?  END_OF_Escape  :  END_OF_STREAM;	  return    escape;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
368	[BUG]  [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_EscapeSequence;  [CE]  int  cannot  be  dereferenced  [FE]            (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_EscapeSequence;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  END_OF_STREAM.equals(c)?  END_OF_STREAM  :  END_OF_EscapeSequence;	  return    escape;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
369	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  18;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	add	return  c  +  18;	  return    c    +    1;    	compilable	  [FE]  (entry  2)  	4	5	replace
370	[BUG]  [BUGGY]  return  c  +  18;  [FE]  (entry  2)  [FE]    (entry  2)    [CONTEXT]    case  CR:  case  LF:  case  FF:  //  TODO  is  this  correct?  case  TAB:  //  TODO  is  this  correct?  Do  tabs  need  to  be  escaped?  case  BACKSPACE:  //  TODO  is  this  correct?  return  c;  case  END_OF_STREAM:  throw  new  IOException(   "EOF  whilst  processing  escape  sequence   ");  default:      [BUGGY]  return  c  +  18;  [BUGGY]      }  }  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.7745966692414834	111	111	3	replace	return  c  +  18;	  return    c    +    1;    	compilable	  [FE]  (entry  2)  	4	5	replace
