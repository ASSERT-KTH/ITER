projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),format);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getignoreEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()||format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()/1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()*1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySpaces=in.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySpaces=format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=out.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=_format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64if(ignoreEmptyLines!=null){this.ignoreEmptyLines=format.getIgnoreEmptyLines();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64if(ignoreEmptyLines!=null){this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()|in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()-1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()||in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()||in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getignoreEmptyLines(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getignoreEmptyLines(),format.getIgnoreEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getignoreEmptyLines(),null);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mappingNullToDisabled(format.getignoreEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,this.quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.quoteChar,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commentStart,this.quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readLine()||in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readLine()&&in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readLine()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readLine()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||FormatUtils.readLine(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(in,ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&FormatUtils.readLine(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(this.ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(in,out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=INVALID_DISABLED.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=delimiter.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=out.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,this.quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,escapeSurroundingSpace);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(commmentStart,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.in,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()||format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()|format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()?format.getIgnoreSurroundingSpaces():in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()|format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()|format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeChar,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeChar,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeChar,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces(commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces(this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.isIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),format,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),format,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),format,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreSurroundingSpaces(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreEmptySpaces(),escapeChar;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreEmptySpaces(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreEmptySpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED,format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(2);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreEmptyLines(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=INVALID_DISABLED.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=delimiter.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,DISABLED.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=file.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=FormatUtils.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=INVALID_FORMAT.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=formatter.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&format.isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&Integer.parseInt(in.getIgnoreEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),delimiter,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),delimiter,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),delimiter,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),escapeChar,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.readIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySpaces=format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySurroundingSpaces=format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=!format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&format.isEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,in.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()/1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()*1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escape;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeChar;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),format;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),out;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()*1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()[0];
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()/1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()+2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces(),format);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64This.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||FormatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in,ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&format.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()||in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&delimiter.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&out.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&file.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&in.isEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readIgnoreSurroundingSpaces()&&in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()||format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readIgnoreSurroundingSpaces()&&in.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.isIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.readIgnoreSurroundingSpaces()&&in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()*2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()*4;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),out,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in,delimiter,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines()+1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines(),out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines(),false);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()/2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()/4;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&format.isEnabled();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreEmptyLines()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()/1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=FormatUtils.getIgnoreEmptyLines()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreSurroundingSpaces()||format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in,format.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces(),escapeChar;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED,format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in,format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=DISABLED.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.findIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces(outline);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySpaces=FormatUtilities.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySpaces=FormatUtils.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces(outline);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in,format.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=formats.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=DISABLED.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreEmptyLines(),format);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()/1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()-1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()*1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()-1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()-1E;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&Integer.parseInt(in.readLine());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeChar+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),in+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),out+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in+2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in+3;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),out,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readOnly()&&format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readOnly()&&FormatUtils.isIgnoreEmptyLines(in.readOnly());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readOnly()&&format.isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readOnly()&&isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in,format.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readOnly()&&FormatUtils.isIgnoreEmptyLines(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readIgnoreSurroundingSpaces()&&in.getIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()||format.getIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingChars();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingFields();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.isIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64This.ignoreEmptyLines=format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=FormatUtils.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=formats.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||FormatUtils.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||FormatUtils.isEmpty(in.isEmpty());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||FormatUtils.isEmpty(in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.getIgnoreEmptyLines()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=FormatUtils.getIgnoreEmptyLines()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()[0];
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()*1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=INVALID_SPACES.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()||in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()||in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,in.getIgnoreSurroundingSpaces()||in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()||in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=fileFormat.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=out.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=is.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySurroundingSpaces=in.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLINEs=format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64if(ignoreEmptyLines==null){this.ignoreEmptyLines=format.getIgnoreEmptyLines();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64these.ignoreEmptyLines=format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,in.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()-128;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines()-1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64This.ignoreSurroundingSpaces=format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()-in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()-2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces()-1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64if(ignoreSurroundingSpaces!=null){this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getIgnoreEmptyLines(),null);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnorableEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEndingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()/3;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=Format.getIgnoreSurroundingSpaces(),format);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=file.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getIgnoreSurroundingSpaces()||in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnorableSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=DISABLED.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=formats.getIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&formatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces(this.delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces(out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()|in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()+in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreSurroundingSpaces()&&in.length();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(DISABLED,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,this.quoteEnd);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart-1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()/|in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in+4;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in+1L;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,DISABLED.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),escapeStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(4);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read(this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&Integer.parseInt(in.getIgnoreEmptyLines())!=0;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&Integer.MAX_VALUE<=Integer.MIN_VALUE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read()&&Integer.toString(Integer.MAX_VALUE)!=0;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreSurroundingSpaces(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces(out);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreEmptySpaces(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=out.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=is.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=file.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.readIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.readIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),delimiter,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=FormatUtilities.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=formats.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getWesternEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&Integer.toHexString(Integer.toHexString(in.readLine()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&Integer.MAX_VALUE<=Integer.MIN_VALUE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.getIgnoreSurroundingSpaces()&&format.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in,format.getIgnoreEmptySpaces()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,in.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreStart,this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=FormatUtilities.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=formats.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=DISABLED.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtilities.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.readIgnoreSurroundingSpaces()&&format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=file.readLine()||format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()*3;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()*8;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,in.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=Format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnoreLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces(2);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||Format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,in.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format,in.getignoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format,in.getIgnoreSurroundingSpaces()||format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),in,delimiter,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format,in.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64This.ignoreEmptyLines=format.getIgnoreSurroundingSpaces()&&in.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()||format.getIgnoreSurroundingSpaces(in.readLine());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpace);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.isIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreSurroundingSpaces(1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=getIgnoreEmptyLines()&&format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=isIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.readLine(this.ignoreChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreEmptySpaces()&&format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreEmptySpaces()&&format.getIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(in,null);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),commentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces(),DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64This.ignoreEmptyLines=in.readOnly();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()|format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces(),format,ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(),in;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=Format.getIgnoreEmptySpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&in.readIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&in.readIgnoreEmptyLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=FormatUtils.getIgnoreEmptySpaces(),in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine(),in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine(),in.readChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptySpaces=format.getIgnoreEmptySurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formatter.getignoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=file.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmpty(in.getIgnoreSurroundingSpaces());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()&&FormatUtils.isEmptyOrEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=Format.getIgnoreSurroundingSpaces()&&format.isEmpty();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.read(this.ignoreSurroundingSpace);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=in.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64these.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.getIgnoreSurroundingSpaces()||in.readLine()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,this.delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.commmentStart,this.lineEnd);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format,format.getignoreEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=mapNullToDisabled(format.getignoreEmptyLines(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,this.delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines(this.ignoreSurroundingSpaces,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines();if(ignoreEmptyLines!=null){this.ignoreEmptyLines=format.getIgnoreEmptyLines();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreEmptyLines=format.getIgnoreEmptyLines();if(ignoreEmptyLines!=null){this.ignoreEmptyLines=in.readLines();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces(in.readLine());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces(in.readChar());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readLine()&&format.getIgnoreSurroundingSpaces(in.readEmptyLines());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=formats.getIgnoreSurroundingSpaces()&&in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=in.readIgnoreSurroundingSpaces()&&format.getIgnorSurroundingLines();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java64this.ignoreSurroundingSpaces=format.getIgnoreSurroundingSpaces()-1,escapeChar);
