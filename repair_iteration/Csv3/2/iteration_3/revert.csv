projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();intc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();Finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();intc=this.in.read();finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();Finalintc=this.in.read();finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalintthis.in=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalintc=this.out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SECOND);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_QUOTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_STRING);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATCH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiter();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentEnd();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finallongc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89FinalStringc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(entry));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,file);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();Documentdonotmatchexpectedresult(this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalRecordsdonotmatchexpectedresult()
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EEMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EATE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=sourceFile.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPUTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=escapeChar.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getSymbol();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();finalintc=this.in.read();finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();lastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(0));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=in.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getSyntheticChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=in.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATH,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATH,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPATH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPATH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPATH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=delimiter.read(this,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,commmentStart,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,escapeChar,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,quoteChar,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,delimiter,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SURroundingSpaces,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXTENDS,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED_EXECUTERS,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXPECTED_ERROR,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_FACTOR,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPATCH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPUTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,offset,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(char,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,commmentStart,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.commmentStart.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.symbol.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EOF,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLECTION);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSION);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEFINED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,SHORT_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,STRING_EXECUTABLE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getSurroundingSpace();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SECOND,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SECOND,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SECOND,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_SECOND);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in)}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPATCH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPUTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPACE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPACE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(this.commmentStart,this.in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.readLine());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=this.in.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=format.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=readEscape(in,in.readInt());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=file.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=out.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=readInt(in,in.readInt());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,quoteChar,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXPECTED_ERROR,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSION,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXPECTED_BACKSPACE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.out.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();finalintc=this.out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.out!=null){finalintc=this.in.read();finalintc=this.out.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.out.read();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.out.read();}else{thrownewIllegalStateException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=this.in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=in.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=in.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=delimiter.read(Character.EXPR_RESULT,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_RESULT,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SECOND,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_QUOTE,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPRESSION);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXACT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_QUOTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EOC_START);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89nullc=this.in.read();intc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read();intc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=DElimiter.read(Character.EXPR_RESULT,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DElimiter,Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_RESULT,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Delimiter.EXPR_RESULT,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(char,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(char,quoteChar));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,quoteChar,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(char,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char)/1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char)+2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(char)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DElimiter.DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DElimiter.DECL);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();intc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();intthis.in=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Integerc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();charc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Integerc=this.in.read();intc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();intc=this.in.read();System.arraycopy(this.in,0,this.in,0,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();intthis.in=this.in.read();c=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();intc=this.in.read();System.arraycopy(this.in,0,this.in,0,this.surroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,escapeChar,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(char,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,offset,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,quoteLine);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSION_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTABLE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(in,this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEFAULT,in,this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(commmentStart));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(char));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(escape));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.toLowerCase(entry));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=readChar(Character.toLowerCase(entry));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=reader.read(Character.toLowerCase(entry));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EOF,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.SECOND,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readString();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=source.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=inline.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EOC_START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EOF,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finallongc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiter(commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiterChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiter()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiter(quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.DEPRECATED,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.DEPRECATED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.DEPRECATED,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_QUOTE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SOURCE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,quoteChar,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart().length;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart(entry);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart()*2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DEPOSITIVE_SURroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,BACKSPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,CSVFormat.DEFAULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,CSVFormat.BACKSPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this,file);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EOC_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPECTED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CharacterEscape.EOC_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EVENT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_ECONDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.END_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,DElimiter.escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPOSED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89lastintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finallyintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89semifinalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Stringc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Charc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Characterc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89doublec=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(this.char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.DEPRECATED,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DISABLED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EATE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EATE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EATE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPATCH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EOC_START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPATH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=Integer.parseInt(this.in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=Integer.parseInt(this.in,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=Integer.parseInt(this.in,this.commmentStart).readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=Integer.parseInt(this.in).readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_VALUE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_VALUE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.toLowerCase(this));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(entry,this));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this,escape));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this,escapeChar));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this,quoteChar));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(entry),this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();lastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89lastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intlastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();this.lastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentEnd()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentEndIndex();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentEnd(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentEnd().length;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATCH,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATCH,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.readFully(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(char)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPUTE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPUTE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.END_EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,quoteChar,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EMPTY,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(entry);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscapeSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(false);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(entry.charAt(0));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{thrownewIllegalStateException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{break;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPECTED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPECTED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Documentdonotmatchexpectedresult(this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Documentdonotmatchexpectedresult(this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();Documentdonotmatchexpectedresult(entry,this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Documentdonotmatchexpectedresult(entry.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=this.in.read();Documentdonotmatchexpectedresult(c)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter(commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter()-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter(c);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiterChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=commmentStart.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.commmentStart.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=delimiter.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=quoteChar.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=source.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.UTF8);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult()
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(entry);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult()}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalbytec=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89staticfinalintc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPECTED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_QUOTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_CHAR);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=file.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.sourceFile.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.commmentStart.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=SVFormat.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.charBuffer.read(this.in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.commmentEnd);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.surroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.offset);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(entry));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(charAt(0));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(i));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(charAt(0));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(entry.length));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(entry.length()-1));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(in.readLine()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finallongc=this.in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finallongc=in.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.info.read(this.in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.info);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,this.surroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(commmentStart,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(charAttributes()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this.charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finallongc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EXECUTABLE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EXECUTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=this.in.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=in.readEndEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=escapeChar.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=file.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.DEPRECATED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.DEPRECATED,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{returnBACKSPACE;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this.in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this.in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS_PER_SECOND,Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getEscapeChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getCSVChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getCommentStart();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EOF,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.commmentStart,this.in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(false);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(commmentStart,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEFAULT,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEFAULT_EXTENDS,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_QUOTE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SRC_OVER);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EOC_START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CSSVFormat.EOC_START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DISABLED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SOURCE,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DISABLED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.surroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS_OVER);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.ECONDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.readChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.START_EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();intc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();}else{finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();System.arraycopy(this.in,0,c,this.in.read());}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();Integerc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();charc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();case'a':returnBACKSPACE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();case'r':returnBACKSPACE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();case'f':returnDISABLED;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();case'f':returnBACKSPACE;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,commmentStart,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,offset,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSION_SURroundingSpaces,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSION,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();Integerc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();charc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.read();c=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();Integerin=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();Documentdonotmatchexpectedresult(in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();Recorddonotmatchexpectedresult(in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();Recorddonotmatchexpectedresult(in.read())
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();returnOCCURRENT;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}else{thrownewIllegalStateException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}else{
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=escapeSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_SECOND);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_STRING);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EOC_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89nullc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(String.valueOf(entry));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readLine()+source.charAt(source.length()-1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readLine()+source.length();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=getSyntheticChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getEscapedChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,quoteChar,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,offset,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,escapeStart,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,readEscapeChar,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXTENDS,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(this);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintthis.in=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalintthis.in=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{returnBACKSPACE;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{thrownewIllegalStateException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{thrownewIllegalArgumentException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXECUTERS,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXECUTERS,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EMPTY,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_STRING,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,escape,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_START,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(entry);Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();Documentdonotmatchexpectedresult(entry);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_START);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.sourceStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.shape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();intc=this.out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Integerc=this.in.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Recorddonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=that.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(DISABLED,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_Escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,COMMENT_START);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPACE,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPACE,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,null);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EEMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EEMPTY,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_START_EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(quoteChar,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart(true);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart()+2;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EATE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EATE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,readEscape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPLACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readLine()+source;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_RESULT,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.Escape,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,escape,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SOURCE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEFINE_SURroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SOURCE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,CSVFormat.DEFAULT_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{return0;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter().commmentStart;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOCTYPE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.Escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_FINAL);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.surroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.charBuffer);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.info);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{return0;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPUTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getImplicitSurroundingSpace();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiter().length;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.read(Character.START_EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Delimiter.EXPR_RESULT,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(commmentStart,Character.EXPR_RESULT,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DETERMINISTIC_EXPR_RESULT,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SOURCE,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89FinalStringc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_READ);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();intc=this.in.read();finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();finalintc=this.in.read();}else{
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();finalintc=this.in.read();}else{return0;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EOF,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DISABLED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getCharIndex();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EMPTY_STRING,charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(BACKSPACE,charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_STRING,charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readLine()+this.commmentStart;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readLine()+(this.commmentStart-this.in.readEscape());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readLine()+(this.commmentStart-this.in.readLine());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_RESULT,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_EXPR_RESULT,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(quoteChar,Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();Documentdonotmatchexpectedresult(this.in)}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=this.in.read();Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(0,1));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(i),1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(escapeChar,Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this.commmentStart));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(SCRIPT_EXTENDS));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(scope));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(label));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_STRING);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SOURCE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EOF,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(quoteChar,Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(commmentStart,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(commmentStart,Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_START_EOF,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,Character.START_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();}else{return0;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();}else{break;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();}else{
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=Integer.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=out.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=input.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=content.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXECUTERS,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXECUTERS,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DETERMINISTIC_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DETERMINISTIC_SOURCE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this),escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this)+1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.toLowerCase(this));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_Escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EEMBEDDED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EAUTH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EOF)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(quoteChar,Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_START_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC,Character.START_EXECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}else{thrownewIOException("");}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(COMMENT_START,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.START_EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read()-1);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(quoteChar,Character.START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Comment.START_EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in)}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EEXPECTED,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.out.read();}else{return0;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.out.read();}else{
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.read();Integerc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.seek(in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.read();Documentsdonotmatchexpectedresult(entry0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.read();Documentsdonotmatchexpectedresult(in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,COMMENT_START);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EESCAPE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EEMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DISABLED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEFINE_SURroundingSpaces,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPUTE,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(commmentStart,Character.EXPR_RESULT,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape(commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEndEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.escapeChar.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=sourceFile.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(char,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(char,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(Character.class);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXECUTERS,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXTENDS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_SRC_OVER);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DISABLED,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SURRUNNING_SPACE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXPECTED_BACKSPACE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXECUTERS,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();firstRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintlastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read();nextRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,commmentEnd);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=escapeSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_QUOTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(CRC_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_SECOND,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_SECOND);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.SECOND);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=escape.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=sourceFile.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=out.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=readFully(in,in.readInt());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=CSVFormat.readInt();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,escapeChar,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOF_DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();Documentdonotmatchexpectedresult(this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();Documentdonotmatchexpectedresult(this.commmentStart)}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=this.in.read();Documentdonotmatchexpectedresult(this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Comment.START_EOF,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_SOURCE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_EOF);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(Character.START_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DEPRECATED_DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.escapeChar.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.encodeEscapes.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATCH,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getEndSyntheticChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getSurroundingChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_VALUE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=source.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult()
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult()}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,escapeStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char)-1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();Finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(displayChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscapeChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATH,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPATH,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=readChar.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();Intc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intescape=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();longc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();Stringc=readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EECUTERS);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPACT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(char,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DEPRECATED)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.DEPRECATED,DEPRECATED_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(byte));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(charAt(entry.getKey()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXECUTERS,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(in,this,escapeEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.bucketChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.charBuffer,this.renderer);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,delimiter,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SIZE,commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EOF,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89staticfinalStringc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89FinalStringc=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();}else{returnc;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();Finalintc=this.in.read();finalintc=this.in.read();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89FinalStringc=in.read(Character.EXPR_RESULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPECTED,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=out.read(Character.EOC_START_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXPECTED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_INT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getImplicitSurroundingSpaces();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getCharacter();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=source.readLine()+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_START);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_SYNTHETIC);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXTENDS,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=this.in.read(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.DEPRECATED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,delimiter,escapeSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,delimiter,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSIVE_EXPECTED_BACKSPACE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SIZE,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintthis.in=this.in.read();}else{break;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXECUTERS,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,this.margin);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,0,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.info,this.renderer);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_RESULT,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in,this.in.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=as.in.readFully();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.readFully(char);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.readFully(escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=this.in.read();lastRead=this.in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSIVE_SURRUNNING_LINES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSIVE_SURRUING_LINES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSIVE_EXPECTED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DECLUSIVE_SURRULES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXECUTERS,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();Documentdonotmatchexpectedresult(this.in)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DETERMINISTIC_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DETERMINISTIC_FACTOR);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,delimiter,escape);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiterRelativeToken();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter(in,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiterReplacement();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intdelimiter=getDelimiter(in.readEscape());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPUTE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89Integerc=in.readInt(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(escapeChar));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(symbol));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.toLowerCase(this.in));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=in.readLine()+source.charAt(0);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult();}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=this.in.read();finalRecordsdonotmatchexpectedresult()
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=this.in.read();Documentdonotmatchexpectedresult(this.commmentStart)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=escapeSurroundingSpaces.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=escapeChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=escapeSurroundingSpaces.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getCSV();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape(in,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();intc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read();in.read();Documentc=in.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPATCH);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiterInput();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiter(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getDelimiterAsString();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=getDelimiter();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EOF,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.escapeChar.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DETERMINISTIC_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DECLUSION_SURRUNNING_LINES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(this,DETERMINISTIC_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=sourceFile.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(charAt(0));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(charAt(byte));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89staticfinalStringc=in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_RESULT,DElimiter,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_RESULT,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toLowerCase(this,delimiter));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.EXPR_RESULT,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.commmentStart);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.desc);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.labelChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.labelOffset);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EES);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXPECT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.out.read();}else{returnc;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89charc=this.in.read();finalintc=this.out.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}else{returnDISABLED;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();finalintc=this.in.read();returnOCCURRENT;}else{return1;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EOF,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toUpperCase(charAttributes()));
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.toUpperCase(charAttributes());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SIZE,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=escapeSurroundingSpaces.getCommentEnd();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=escapeSurroundingSpaces.getCommentStart();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=escapeSurroundingSpaces(getCommentEnd());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,this.commmentEnd);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.char,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_CHAR);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.DEPRECATED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EOC_DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(DISABLED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in!=null){finalintc=this.in.read();intc=this.in.read();finalintc=this.in.read();}else{returnc;}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPRECATED_BACKSPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DEPOSED_BACKSPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,readEscape());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.EXPR_INT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89if(this.in==null){finalintc=this.in.read();finalRecordsdonotmatchexpectedresult(this.in);}
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,this.surroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,this.quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(in,this.charBuffer);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_QUOTE,DElimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.START_EXPECTED,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EXPR_VALUE,DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_PER_SIZE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EXECUTERS,delimiter);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=getSequenceChar();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_EXPECTED_BACKSPACE);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SIZE,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(this,DETERMINISTIC_SECOND,DISABLED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(char,quoteChar,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.readLine();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read(this.charAt);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),this.ignoreEmptyLines);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(this.commmentStart,this.in.read(),this.ignoreSurroundingSpaces);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=out.readEscape();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=in.read(char)+1;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.DEPRECATED);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalCharacterc=in.read(Character.DEFAULT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(in,escapeChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=readEscape(quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_STRICT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_INT);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finaldoublec=readChar(in,in.read());
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();this.ignoreEmptyLines=ignoreSurroundingSpaces;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();this.ignoreSurroundingSpaces=ignoreSurroundingSpaces;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();this.ignoreSurroundingSpaces=ignoreEmptyLines;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=readEscape();intc=readEscape();this.ignoreSurroundingSpaces=escapeSurroundingSpaces;
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.encodeEscaped.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalStringc=this.encodedChar.read();
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intcommmentStart=getCommentStart(in);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Recorddonotmatchexpectedresult(this.in,entry8)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89intc=this.in.read();Recorddonotmatchexpectedresult(this.in,entry0)
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.EOC_START_EEMPTY);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalcharc=in.read(Character.START_EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=this.in.read(Character.START_EXPECTED,quoteChar);
projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java89finalintc=in.read(Character.class,DETERMINISTIC_SIZE);
