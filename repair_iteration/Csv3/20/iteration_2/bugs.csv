bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	9	None	add
2	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  c  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
3	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  ==  CR  &&  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  ==  CR  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c  ==  CR  &&  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
4	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  c  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
5	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  ++c)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  ++c)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  ++c)  {  c  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
6	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  ++c)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  ++c)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  ++c)  {  c  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	add
7	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >=  CR  &&  c  ==  DISABLED;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >=  CR  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c  >=  CR  &&  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
8	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >>  CR  &&  c  ==  DISABLED;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >>  CR  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c  >>  CR  &&  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
9	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	22	None	add
10	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
11	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
12	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
13	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
14	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	22	None	add
15	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
16	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  [CE]  unreachable  statement  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  &&  c  ==  CR;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
18	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c  ==  CR;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  &&  c  ==  CR;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  LF  &&  c  ==  DISABLED;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
20	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  LF  &&  c  ==  DISABLED;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  CR  &&  c  ==  LF;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
22	[BUG]  [BUGGY]  return  c  ==  CR  &&  c  ==  LF;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  CR  &&  c  ==  LF;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  LF  &&  c!=  DISABLED;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	6	replace
24	[BUG]  [BUGGY]  return  c  ==  LF  &&  c!=  DISABLED;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  LF  &&  c!=  DISABLED;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	6	replace
25	[BUG]  [BUGGY]  return  c  ==  LINE  &&  c  ==  CR;  [CE]  cannot  find  symbol  LINE  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LINE  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  LINE  &&  c  ==  CR;	  return    c    ==    LF    &&    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  LINE	2	None	replace
26	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	17	None	add
27	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
28	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
29	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
30	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  d  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  d  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  d  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
31	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
32	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
33	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	40	replace
35	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	40	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	40	replace
37	[BUG]  [BUGGY]  return  c  >=  DISABLED  &&  c  ==  CR;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	40	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	37	replace
39	[BUG]  [BUGGY]  return  c!=  DISABLED  &&  c  ==  CR;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	37	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  DISABLED  ||  c  ==  DISABLED;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	40	replace
41	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  DISABLED  ||  c  ==  DISABLED;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	40	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  DISABLED  ||  c  ==  DISABLED;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	51	replace
43	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  DISABLED  ||  c  ==  DISABLED;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	51	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  &&  c  ==  LF;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	40	replace
45	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c  ==  LF;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  &&  c  ==  LF;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	40	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  commmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c  ==  commmentStart;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	39	replace
47	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  commmentStart;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  commmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  commmentStart;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	39	replace
48	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENT_START;  [CE]  cannot  find  symbol  COMMENT_START  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENT_START;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  COMMENT_START;	  return    c    ==    DISABLED    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	23	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  DISABLED  &&  c  ==  LF;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	6	replace
50	[BUG]  [BUGGY]  return  c!=  DISABLED  &&  c  ==  LF;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  DISABLED  &&  c  ==  LF;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	6	replace
51	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENT_SURroundingSpaces;  [CE]  cannot  find  symbol  COMMENT_SURroundingSpaces  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENT_SURroundingSpaces;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  COMMENT_SURroundingSpaces;	  return    c    ==    DISABLED    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_SURroundingSpaces	23	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  c;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c  ==  c;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	51	replace
53	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  c;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  c;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  c;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	51	replace
54	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	37	replace
55	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	37	replace
56	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CF;  [CE]  cannot  find  symbol  CF  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  CF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  CF	6	None	replace
57	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CSSV;  [CE]  cannot  find  symbol  CSSV  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CSSV;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  CSSV;	  return    c    ==    LF    ||    c    ==    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  CSSV	6	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	51	replace
59	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	51	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  LF  &&  c  ==  DISABLED;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	40	replace
61	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  LF  &&  c  ==  DISABLED;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	40	replace
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  LF  &&  c  ==  DISABLED;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	40	replace
63	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  LF  &&  c  ==  DISABLED;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	40	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  CR  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  CR  &&  c  ==  LF;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	6	replace
65	[BUG]  [BUGGY]  return  c!=  CR  &&  c  ==  LF;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  CR  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  CR  &&  c  ==  LF;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	6	replace
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  LF  ||  c  ==  CR;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	51	replace
67	[BUG]  [BUGGY]  return  c!=  LF  ||  c  ==  CR;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  LF  ||  c  ==  CR;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	51	replace
68	[BUG]  [BUGGY]  return  c  <  =  LF  &&  c  ==  CR;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  =  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  =  LF  &&  c  ==  CR;	  return    c    <    =    LF    ||    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  return  c  <  =  LF  ||  c  ==  DISABLED;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  =  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  =  LF  ||  c  ==  DISABLED;	  return    c    <    =    LF    ||    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  LF  ||  c  ==  CR;	  return    c    <    =    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	19	51	replace
71	[BUG]  [BUGGY]  return  c  >=  LF  ||  c  ==  CR;  [FE]  AssertionError  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  LF  ||  c  ==  CR;	  return    c    <    =    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	19	51	replace
72	[BUG]  [BUGGY]  return  c  <  =  LF  ||  c  >=  DISABLED;  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  =  LF  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  =  LF  ||  c  >=  DISABLED;	  return    c    <    =    LF    ||    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	1	None	add
74	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
75	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  CR  &&  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  CR  &&  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  CR  &&  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
76	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
77	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
78	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
79	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	1	None	add
80	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  c  =  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  c  =  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  c  =  in.read();  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
81	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	11	None	add
82	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >=  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >=  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  >=  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	11	None	add
83	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >=  CR  &&  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >=  CR  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  >=  CR  &&  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	11	None	add
84	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >>  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >>  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  >>  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	11	None	add
85	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  ==  CR  &&  c  ==  DISABLED;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  ==  CR  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  ==  CR  &&  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	11	None	add
86	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >=  CR  &&  c  ==  CR;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  >=  CR  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  >=  CR  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	11	None	add
87	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  <  LF  &&  c  ==  CR;  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  <  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  <  LF  &&  c  ==  CR;	  	non-compiled	[CE]  >  expected	11	None	add
88	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  ==  CR  &&  c  ==  CR;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  ==  CR  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  ==  CR  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	11	None	add
89	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	15	None	add
90	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
91	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
92	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
93	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c!=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
94	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c!=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
95	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  d  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  d  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  d  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
96	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  commmentStart  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  commmentStart  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  commmentStart  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
97	[BUG]  [BUGGY]  return  c  ==  DR  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  DR  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DR  ||  c  ==  DISABLED;	  return    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  DR	8	None	replace
98	[BUG]  [BUGGY]  return  c  ==  DR  &&  c  ==  LF;  [CE]  cannot  find  symbol  DR  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DR  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DR  &&  c  ==  LF;	  return    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  DR	8	None	replace
99	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'n'  ||  c!=  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
100	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c!=  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'n'  ||  c!=  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'n'  &&  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	40	replace
102	[BUG]  [BUGGY]  return  c  ==  'n'  &&  c  ==  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'n'  &&  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	40	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  'n'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  'n'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
104	[BUG]  [BUGGY]  return  c!=  'n'  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  'n'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  'n'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
105	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)return  true;  if(c  ==  CR  ||  c  ==  DISABLED)  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)return  true;  if(c  ==  CR  ||  c  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED)return  true;  if(c  ==  CR  ||  c  ==  DISABLED)  {  return  false;  }	  return    c    ==    'n'    ||    c    ==    DISABLED;    	non-compiled	[CE]  missing  return  statement	25	None	replace
106	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  'n'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  'n'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	51	replace
107	[BUG]  [BUGGY]  return  c  >=  'n'  ||  c  ==  DISABLED;  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  'n'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  'n'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	51	replace
108	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)return  true;  if(c  ==  commmentStart)  {  return  false;  }  [CE]  missing  return  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED)return  true;  if(c  ==  commmentStart)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED)return  true;  if(c  ==  commmentStart)  {  return  false;  }	  return    c    ==    'n'    ||    c    ==    DISABLED;    	non-compiled	[CE]  missing  return  statement	25	None	replace
109	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	3	None	add
110	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
111	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
112	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
113	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
114	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
115	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
116	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	3	None	add
117	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  if(c  >=  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentEnd)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentEnd)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentEnd)  {  return  true;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart!=  commmentEnd)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart!=  commmentEnd)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart!=  commmentEnd)  {  return  true;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart!=  commmentStart)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart!=  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  ++i)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart!=  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  i++)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  for(int  i  =  0,  len  =  in.read();  i  <  len;  i++)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	for(int  i  =  0,  len  =  in.read();  i  <  len;  i++)  {  char  commmentStart  =  in.getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
124	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  LF  &&  c!=  DISABLED;	  return    c    >=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	12	51	replace
125	[BUG]  [BUGGY]  return  c  >=  LF  &&  c!=  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  LF  &&  c!=  DISABLED;	  return    c    >=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	12	51	replace
126	[BUG]  [BUGGY]  return  c  >>  LF  &&  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >>  LF  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >>  LF  &&  c  ==  DISABLED;	  return    c    >=    LF    &&    c    ==    CR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	12	None	replace
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >  LF  &&  c  ==  CR;	  return    c    >=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	12	37	replace
128	[BUG]  [BUGGY]  return  c  >  LF  &&  c  ==  CR;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >  LF  &&  c  ==  CR;	  return    c    >=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	12	37	replace
129	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	24	None	add
130	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	24	None	add
131	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
132	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  'n'  ||  c  ==  DISABLED)  {  in.read();  return  c  ==  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
133	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
134	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	24	None	add
135	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  'n'  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
136	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
137	[BUG]  [BUGGY]  return  c  ==  LINE  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  LINE  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LINE  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  LINE  ||  c  ==  DISABLED;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  LINE	13	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c!=  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c!=  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	13	51	replace
139	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c!=  CR;  [FE]  AssertionError  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c!=  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c!=  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	13	51	replace
140	[BUG]  [BUGGY]  return  c  ==  DR  ||  c  ==  CR;  [CE]  cannot  find  symbol  DR  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DR  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DR  ||  c  ==  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  DR	13	None	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  >=  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c  >=  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	13	51	replace
142	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  >=  CR;  [FE]  AssertionError  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  >=  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  >=  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	13	51	replace
143	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  c  <  LF  ||  c  ==  CR;  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  c  <  LF  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    c  <  LF  ||  c  ==  CR;	  	non-compiled	[CE]  >  expected	20	None	add
144	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
145	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	20	None	add
146	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  c  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
147	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  return  c  <  LF  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  return  c  <  LF  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  return  c  <  LF  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
148	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  <  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
149	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  <  LF  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
150	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	20	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c!=  DISABLED;	  return    c    ==    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	4	51	replace
152	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c!=  DISABLED;	  return    c    ==    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	4	51	replace
153	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  LF  ||  c  ==  DISABLED;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	43	replace
154	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  LF  ||  c  ==  DISABLED;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	43	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  >  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  LF  ||  c  >  CR;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	51	replace
156	[BUG]  [BUGGY]  return  c  <  LF  ||  c  >  CR;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  >  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  LF  ||  c  >  CR;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	51	replace
157	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  LF  &&  c  ==  CR;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	40	replace
158	[BUG]  [BUGGY]  return  c  <  LF  &&  c  ==  CR;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  LF  &&  c  ==  CR;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	40	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  LF  ||  c  >=  DISABLED;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	43	replace
160	[BUG]  [BUGGY]  return  c  <  LF  ||  c  >=  DISABLED;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  LF  ||  c  >=  DISABLED;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	43	replace
161	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  c  =  in.read();  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	7	None	add
162	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  in.read();  [CE]  unreachable  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    in.read();	  	non-compiled	[CE]  unreachable  statement	7	None	add
163	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Integer  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Integer  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Integer  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	7	None	add
164	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Integer  c  =  in.readInt();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Integer  c  =  in.readInt();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Integer  c  =  in.readInt();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	7	None	add
165	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Record  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Record  do  not  match  expected  result(c)  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	7	None	add
166	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Context.codeBug();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Context.codeBug();	  	non-compiled	[CE]  cannot  find  symbol  Context	7	None	add
167	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Document  do  not  match  expected  result(c)  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	7	None	add
168	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Record  do  not  match  expected  result(c  -  in.lookAhead())  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Record  do  not  match  expected  result(c  -  in.lookAhead())  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Record  do  not  match  expected  result(c  -  in.lookAhead())	  	non-compiled	[CE]  not  a  statement	7	None	add
169	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  c  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    c  =  in.read();	  	non-compiled	[CE]  unreachable  statement	5	None	add
170	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
171	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
172	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	5	None	add
173	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  ++c)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  ++c)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  <  DISABLED;  ++c)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
174	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
175	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c!=  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c!=  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED  ||  c!=  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
176	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  for(int  c  =  in.read();  c  >=  DISABLED;  c++)  {  return  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED  +  1;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'n'  ||  c  ==  DISABLED  +  1;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	44	replace
178	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED  +  1;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'n'  ||  c  ==  DISABLED  +  1;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	44	replace
179	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'n'  ||  c  >=  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	44	replace
180	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  >=  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'n'  ||  c  >=  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	44	replace
181	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  'n'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  'n'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
182	[BUG]  [BUGGY]  return  c  <  'n'  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  'n'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  'n'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	37	replace
184	[BUG]  [BUGGY]  return  c  <  DISABLED  &&  c  ==  CR;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	37	replace
185	[BUG]  [BUGGY]  return  c  >>  DISABLED  &&  c  ==  CR;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >>  DISABLED  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >>  DISABLED  &&  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	18	None	replace
186	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	15	None	add
187	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c!=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
188	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
189	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
190	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
191	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  throw  new  IllegalStateException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	add
192	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  <  =  CR;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  <  =  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  LF  &&  c  <  =  CR;	  return    c    >=    LF    &&    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
193	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  LF)  {  return  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  LF)  {  return  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  LF)  {  return  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
194	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  int  commmentStart  =  in.read();  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  int  commmentStart  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    int  commmentStart  =  in.read();	  	non-compiled	[CE]  unreachable  statement	22	None	add
195	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
196	[BUG]  [BUGGY]  return  c  ==  DETERMINISTIC_LINE  ||  c  ==  CR;  [CE]  cannot  find  symbol  DETERMINISTIC_LINE  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DETERMINISTIC_LINE  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DETERMINISTIC_LINE  ||  c  ==  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_LINE	13	None	replace
197	[BUG]  [BUGGY]  return  c  ==  DETERMINISTIC  ||  c  ==  CR;  [CE]  cannot  find  symbol  DETERMINISTIC  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DETERMINISTIC  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DETERMINISTIC  ||  c  ==  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC	13	None	replace
198	[BUG]  [BUGGY]  return  c  ==  DETERMINISTIC  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  DETERMINISTIC  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DETERMINISTIC  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DETERMINISTIC  ||  c  ==  DISABLED;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC	13	None	replace
199	[BUG]  [BUGGY]  return  c  ==  DEFINITION  ||  c  ==  CR;  [CE]  cannot  find  symbol  DEFINITION  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DEFINITION  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DEFINITION  ||  c  ==  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  DEFINITION	13	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  DISABLED  &&  c  ==  LF;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	40	replace
201	[BUG]  [BUGGY]  return  c  >=  DISABLED  &&  c  ==  LF;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  &&  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  DISABLED  &&  c  ==  LF;	  return    c    ==    DISABLED    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	23	40	replace
202	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENTStart;  [CE]  cannot  find  symbol  COMMENTStart  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENTStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  COMMENTStart;	  return    c    ==    DISABLED    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  COMMENTStart	23	None	replace
203	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Encoder.getInstance().readEndOfLine(c);  [CE]  cannot  find  symbol  Encoder  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Encoder.getInstance().readEndOfLine(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Encoder.getInstance().readEndOfLine(c);	  	non-compiled	[CE]  cannot  find  symbol  Encoder	7	None	add
204	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Encoder.getInstance().readEndOfLine(in,  c);  [CE]  cannot  find  symbol  Encoder  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Encoder.getInstance().readEndOfLine(in,  c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Encoder.getInstance().readEndOfLine(in,  c);	  	non-compiled	[CE]  cannot  find  symbol  Encoder	7	None	add
205	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Encoder.getInstance().println(c);  [CE]  cannot  find  symbol  Encoder  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Encoder.getInstance().println(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Encoder.getInstance().println(c);	  	non-compiled	[CE]  cannot  find  symbol  Encoder	7	None	add
206	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Records  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  Records  do  not  match  expected  result(c)  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	7	None	add
207	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
208	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  &&  c  ==  DISABLED)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
209	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c!=  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  DISABLED  &&  c!=  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  DISABLED  &&  c!=  DISABLED)  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
210	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  Integer  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  Integer  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    Integer  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	1	None	add
211	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	1	None	add
212	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >=  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >=  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c  >=  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	9	None	add
213	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >>  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c  >>  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c  >>  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	9	None	add
214	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	9	None	add
215	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  in.read();  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    in.read();	  	non-compiled	[CE]  unreachable  statement	9	None	add
216	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	6	replace
217	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	6	replace
218	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	51	replace
219	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  ==  LF;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	6	51	replace
220	[BUG]  [BUGGY]  return  c  >>  DISABLED  ||  c  ==  LF;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >>  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >>  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	6	None	replace
221	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  missing  return  statement	14	None	replace
222	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [CE]  missing  return  statement  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  missing  return  statement	14	None	replace
223	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
224	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  missing  return  statement	14	None	replace
225	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
226	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  if(c  ==  DISABLED  ||  c  >  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  DISABLED)  {  if(c  ==  DISABLED  ||  c  >  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  DISABLED)  {  if(c  ==  DISABLED  ||  c  >  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
227	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c!=  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c!=  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  DISABLED)  {  in.read();  if(c  ==  DISABLED  ||  c!=  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
228	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	17	None	add
229	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
230	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
231	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  int  commmentStart  =  in.read();  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  int  commmentStart  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    int  commmentStart  =  in.read();	  	non-compiled	[CE]  unreachable  statement	17	None	add
232	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
233	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  DISABLED  ||  c  ==  LF  &&  c  ==  CR;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
235	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  &&  c  ==  CR;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DISABLED  ||  c  ==  LF  &&  c  ==  CR;	  return    c    ==    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	2	40	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  DISABLED  ||  c  ==  CR;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	51	replace
237	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  ==  CR;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  DISABLED  ||  c  ==  CR;	  return    c    <    LF    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	21	51	replace
238	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  char  CR  =  in.read();  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  char  CR  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    char  CR  =  in.read();	  	non-compiled	[CE]  possible  loss  of  precision	3	None	add
239	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
240	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  int  commmentStart  =  in.read();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  int  commmentStart  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    int  commmentStart  =  in.read();	  	non-compiled	[CE]  unreachable  statement	3	None	add
241	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
242	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  DISABLED)  {  in.read();  return  c  <  LF  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  DISABLED)  {  in.read();  return  c  <  LF  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  DISABLED)  {  in.read();  return  c  <  LF  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
243	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
244	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  Integer  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  Integer  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    Integer  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	20	None	add
245	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
246	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	11	None	add
247	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  +=  c  ==  CR;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  c  +=  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    c  +=  c  ==  CR;	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	11	None	add
248	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  in.read();  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    in.read();	  	non-compiled	[CE]  unreachable  statement	11	None	add
249	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  int  commmentStart  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  int  commmentStart  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    int  commmentStart  =  in.read();	  	non-compiled	[CE]  unreachable  statement	24	None	add
250	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  in.read();  return  c  ==  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
251	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED)  {  return  'n'  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED)  {  return  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED)  {  return  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	add
252	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	add
253	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  Integer  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  Integer  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    Integer  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	24	None	add
254	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  int  commmentStart  =  in.read();  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  int  commmentStart  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    int  commmentStart  =  in.read();	  	non-compiled	[CE]  unreachable  statement	5	None	add
255	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  Integer  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  Integer  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    Integer  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	5	None	add
256	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
257	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
258	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  in.read();  if(c  ==  DISABLED)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c!=  LF  &&  c  >=  DISABLED;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	40	replace
260	[BUG]  [BUGGY]  return  c!=  LF  &&  c  >=  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  LF  &&  c  >=  DISABLED;	  return    c!=    LF    &&    c    ==    CR;    	compilable	  [FE]  AssertionError  	10	40	replace
261	[BUG]  [BUGGY]  return  c!=  LF  &&  c  <  =  CR;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  <  =  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c!=  LF  &&  c  <  =  CR;	  return    c!=    LF    &&    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
262	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c!=  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  c!=  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    c!=  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	9	None	add
263	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF  &&  c  ==  CR)  {  return  c!=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF  &&  c  ==  CR)  {  return  c!=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c!=  LF  &&  c  ==  CR)  {  return  c!=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
264	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c!=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c!=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c!=  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c!=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
265	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF  &&  c  ==  CR)  {  in.read();  return  c!=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF  &&  c  ==  CR)  {  in.read();  return  c!=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c!=  LF  &&  c  ==  CR)  {  in.read();  return  c!=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
266	[BUG]  [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF)  {  c  =  in.read();  return  c!=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  LF  &&  c  ==  CR;  if(c!=  LF)  {  c  =  in.read();  return  c!=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    LF    &&    c    ==    CR;    if(c!=  LF)  {  c  =  in.read();  return  c!=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	9	None	add
267	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  ==  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  ==  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    c  ==  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	1	None	add
268	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF  &&  c  ==  CR)  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF  &&  c  ==  CR)  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  LF  &&  c  ==  CR)  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
269	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF)  {  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF)  {  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  LF)  {  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
270	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF  &&  c  ==  CR)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF  &&  c  ==  CR)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  LF  &&  c  ==  CR)  {  in.read();  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
271	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  if(c  ==  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c  ==  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    if(c  ==  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c  ==  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
272	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  >=  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  >=  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    c  >=  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	1	None	add
273	[BUG]  [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  {  LF  &&  c  ==  CR;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  &&  c  ==  CR;  c  {  LF  &&  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    &&    c    ==    CR;    c  {  LF  &&  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	1	None	add
274	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	24	None	add
275	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    'n'    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  ==  'n'  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	add
276	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	7	None	add
277	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  c  ==  CR  ||  c  ==  LF;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	7	None	add
278	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  in.lookAhead()  ==  LF);  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  in.lookAhead()  ==  LF);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    in.lookAhead()  ==  LF);	  	non-compiled	[CE]  not  a  statement	7	None	add
279	[BUG]  [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  in.lookAhead()  ==  LF;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  CR  ||  c  ==  LF;  in.lookAhead()  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    CR    ||    c    ==    LF;    in.lookAhead()  ==  LF;	  	non-compiled	[CE]  not  a  statement	7	None	add
280	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  c  >=  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  c  >=  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    c  >=  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	17	None	add
281	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  >=  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  >=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  return  c  >=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
282	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
283	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  >=  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  >=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c  >=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
284	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  >=  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
285	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED;  }  [CE]  unreachable  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  >=  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	17	None	add
286	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  c  >>  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  c  >>  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    c  >>  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	17	None	add
287	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  >=  DISABLED  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  >=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  >=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	add
288	[BUG]  [BUGGY]  return  c  <  =  DISABLED  ||  c  ==  CR;  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  =  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  =  DISABLED  ||  c  ==  CR;	  return    c    <    =    LF    ||    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
289	[BUG]  [BUGGY]  return  c  <  =  LC  ||  c  ==  CR;  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  =  LC  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  =  LC  ||  c  ==  CR;	  return    c    <    =    LF    ||    c    ==    CR;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
290	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF)  {  return  c  >=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF)  {  return  c  >=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    if(c  >=  LF)  {  return  c  >=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
291	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF  &&  c  ==  CR)  {  return  c  >=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF  &&  c  ==  CR)  {  return  c  >=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    if(c  >=  LF  &&  c  ==  CR)  {  return  c  >=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
292	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c  >=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c  >=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    if(c  >=  LF  &&  c  ==  CR)  {  c  =  in.read();  return  c  >=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
293	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF  &&  c  ==  CR)  {  in.read();  return  c  >=  LF  &&  c  ==  CR;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  if(c  >=  LF  &&  c  ==  CR)  {  in.read();  return  c  >=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    if(c  >=  LF  &&  c  ==  CR)  {  in.read();  return  c  >=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	11	None	add
294	[BUG]  [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  in.lookAhead()  ==  LF)  {  return  c  >=  LF  &&  c  ==  CR;  }  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >=  LF  &&  c  ==  CR;  in.lookAhead()  ==  LF)  {  return  c  >=  LF  &&  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    >=    LF    &&    c    ==    CR;    in.lookAhead()  ==  LF)  {  return  c  >=  LF  &&  c  ==  CR;  }	  	non-compiled	[CE]  not  a  statement	11	None	add
295	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
296	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	5	None	add
297	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  int  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  int  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    int  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  readEndOfLine(int)	5	None	add
298	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	5	None	add
299	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  true;  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED;  if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    LF    ||    c    ==    DISABLED;    if(c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  true;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	add
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'e'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'e'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
301	[BUG]  [BUGGY]  return  c  ==  'e'  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'e'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'e'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	51	replace
302	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'r'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'r'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	49	replace
303	[BUG]  [BUGGY]  return  c  ==  'r'  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'r'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'r'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	49	replace
304	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'N'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'N'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	40	replace
305	[BUG]  [BUGGY]  return  c  ==  'N'  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'N'  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'N'  ||  c  ==  DISABLED;	  return    c    ==    'n'    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	25	40	replace
306	[BUG]  [BUGGY]  return  c  ==  DETERMINISTIC_END  ||  c  ==  CR;  [CE]  cannot  find  symbol  DETERMINISTIC_END  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DETERMINISTIC_END  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  DETERMINISTIC_END  ||  c  ==  CR;	  return    c    ==    LINE    ||    c    ==    CR;    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_END	13	None	replace
307	[BUG]  [BUGGY]  return  c  >>  DISABLED  ||  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >>  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >>  DISABLED  ||  c  ==  DISABLED;	  return    c!=    DISABLED    ||    c    ==    CR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
308	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
309	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(in.lookAhead()  ==  LF)  {  c  =  in.read();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
310	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
311	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
312	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
313	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
314	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  c  ==  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  c  ==  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    c  ==  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	3	None	add
315	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
316	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
317	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	add
318	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  CR  ==  DISABLED;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  CR  ==  DISABLED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  CR  ==  DISABLED;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
319	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	3	None	add
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  ==  'n'  ||  c  ==  LF;	  return    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	8	16	replace
321	[BUG]  [BUGGY]  return  c  ==  'n'  ||  c  ==  LF;  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  'n'  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  ==  'n'  ||  c  ==  LF;	  return    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	8	16	replace
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  >  DISABLED  ||  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	37	replace
323	[BUG]  [BUGGY]  return  c  >  DISABLED  ||  c  ==  CR;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  >  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  >  DISABLED  ||  c  ==  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	37	replace
324	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  ||  c  >  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	add	return  c  <  DISABLED  ||  c  >  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	51	replace
325	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  >  CR;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  DISABLED  ||  c  >  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return  c  <  DISABLED  ||  c  >  CR;	  return    c    >=    DISABLED    ||    c    ==    CR;    	compilable	  [FE]  AssertionError  	18	51	replace
326	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  return  c  <  LF  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  return  c  <  LF  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  return  c  <  LF  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
327	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  in.read();  return  c  <  LF  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  in.read();  return  c  <  LF  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  in.read();  return  c  <  LF  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
328	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  if(ignoreEmptyLines)  {  return  c  <  LF  ||  c  ==  CR;  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  if(ignoreEmptyLines)  {  return  c  <  LF  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  if(ignoreEmptyLines)  {  return  c  <  LF  ||  c  ==  CR;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
329	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  if(ignoreEmptyLines)  {  return  false;  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  if(ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  if(ignoreEmptyLines)  {  return  false;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	add
330	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  throw  new  IllegalStateException( " ");  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  <  LF  ||  c  ==  CR;  if(c  <  LF  ||  c  ==  CR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    <    LF    ||    c    ==    CR;    if(c  <  LF  ||  c  ==  CR)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  unreachable  statement	20	None	add
331	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  LF)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
332	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  c  ==  DISABLED  ||  c  ==  LF;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  c  ==  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    c  ==  DISABLED  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	22	None	add
333	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  c  =  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  c  =  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  LF)  {  c  =  in.read();  }  else  {  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
334	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  c  =  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  c  =  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  LF)  {  c  =  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
335	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  LF)  {  in.read();  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  unreachable  statement	22	None	add
336	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  if(!ignoreEmptyLines)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  if(c  ==  DISABLED  ||  c  ==  LF)  {  if(!ignoreEmptyLines)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c    ==    DISABLED    ||    c    ==    LF;    if(c  ==  DISABLED  ||  c  ==  LF)  {  if(!ignoreEmptyLines)  {  return  c  ==  DISABLED  ||  c  ==  LF;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	add
337	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c!=  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c!=  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    c!=  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	15	None	add
338	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	15	None	add
339	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  ==  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  ==  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    c  ==  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	15	None	add
340	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  >=  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  >=  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    c  >=  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	15	None	add
341	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  return  c!=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
342	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  >>  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  c  >>  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    c  >>  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	15	None	add
343	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [CE]  unreachable  statement  [FE]                AssertionError    [CONTEXT]    boolean  readEndOfLine(int  c)  throws  IOException  {  if  (c  ==  CR  &&  in.lookAhead()  ==  LF)  {  c  =  in.read();  }    [BUGGY]  return  c!=  DISABLED  ||  c  ==  CR;  if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c!=  DISABLED  ||  c  ==  CR;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  readEndOfLine  [RETURN_TYPE]  boolean  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.23791547571544325	137	137	3	replace	return    c!=    DISABLED    ||    c    ==    CR;    if(c  ==  DISABLED  ||  c  ==  DISABLED)  {  c  =  in.read();  }  else  {  return  c!=  DISABLED  ||  c  ==  CR;  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
