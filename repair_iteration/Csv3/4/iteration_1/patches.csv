bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
2	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
3	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
4	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
5	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  DISABLED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
6	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED	  	non-compiled	[CE]  not  a  statement	9	None	add
7	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED);  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED);	  	non-compiled	[CE]  not  a  statement	9	None	add
8	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  CR;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	9	None	add
9	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
10	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
11	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
12	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
13	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
14	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  FR  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  FR  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  FR  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
15	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  >=  UNDEFINED;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  >=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  >=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
16	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  RF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  RF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  RF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
18	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
20	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
22	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
24	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
25	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]            java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	21	None	replace
26	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_CHAR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_CHAR  [FE]              java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_CHAR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_CHAR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_CHAR	21	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
28	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]                java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	10	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  &&  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	10	replace
30	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  &&  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	10	replace
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	11	replace
32	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	11	replace
33	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DEFINED;  [CE]  cannot  find  symbol  DEFINED  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  DEFINED	15	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	15	replace
35	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	15	replace
36	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	15	15	replace
37	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	15	15	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  &&  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	10	replace
39	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  &&  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	10	replace
40	[BUG]  [BUGGY]  return  c  <  =  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  =  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  =  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	22	10	replace
42	[BUG]  [BUGGY]  return  c  <  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	22	10	replace
43	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	22	15	replace
44	[BUG]  [BUGGY]  return  c  >=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	22	15	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	22	15	replace
46	[BUG]  [BUGGY]  return  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	22	15	replace
47	[BUG]  [BUGGY]  return  c  <  =  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  =  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  =  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	6	replace
49	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  [FE]  AssertionError  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	6	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	6	replace
51	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	6	replace
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  &&  c!=  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	10	replace
53	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c!=  DISABLED  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  &&  c!=  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	10	replace
54	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  FINED;  [CE]  cannot  find  symbol  FINED  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  FINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  FINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  FINED	12	None	replace
55	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  FINAL;  [CE]  cannot  find  symbol  FINAL  [FE]            java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  FINAL;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  FINAL;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  FINAL	12	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	19	11	replace
57	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	19	11	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED  &&  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  &&  c  ==  DISABLED  &&  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	19	11	replace
59	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED  &&  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED  &&  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  &&  c  ==  DISABLED  &&  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	19	11	replace
60	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START;  [CE]  cannot  find  symbol  COMMENT_START  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	19	None	replace
61	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
62	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
63	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
64	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
65	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	4	replace
66	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	4	replace
67	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DR  ||  c  ==  LF;  [CE]  cannot  find  symbol  DR  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  DR	6	None	replace
68	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  LF;  [CE]  cannot  find  symbol  READ  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  READ	6	None	replace
69	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  OCCURRENT  ||  c  ==  OCCURRENT;  [CE]  cannot  find  symbol  OCCURRENT  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  OCCURRENT  ||  c  ==  OCCURRENT;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  OCCURRENT  ||  c  ==  OCCURRENT;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  OCCURRENT	6	None	replace
70	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
71	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
72	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
73	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  <identifier>  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  <identifier>  expected	7	None	add
74	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  }  [CE]  <identifier>  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  <identifier>  expected	7	None	add
75	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
76	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
77	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LB  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LB  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LB  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
78	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	7	None	add
79	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {	  	non-compiled	[CE]  <identifier>  expected	7	None	add
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  &&  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
81	[BUG]  [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED;  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  &&  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  &&  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
83	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	24	10	replace
85	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	24	10	replace
86	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	24	15	replace
87	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	24	15	replace
88	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	24	15	replace
89	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	24	15	replace
90	[BUG]  [BUGGY]  return  c  >>  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >>  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >>  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	24	None	replace
91	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
92	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
93	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
94	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
95	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
96	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
97	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
98	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
99	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	11	None	add
100	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  =  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
101	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  =  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
102	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  =  c  ==  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
103	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c!=  DISABLED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]            java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  =  c  ==  LF  ||  c!=  DISABLED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
104	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c  >>  DISABLED  ||  c  ==  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]              java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c  >>  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  =  c  ==  LF  ||  c  >>  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
105	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(0);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]                java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(0);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  c.charAt(0);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
106	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c!=  DISABLED  ||  c  >=  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]                  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  =  c  ==  LF  ||  c!=  DISABLED  ||  c  >=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  =  c  ==  LF  ||  c!=  DISABLED  ||  c  >=  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
107	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
108	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	8	10	replace
110	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	8	10	replace
111	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
112	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
113	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
114	[BUG]  [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
115	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
116	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	8	10	replace
118	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	8	10	replace
119	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
120	[BUG]  [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
121	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	17	3	replace
122	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	17	3	replace
123	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	5	None	add
124	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	5	None	add
125	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR;	  	non-compiled	[CE]  not  a  statement	5	None	add
126	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  [CE]  <identifier>  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
127	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  FR  ||  c  ==  LF;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  FR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  FR  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	5	None	add
128	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF;  [CE]  <identifier>  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  <identifier>  expected	5	None	add
129	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  WR  ||  c  ==  LF;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  WR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  WR  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	5	None	add
130	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  }  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  }	  	non-compiled	[CE]  <identifier>  expected	5	None	add
131	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  READ  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  READ	10	None	replace
132	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	10	15	replace
133	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	10	15	replace
134	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	10	15	replace
135	[BUG]  [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	10	15	replace
136	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	10	10	replace
137	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	10	10	replace
138	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  COMMENT_START  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  COMMENT_START  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  COMMENT_START  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	10	None	replace
139	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]!=  commmentStart)  {  return  true;  }  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]!=  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]!=  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
140	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]  ==  commmentStart)  {  return  true;  }  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]  ==  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]  ==  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
141	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]!=  commmentStart)  {  return  true;  }  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]!=  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]!=  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
142	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]  ==  DISABLED)  {  return  true;  }  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]  ==  DISABLED)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]  ==  DISABLED)  {  return  true;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
143	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]!=  commmentStart)  {  return  false;  }  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]!=  commmentStart)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]!=  commmentStart)  {  return  false;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
144	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]  ==  commmentStart)  {  return  false;  }  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]  ==  commmentStart)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  i  =  0,  len  =  commmentStarts.length;  i  <  len;  ++i)  {  if(commmentStarts[i]  ==  commmentStart)  {  return  false;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
145	[BUG]  [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]  ==  DISABLED)  {  return  false;  }  [CE]  ';'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  char[]  commmentStarts  =  getCommentStarts();  for(int  c  =  0;  c  <  commmentStarts.length;  ++c)  {  if(commmentStarts[c]  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  ';'  expected	13	None	replace
146	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	14	None	add
147	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
148	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	14	None	add
149	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  >=  UNDEFINED;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  >=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c  >=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	14	None	add
150	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  c.charAt(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  c.charAt(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  c.charAt(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	14	None	add
151	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  not  a  statement	14	None	add
152	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  >>  UNDEFINED;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  >>  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c  >>  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	14	None	add
153	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]                  AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	14	None	add
154	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	1	None	add
155	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  <identifier>  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
156	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  }  [CE]  <identifier>  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  <identifier>  expected	1	None	add
157	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  [CE]  <identifier>  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {	  	non-compiled	[CE]  <identifier>  expected	1	None	add
158	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  LF  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	1	None	add
159	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  DISABLED  ||  c  ==  UNDEFINED;  [CE]  <identifier>  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  LF  ||  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
160	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  LF  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	1	None	add
161	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  <identifier>  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  {  return  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()  {  return  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  <identifier>  expected	1	None	add
162	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	18	None	add
163	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	18	None	add
164	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	18	None	add
165	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  >=  UNDEFINED;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  >=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  >=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	18	None	add
166	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  >>  UNDEFINED;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  >>  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  >>  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	18	None	add
167	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  c.charAt(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
168	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  c.charAt(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]                AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  c.charAt(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  c.charAt(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
169	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  }  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  not  a  statement	18	None	add
170	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
171	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
172	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >>  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >>  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >>  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
173	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c!=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
174	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
175	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	23	None	add
176	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
177	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c  >>  UNDEFINED;  [CE]  not  a  statement  [FE]                  AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c  >>  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  CR  ||  c  >>  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	23	None	add
178	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	4	10	replace
179	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	4	10	replace
180	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
181	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
182	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
183	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	20	None	add
184	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [CE]  not  a  statement  [FE]            java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
185	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]              java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	20	None	add
186	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]                java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c!=  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
187	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]                  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c!=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	20	None	add
188	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LD  ||  c  ==  LD  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LD  ||  c  ==  LD  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LD  ||  c  ==  LD  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
189	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LOCK  ||  c  ==  LOCK  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LOCK  ||  c  ==  LOCK  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LOCK  ||  c  ==  LOCK  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
190	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	7	None	add
191	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result(c)  [CE]  <identifier>  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result(c)  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  <identifier>  expected	7	None	add
192	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
193	[BUG]  [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
194	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
195	[BUG]  [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
196	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
197	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
198	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DETERMINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  DETERMINED  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DETERMINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DETERMINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  cannot  find  symbol  DETERMINED	6	None	replace
199	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	non-compiled	[CE]  ';'  expected	6	None	replace
200	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	17	3	replace
201	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  commmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	17	3	replace
202	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	17	None	replace
203	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	17	None	replace
204	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMmmentStart  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	17	None	replace
205	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	17	None	replace
206	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  final  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  final  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    final  int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	14	None	add
207	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  final  char  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  final  char  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    final  char  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	14	None	add
208	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	14	None	add
209	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  not  a  statement	5	None	add
210	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LC;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LC;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LC;	  	non-compiled	[CE]  not  a  statement	5	None	add
211	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	5	None	add
212	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LB;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LB;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LB;	  	non-compiled	[CE]  not  a  statement	5	None	add
213	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  WRITE  ||  c  ==  WRITE;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  WRITE  ||  c  ==  WRITE;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  WRITE  ||  c  ==  WRITE;	  	non-compiled	[CE]  not  a  statement	5	None	add
214	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart;  [CE]  cannot  find  symbol  COMmmentStart  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	19	None	replace
215	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT;  [CE]  cannot  find  symbol  COMMENT  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT;	  return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT	19	None	replace
216	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DR  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  DR  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
217	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
218	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  FT  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  FT  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  FT  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
219	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  >  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  DISABLED  ||  c  >  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	24	15	replace
220	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  >  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  >  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  DISABLED  ||  c  >  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	24	15	replace
221	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START;  [CE]  cannot  find  symbol  COMMENT_START  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	24	None	replace
222	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	23	None	add
223	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	23	None	add
224	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  final  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  final  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    final  int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	23	None	add
225	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCSVFormat().getIndex(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getCSVFormat().getIndex(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getCSVFormat().getIndex(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	23	None	add
226	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
227	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
228	[BUG]  [BUGGY]  final  int  commmentStart  =  getCommentStart(c);  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  final  int  commmentStart  =  getCommentStart(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	final  int  commmentStart  =  getCommentStart(c);	      	non-compiled	[CE]  cannot  find  symbol	13	None	replace
229	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart(c);  if(commmentStart  ==  commmentStart)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart(c);  if(commmentStart  ==  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart(c);  if(commmentStart  ==  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
230	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart!=  commmentStart)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart!=  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart!=  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
231	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart(c);  if(commmentStart!=  commmentStart)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart(c);  if(commmentStart!=  commmentStart)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart(c);  if(commmentStart!=  commmentStart)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
232	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  getCommentStart();  if(commmentStart  ==  commmentStart)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
233	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	2	15	replace
234	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	2	15	replace
235	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	6	replace
236	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF;  [FE]  AssertionError  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  LF;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	6	replace
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  Float.POSITIVE_INFINITY;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
238	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  Float.POSITIVE_INFINITY;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.MIN_VALUE;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  Float.MIN_VALUE;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
240	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.MIN_VALUE;  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.MIN_VALUE;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  Float.MIN_VALUE;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.NaN;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  Float.NaN;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
242	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.NaN;  [FE]  AssertionError  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  Float.NaN;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  Float.NaN;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	2	11	replace
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	10	replace
244	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	15	10	replace
245	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMmmentStart  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	15	None	replace
246	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
247	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  char  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  char  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  char  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
248	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
249	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
250	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	1	None	add
251	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result(c)  [CE]  <identifier>  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result(c)  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result(c)	  	non-compiled	[CE]  <identifier>  expected	1	None	add
252	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  [CE]  <identifier>  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  final  Records  do  not  match  expected  result  ()  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  <identifier>  expected	1	None	add
253	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  Document  do  not  match  expected  result(c)  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  Document  do  not  match  expected  result(c)  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  not  a  statement	1	None	add
254	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	1	None	add
255	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c  ==  DISABLED  ||  c!=  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	1	None	add
256	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	10	15	replace
257	[BUG]  [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	10	15	replace
258	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	4	replace
259	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	4	replace
260	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	21	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	11	replace
262	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart;  [FE]  AssertionError  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	21	11	replace
263	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  DEFINED;  [CE]  cannot  find  symbol  DEFINED  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  DEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  DEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  DEFINED	21	None	replace
264	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	21	15	replace
265	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	21	15	replace
266	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	11	None	add
267	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED)  {  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED)  {  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c!=  DISABLED)  {  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	11	None	add
268	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	11	None	add
269	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED)  {  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  }  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED)  {  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c!=  DISABLED)  {  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  ';'  expected	11	None	add
270	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c  >=  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	11	None	add
271	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]              java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
272	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  getComment(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]                java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  getComment(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  getComment(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
273	[BUG]  [BUGGY]  return  c  <  =  LF  ||  c  >  CR  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  =  LF  ||  c  >  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  =  LF  ||  c  >  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
274	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
275	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  UNDEFINED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	3	None	add
276	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMmmentStart  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	4	None	replace
277	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMmmentStart  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	4	None	replace
278	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	4	10	replace
279	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  commmentStart  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	4	10	replace
280	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  boolean  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  boolean  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    boolean  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	16	None	add
281	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  boolean  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  boolean  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    boolean  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	16	None	add
282	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
283	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
284	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  FR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  FR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  FR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
285	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >>  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >>  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >>  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
286	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >>  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >>  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >>  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	20	None	add
287	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  c  =  in.read();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  c  =  in.read();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    char  c  =  in.read();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	20	None	add
288	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DETERMINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  DETERMINED  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DETERMINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DETERMINED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  DETERMINED	8	None	replace
289	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
290	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
291	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
292	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
293	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	12	4	replace
294	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	12	4	replace
295	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  >=  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  DISABLED  ||  c  >=  LF  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
296	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  >=  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  >=  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  DISABLED  ||  c  >=  LF  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
297	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	15	replace
298	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  UNDEFINED;  [FE]  AssertionError  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	15	replace
299	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF_READ  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  LF_READ  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF_READ  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF_READ  ||  c  ==  UNDEFINED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  LF_READ	12	None	replace
300	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	4	replace
301	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	4	replace
302	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	3	replace
303	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	10	3	replace
304	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;  [CE]  cannot  find  symbol  READ  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  READ  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	non-compiled	[CE]  cannot  find  symbol  READ	10	None	replace
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	10	15	replace
306	[BUG]  [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    	compilable	  [FE]  AssertionError  	10	15	replace
307	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  unreachable  statement	14	None	add
308	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	14	None	add
309	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    char  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	14	None	add
310	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  ')'  expected	14	None	add
311	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c!=  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c!=  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c!=  DISABLED)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  ')'  expected	14	None	add
312	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  delimiter)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  delimiter)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  delimiter)  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  ')'  expected	14	None	add
313	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  else  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  else  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  else  {  return  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  ')'  expected	14	None	add
314	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  COMMENT_START  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	4	None	replace
315	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  COMMENT;  [CE]  cannot  find  symbol  COMMENT  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  COMMENT;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  COMMENT;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT	4	None	replace
316	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  COMMENT_START;  [CE]  cannot  find  symbol  COMMENT_START  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  COMMENT_START;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  COMMENT_START;	  return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	4	None	replace
317	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  unreachable  statement	5	None	add
318	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [CE]  unreachable  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  unreachable  statement	5	None	add
319	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [CE]  unreachable  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  	non-compiled	[CE]  unreachable  statement	5	None	add
320	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF  ||  c  ==  LF;  [CE]  unreachable  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  LF  ||  c  ==  LF;	  	non-compiled	[CE]  unreachable  statement	5	None	add
321	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LB;  [CE]  cannot  find  symbol  LB  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LB;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    return  c  ==  UNDEFINED  ||  c  ==  CR  ||  c  ==  CR  ||  c  ==  LB;	  	non-compiled	[CE]  cannot  find  symbol  LB	5	None	add
322	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  getCommentStart();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  getCommentStart();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  getCommentStart();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
323	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  c.charAt(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
324	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  getCommentStart(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  char  c  =  getCommentStart(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    char  c  =  getCommentStart(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	11	None	add
325	[BUG]  [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED);  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED;  boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    boolean  c  ==  LF  ||  c!=  DISABLED  ||  c  ==  UNDEFINED);	  	non-compiled	[CE]  ';'  expected	11	None	add
326	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  unreachable  statement	16	None	add
327	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	16	None	add
328	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
329	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	16	None	add
330	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  getChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	16	None	add
331	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);	  	non-compiled	[CE]  not  a  statement	16	None	add
332	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  unreachable  statement	18	None	add
333	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    char  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	18	None	add
334	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  DISABLED  =  c.charAt(0);  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  DISABLED  =  c.charAt(0);  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    char  DISABLED  =  c.charAt(0);  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	add
335	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	18	None	add
336	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	18	None	add
337	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  DISABLED  =  c.charAt(c);  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  char  DISABLED  =  c.charAt(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    char  DISABLED  =  c.charAt(c);	  	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	add
338	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  unreachable  statement	3	None	add
339	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  int  c  =  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    int  c  =  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	3	None	add
340	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  UNDEFINED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	3	None	add
341	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);	  	non-compiled	[CE]  not  a  statement	3	None	add
342	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	24	10	replace
343	[BUG]  [BUGGY]  return  c  >  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	24	10	replace
344	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	17	10	replace
345	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	17	10	replace
346	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	17	15	replace
347	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	17	15	replace
348	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	17	3	replace
349	[BUG]  [BUGGY]  return  c  >  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	17	3	replace
350	[BUG]  [BUGGY]  return  c  <  =  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  =  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  =  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    >=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
351	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(0);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  c  =  c.charAt(0);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    char  c  =  c.charAt(0);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	20	None	add
352	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  FR  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  FR  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  FR  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
353	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  UNDEFINED;  [CE]  not  a  statement  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	20	None	add
354	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);  [CE]  not  a  statement  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    c!=  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED);	  	non-compiled	[CE]  not  a  statement	20	None	add
355	[BUG]  [BUGGY]  return  c  <  =  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  =  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  =  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
356	[BUG]  [BUGGY]  return  c  <  =  LF  ||  c  >=  CR  ||  c  ==  UNDEFINED;  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  =  LF  ||  c  >=  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  =  LF  ||  c  >=  CR  ||  c  ==  UNDEFINED;	  return    c    <    =    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
357	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  LD  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LD  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  LD	21	None	replace
358	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  FT  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  FT  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  FT	21	None	replace
359	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LC  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  cannot  find  symbol  LC  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LC  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LC  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  cannot  find  symbol  LC	21	None	replace
360	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	21	15	replace
361	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  LF  ||  c!=  CR  ||  c  ==  UNDEFINED;	  return    c!=    DISABLED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	21	15	replace
362	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
363	[BUG]  [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
364	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
365	[BUG]  [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
366	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
367	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
368	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
369	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c!=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	8	15	replace
370	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
371	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  UNDEFINED  ||  c  >=  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
372	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
373	[BUG]  [BUGGY]  return  c  <  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
374	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  if(!ignoreEmptyLines)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
375	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  if(!ignoreEmptyLines)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  if(!ignoreEmptyLines)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  if(!ignoreEmptyLines)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
376	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  return  true;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
377	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  delimiter  =  getDelimiter();  if(delimiter  ==  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  delimiter  =  getDelimiter();  if(delimiter  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  delimiter  =  getDelimiter();  if(delimiter  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
378	[BUG]  [BUGGY]  if(c  <  =  DISABLED)  {  final  int  delimiter  =  getDelimiter();  if(delimiter  ==  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED)  {  final  int  delimiter  =  getDelimiter();  if(delimiter  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED)  {  final  int  delimiter  =  getDelimiter();  if(delimiter  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
379	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  delimiter  =  getSurroundingSpace(c);  if(delimiter  ==  DISABLED)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  delimiter  =  getSurroundingSpace(c);  if(delimiter  ==  DISABLED)  {  return  false;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	if(c  <  =  DISABLED  ||  c  >  DISABLED)  {  final  int  delimiter  =  getSurroundingSpace(c);  if(delimiter  ==  DISABLED)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	11	replace
381	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED;  [FE]  AssertionError  [FE]    java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  AssertionError  	12	11	replace
382	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
383	[BUG]  [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]      java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
384	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c!=  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
385	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]        java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c!=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c!=  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
386	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  DISABLED  ||  c  >=  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
387	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  >=  DISABLED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]          java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  >=  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  DISABLED  ||  c  >=  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	12	15	replace
388	[BUG]  [BUGGY]  return  c  >>  DISABLED  ||  c  ==  DISABLED;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >>  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >>  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c!=    DISABLED    ||    c    ==    UNDEFINED;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	12	None	replace
389	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  unreachable  statement	23	None	add
390	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >>  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]      AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >>  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >>  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	23	None	add
391	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  char  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    char  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  ';'  expected	23	None	add
392	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c!=  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c!=  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c!=  DISABLED)  {  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  ')'  expected	23	None	add
393	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c!=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [CE]  unreachable  statement  [FE]            AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c!=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c!=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  unreachable  statement	23	None	add
394	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  UNDEFINED;  }  [CE]  cannot  find  symbol  COMmmentStart  [FE]              AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  COMmmentStart  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	23	None	add
395	[BUG]  [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  REA  ||  c  ==  UNDEFINED;  }  [CE]  cannot  find  symbol  REA  [FE]                AssertionError    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED;  if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  REA  ||  c  ==  UNDEFINED;  }  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    >=    DISABLED    ||    c    ==    CR    ||    c    ==    UNDEFINED;    if(c  >=  DISABLED  ||  c  ==  CR  ||  c  ==  UNDEFINED)  {  return  c  >=  DISABLED  ||  c  ==  REA  ||  c  ==  UNDEFINED;  }	  	non-compiled	[CE]  cannot  find  symbol  REA	23	None	add
396	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  unreachable  statement	1	None	add
397	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpace(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	1	None	add
398	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpace();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpace();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getSurroundingSpace();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	1	None	add
399	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getChar();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getChar();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	1	None	add
400	[BUG]  [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpaces().size();  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  LF  ||  c  ==  DISABLED  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpaces().size();  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    int  c  =  getSurroundingSpaces().size();	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	1	None	add
401	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  unreachable  statement	7	None	add
402	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LB  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LB  ||  c  ==  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LB  ||  c  ==  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
403	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED);  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED);	  	non-compiled	[CE]  ';'  expected	7	None	add
404	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpace(c);  [CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  int  c  =  getSurroundingSpace(c);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    int  c  =  getSurroundingSpace(c);	  	non-compiled	[CE]  variable  c  is  already  defined  in  method  isStartOfLine(int)	7	None	add
405	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c!=  LF  ||  c  ==  UNDEFINED;  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  LF  ||  c  ==  UNDEFINED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c!=  LF  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    LF    ||    c    ==    UNDEFINED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c!=  LF  ||  c  ==  UNDEFINED;	  	non-compiled	[CE]  not  a  statement	7	None	add
406	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [CE]  unreachable  statement  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;	  	non-compiled	[CE]  unreachable  statement	9	None	add
407	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  FR  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  FR  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  FR  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
408	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED);  [CE]  not  a  statement  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED);  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED);	  	non-compiled	[CE]  not  a  statement	9	None	add
409	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LC  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LC  ||  c  ==  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LC  ||  c  ==  DISABLED  ||  c  ==  DISABLED;	  	non-compiled	[CE]  not  a  statement	9	None	add
410	[BUG]  [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED;  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    DISABLED;    c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  DISABLED	  	non-compiled	[CE]  not  a  statement	9	None	add
411	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  <  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	2	15	replace
412	[BUG]  [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  <  DISABLED  ||  c  ==  DISABLED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  <  DISABLED  ||  c  ==  DISABLED;	  return    c    ==    LF    ||    c    ==    DISABLED    ||    c    ==    UNDEFINED;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	2	15	replace
413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	6	5	replace
414	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [FE]  AssertionError  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	6	5	replace
415	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
416	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  UNDEFINED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
417	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
418	[BUG]  [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  UNDEFINED;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	6	3	replace
419	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	6	15	replace
420	[BUG]  [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [FE]  AssertionError  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c!=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  AssertionError  	6	15	replace
421	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	add	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
422	[BUG]  [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    boolean  isStartOfLine(final  int  c)  {    [BUGGY]  return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;  [BUGGY]    }  [CLASS]  Lexer  [METHOD]  isStartOfLine  [RETURN_TYPE]  boolean  final  int  c  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.242535625036333	156	156	3	replace	return  c  >=  UNDEFINED  ||  c  ==  DISABLED  ||  c  ==  LF  ||  c  ==  CR  ||  c  ==  LF;	  return    c    ==    UNDEFINED    ||    c    ==    LF    ||    c    ==    CR    ||    c    ==    LF;    	compilable	  [FE]  java.lang.AssertionError:  Failed  to  parse  with  comments  (entry  1):  array  lengths  differed  	6	15	replace
