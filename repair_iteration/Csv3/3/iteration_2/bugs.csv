bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(c,  c.charAt(0))  {  [CE]  ')'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  c.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  c.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
2	[BUG]  [BUGGY]  switch(c.charAt(1))  {  [CE]  int  cannot  be  dereferenced  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c.charAt(1))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(1))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
3	[BUG]  [BUGGY]  switch(c.charAt(2))  {  [CE]  int  cannot  be  dereferenced  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c.charAt(2))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(2))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
4	[BUG]  [BUGGY]  switch(c,  descriptionChar.charAt(0))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  descriptionChar.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  descriptionChar.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
5	[BUG]  [BUGGY]  switch(c,  getCharAt(0))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  getCharAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
6	[BUG]  [BUGGY]  switch(in.charAt(0))  {  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
7	[BUG]  [BUGGY]  switch(in.read())  {  switch(in.read())  {  [CE]  case,  default,  or  '}'  expected  [FE]    (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  switch(in.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    switch(in.read())  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
8	[BUG]  [BUGGY]  switch(in.read())  {  switch(c)  {  [CE]  case,  default,  or  '}'  expected  [FE]      (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  switch(c)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    switch(c)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
9	[BUG]  [BUGGY]  switch(in.read())  {  switch(c.read())  {  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  switch(c.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    switch(c.read())  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
10	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]          (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
11	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]            (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
12	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]              (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
13	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
14	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]                  (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
15	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
16	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
17	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c!=  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
18	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
19	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
21	[BUG]  [BUGGY]  Switch(c,  commmentStart)  {  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c,  commmentStart)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
22	[BUG]  [BUGGY]  Switch(c),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
23	[BUG]  [BUGGY]  Switch(c,  commmentSurroundingSpaces)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c,  commmentSurroundingSpaces)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentSurroundingSpaces)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
24	[BUG]  [BUGGY]  Switch(c,  commmentEnd,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c,  commmentEnd,  escapeSurroundingSpaces)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentEnd,  escapeSurroundingSpaces)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
25	[BUG]  [BUGGY]  Switch(c),  commmentStart,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c),  commmentStart,  escapeEmptyLines)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  escapeEmptyLines)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
26	[BUG]  [BUGGY]  Switch(c),  commmentStart,  escapeSurroundingSpaces);  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c),  commmentStart,  escapeSurroundingSpaces);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  escapeSurroundingSpaces);	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
27	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
28	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
29	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
30	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
31	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
32	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
33	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
34	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
35	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
36	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
37	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
38	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
39	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	13	None	replace
40	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	13	None	replace
41	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	13	None	replace
42	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c!=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	13	None	replace
43	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
46	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  int  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
47	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  c  &  DISABLED)  {  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  c  &  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    c  &  DISABLED)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
48	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  Integer  c  =  in.readInt();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
49	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  char  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
50	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  Integer  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
51	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  Context.codeBug();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
52	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Context.readEscape(in,  c);  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  Context.readEscape(in,  c);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    Context.readEscape(in,  c);	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
53	[BUG]  [BUGGY]  switch(c.read())  {  [CE]  int  cannot  be  dereferenced  [FE]    (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {	  switch(in.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
54	[BUG]  [BUGGY]  switch(in.read(),  c)  {  [CE]  ')'  expected  [FE]      (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(),  c)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c)  {	  switch(in.read())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
55	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  -  1)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(in.read()  -  1)  {	  switch(in.read())    {    	compilable	  [FE]  (entry  2)  	6	13	replace
56	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  [FE]  (entry  2)  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  -  1)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  -  1)  {	  switch(in.read())    {    	compilable	  [FE]  (entry  2)  	6	13	replace
57	[BUG]  [BUGGY]  switch(c).read()  {  [CE]  '{'  expected  [FE]          (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c).read()  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).read()  {	  switch(in.read())    {    	non-compiled	[CE]  '{'  expected	6	None	replace
58	[BUG]  [BUGGY]  Switch(c.read())  {  [CE]  ';'  expected  [FE]            (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read())  {	  switch(in.read())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
59	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  >  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  >  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
60	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  +  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  DISABLED)  {	  switch(c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	4	6	replace
61	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  +  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  DISABLED)  {	  switch(c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	4	6	replace
62	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  [CE]  incompatible  types  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  <  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  incompatible  types	4	None	replace
63	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED  ||  c  <  =  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  <  =  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  ==  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  ==  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
65	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  >=  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  >=  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	4	None	replace
66	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
67	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  int  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
68	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  Integer  c  =  in.readInt();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
69	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  Integer  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
70	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  char  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
71	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  c  &  0xfffff)  {  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  c  &  0xfffff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    c  &  0xfffff)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
72	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
73	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c  &  0xffff)  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c  &  0xffff)  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    Record  do  not  match  expected  result(c  &  0xffff)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
74	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	14	None	replace
75	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	14	None	replace
76	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c!=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	14	None	replace
78	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
80	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
81	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
82	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
83	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
84	[BUG]  [BUGGY]  Switch(in.read(),  c)  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(in.read(),  c)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c)  {	  Switch(in.read())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
85	[BUG]  [BUGGY]  Switch(c,  in.read())  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c,  in.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.read())  {	  Switch(in.read())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
86	[BUG]  [BUGGY]  Switch(in.read(),  in.read())  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(in.read(),  in.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read())  {	  Switch(in.read())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
87	[BUG]  [BUGGY]  Switch(in.read()  +  c)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(in.read()  +  c)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  +  c)  {	  Switch(in.read())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
88	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfffff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xfffff)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
89	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfffff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffff)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
90	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xfff)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
91	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
92	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffffF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffffF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
93	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffffF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffffF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
94	[BUG]  [BUGGY]  Switch(c  &  0xffff)  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c  &  0xffff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff)  {	  switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
95	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfffF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xfffF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
96	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfffF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
97	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffFF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffFF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
98	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffFF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffFF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
99	[BUG]  [BUGGY]  switch(in.read(c,  commmentStart))  {  [CE]  no  suitable  method  found  for  read(int,char)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c,  commmentStart))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentStart))  {	  switch(in.read(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char)	19	None	replace
100	[BUG]  [BUGGY]  switch(in.read(c),  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  escapeSurroundingSpaces)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeSurroundingSpaces)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
101	[BUG]  [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces))  {  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeSurroundingSpaces))  {	  switch(in.read(c))    {    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	19	None	replace
102	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  escapeSurroundingSpaces)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
103	[BUG]  [BUGGY]  switch(in.read(c),  escapeEmptyLines)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  escapeEmptyLines)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeEmptyLines)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
104	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart)  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  commmentStart)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
105	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  escapeEmptyLines)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  commmentStart,  escapeEmptyLines)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  escapeEmptyLines)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
106	[BUG]  [BUGGY]  switch(c.readEscape())  {  [CE]  int  cannot  be  dereferenced  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c.readEscape())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape())  {	  switch(in.readEscape())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	18	None	replace
107	[BUG]  [BUGGY]  switch(in.readEscape(),  c)  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.readEscape(),  c)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readEscape(),  c)  {	  switch(in.readEscape())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
108	[BUG]  [BUGGY]  switch(in,  c.readEscape())  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in,  c.readEscape())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  c.readEscape())  {	  switch(in.readEscape())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
109	[BUG]  [BUGGY]  switch(escapeChar.readEscape())  {  [CE]  cannot  find  symbol  escapeChar  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(escapeChar.readEscape())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeChar.readEscape())  {	  switch(in.readEscape())    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	18	None	replace
110	[BUG]  [BUGGY]  switch(c,  in.readEscape())  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  in.readEscape())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.readEscape())  {	  switch(in.readEscape())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
111	[BUG]  [BUGGY]  switch(c,  c.charAt(c))  {  [CE]  ')'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  c.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  c.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
112	[BUG]  [BUGGY]  switch(in.charAt(c))  {  [CE]  cannot  find  symbol  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
113	[BUG]  [BUGGY]  char  c  =  c.charAt(c);  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  char  c  =  c.charAt(c);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  c.charAt(c);	  switch(c.charAt(c))    {    	non-compiled	[CE]  orphaned  case	1	None	replace
114	[BUG]  [BUGGY]  switch(c,  in.charAt(c))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  in.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
115	[BUG]  [BUGGY]  switch(char.charAt(c))  {  [CE]  class  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(char.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(char.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  class  expected	1	None	replace
116	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  int  commmentStart  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();	      	non-compiled	[CE]  orphaned  case	9	None	replace
117	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  break;  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  int  commmentStart  =  in.read();  break;  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();  break;	      	non-compiled	[CE]  orphaned  case	9	None	replace
118	[BUG]  [BUGGY]  int  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  int  commmentStart  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.read();	      	non-compiled	[CE]  orphaned  case	9	None	replace
119	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  char  commmentStart  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read();	      	non-compiled	[CE]  orphaned  case	9	None	replace
120	[BUG]  [BUGGY]  final  int  delimiter  =  in.read();  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  int  delimiter  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read();	      	non-compiled	[CE]  orphaned  case	9	None	replace
121	[BUG]  [BUGGY]  int  delimiter  =  in.read();  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  int  delimiter  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read();	      	non-compiled	[CE]  orphaned  case	9	None	replace
122	[BUG]  [BUGGY]  final  int  len  =  in.read();  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  int  len  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  in.read();	      	non-compiled	[CE]  orphaned  case	9	None	replace
123	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
124	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	14	None	replace
125	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
126	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
127	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  >>  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  >>  DISABLED)  {	  switch(c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	4	5	replace
128	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  >>  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >>  DISABLED)  {	  switch(c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	4	5	replace
129	[BUG]  [BUGGY]  switch(c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  <  =  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
130	[BUG]  [BUGGY]  switch(c  ==  DISABLED)  {  [CE]  incompatible  types  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  incompatible  types	4	None	replace
131	[BUG]  [BUGGY]  switch(c  >=  DISABLED)  {  [CE]  incompatible  types  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  >=  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >=  DISABLED)  {	  switch(c    &    DISABLED)    {    	non-compiled	[CE]  incompatible  types	4	None	replace
132	[BUG]  [BUGGY]  switch(in.read()  &  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]    (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  &  c  <  =  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  <  =  DISABLED)  {	  switch(in.read())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
133	[BUG]  [BUGGY]  switch(in.read()  &  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  &  c  <  =  '9')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  <  =  '9')  {	  switch(in.read())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
134	[BUG]  [BUGGY]  switch(in.read()  &  c  <  =  '0')  {  [CE]  illegal  start  of  expression  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  &  c  <  =  '0')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  <  =  '0')  {	  switch(in.read())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
135	[BUG]  [BUGGY]  Switch(in,  in.read())  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(in,  in.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  in.read())  {	  Switch(in.read())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
136	[BUG]  [BUGGY]  Switch(in.read()  &  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(in.read()  &  c  <  =  '9')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  <  =  '9')  {	  Switch(in.read())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
137	[BUG]  [BUGGY]  Switch(c,  DISABLED)  {  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c,  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
138	[BUG]  [BUGGY]  char  c  =  in.read();  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  char  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.read();	  Switch(c)    {    	non-compiled	[CE]  orphaned  case	16	None	replace
139	[BUG]  [BUGGY]  Switch(c  &  DISABLED)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c  &  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
140	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
141	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
142	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
143	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
144	[BUG]  [BUGGY]  switch(in.read())  {  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  commmentStart  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  commmentStart  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
145	[BUG]  [BUGGY]  switch(in.read())  {  int  case  'r':  return  CR;  [CE]  case,  default,  or  '}'  expected  [FE]      (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  case  'r':  return  CR;  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  case  'r':  return  CR;	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
146	[BUG]  [BUGGY]  switch(in.read())  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  r  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
147	[BUG]  [BUGGY]  switch(in.read())  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  len  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
148	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]            (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
149	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]              (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  if(c  ==  'n')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    if(c  ==  'n')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
150	[BUG]  [BUGGY]  switch(in,  in.readEscape())  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in,  in.readEscape())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  in.readEscape())  {	  switch(in.readEscape())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
151	[BUG]  [BUGGY]  switch(escape.readEscape())  {  [CE]  char  cannot  be  dereferenced  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(escape.readEscape())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escape.readEscape())  {	  switch(in.readEscape())    {    	non-compiled	[CE]  char  cannot  be  dereferenced	18	None	replace
152	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  int  len  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
153	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  int  r  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
154	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c)  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
155	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  Context.codeBug();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
156	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xff)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
157	[BUG]  [BUGGY]  switch(c  &  0xff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
158	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  [CE]  ';'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c  &  0xfff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {	  switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
159	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  int  commmentStart  =  in.read(c);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c);	      	non-compiled	[CE]  orphaned  case	9	None	replace
160	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  char  commmentStart  =  in.read(c);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c);	      	non-compiled	[CE]  orphaned  case	9	None	replace
161	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  final  char  commmentStart  =  in.read(c);  break;  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c);  break;	      	non-compiled	[CE]  orphaned  case	9	None	replace
162	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	13	None	replace
163	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    int  commmentStart  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
164	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  int  r  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
165	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    int  commmentStart  =  in.read(c);	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
166	[BUG]  [BUGGY]  switch(c,  escapeChar.charAt(0))  {  [CE]  ')'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  escapeChar.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escapeChar.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
167	[BUG]  [BUGGY]  switch(c,  DISABLED)  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DISABLED)  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
168	[BUG]  [BUGGY]  switch(c,  in.charAt(0))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  in.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
169	[BUG]  [BUGGY]  switch(in.read(c,  escape))  {  [CE]  no  suitable  method  found  for  read(int,char)  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c,  escape))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape))  {	  switch(in.read(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char)	19	None	replace
170	[BUG]  [BUGGY]  switch(in.read(c,  DISABLED))  {  [CE]  no  suitable  method  found  for  read(int,char)  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c,  DISABLED))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  DISABLED))  {	  switch(in.read(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char)	19	None	replace
171	[BUG]  [BUGGY]  switch(in.read(c),  escapeChar)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  escapeChar)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeChar)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
172	[BUG]  [BUGGY]  switch(escapeChar.charAt(c))  {  [CE]  cannot  find  symbol  escapeChar  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(escapeChar.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeChar.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	1	None	replace
173	[BUG]  [BUGGY]  switch(c,  out.charAt(c))  {  [CE]  ')'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  out.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  out.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
174	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfffFF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xfffFF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
175	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xfffFF)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffFF)  {	  switch(c    &    0xffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	8	4	replace
176	[BUG]  [BUGGY]  Switch(c),  in.read())  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c),  in.read())  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  in.read())  {	  Switch(in.read())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
177	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(0))  {  [CE]  ')'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  delimiter.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
178	[BUG]  [BUGGY]  switch(c,  quoteChar.charAt(0))  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  quoteChar.charAt(0))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  quoteChar.charAt(0))  {	  switch(c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
179	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  >=  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	14	None	replace
180	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
181	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	15	None	replace
182	[BUG]  [BUGGY]  int  delimiter  =  in.read();  break;  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  int  delimiter  =  in.read();  break;  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read();  break;	      	non-compiled	[CE]  orphaned  case	9	None	replace
183	[BUG]  [BUGGY]  int  commmentStart  =  in.read();  break;  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  int  commmentStart  =  in.read();  break;  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.read();  break;	      	non-compiled	[CE]  orphaned  case	9	None	replace
184	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  >=  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	13	None	replace
185	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
186	[BUG]  [BUGGY]  switch(in.read())  {  int  delimiter  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  delimiter  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  delimiter  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
187	[BUG]  [BUGGY]  switch(in.read())  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
188	[BUG]  [BUGGY]  switch(in.read())  {  int  case  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  case  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  case  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
189	[BUG]  [BUGGY]  switch(in.read())  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]          (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read())  {  int  commmentStart  =  in.read(c);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())    {    int  commmentStart  =  in.read(c);	  	non-compiled	[CE]  case,  default,  or  '}'  expected	5	None	add
190	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]    (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  &&  c  <  =  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  DISABLED)  {	  switch(in.read())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
191	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]      (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  &&  c  <  =  '9')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  '9')  {	  switch(in.read())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
192	[BUG]  [BUGGY]  switch(in.read()  &&  in.read()  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        (entry  2)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read()  &&  in.read()  >  0)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  in.read()  >  0)  {	  switch(in.read())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	6	None	replace
193	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
194	[BUG]  [BUGGY]  switch(in.read(c),  delimiter)  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  delimiter)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  delimiter)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
195	[BUG]  [BUGGY]  switch(in.read(c),  DISABLED)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c),  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  DISABLED)  {	  switch(in.read(c))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
196	[BUG]  [BUGGY]  switch(in.read(c,  delimiter))  {  [CE]  no  suitable  method  found  for  read(int,char)  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(in.read(c,  delimiter))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter))  {	  switch(in.read(c))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char)	19	None	replace
197	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(c))  {  [CE]  ')'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c,  delimiter.charAt(c))  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(c))  {	  switch(c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
198	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
199	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
200	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
201	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
202	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
203	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	12	None	replace
204	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
205	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
206	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
207	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
208	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  switch(c  &  DISABLED)  {  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  DISABLED)  {  switch(c  &  DISABLED)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    DISABLED)    {    switch(c  &  DISABLED)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	3	None	add
209	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  c  &  0xffff)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  c  &  0xffff)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    c  &  0xffff)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
210	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
211	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
212	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  switch(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffff)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
213	[BUG]  [BUGGY]  Switch(in,  c)  {  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(in,  c)  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c)  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
214	[BUG]  [BUGGY]  Switch(c),  DISABLED,  DISABLED);  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c),  DISABLED,  DISABLED);  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  DISABLED);	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
215	[BUG]  [BUGGY]  Switch(c),  DISABLED  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]    int  readEscape()  throws  IOException  {  final  int  c  =  in.read();    [BUGGY]  Switch(c),  DISABLED  {  [BUGGY]    case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED  {	  Switch(c)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
