bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  switch(c,  c.charAt(1))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  c.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  c.charAt(1))  {	  switch(c.charAt(1))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
2	[BUG]  [BUGGY]  switch(c.charAt(3))  {  [CE]  int  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.charAt(3))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(3))  {	  switch(c.charAt(1))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
3	[BUG]  [BUGGY]  switch(c.charAt(5))  {  [CE]  int  cannot  be  dereferenced  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.charAt(5))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(5))  {	  switch(c.charAt(1))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	2	None	replace
4	[BUG]  [BUGGY]  final  String  commmentStart  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  String  commmentStart  =  in.read(c);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  String  commmentStart  =  in.read(c);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
5	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  break;  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
6	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
7	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  DISABLED);  break;  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  DISABLED);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  DISABLED);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
8	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  escape);  break;  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  escape);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  escape);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
9	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  DETERMINISTIC_COMMENT_START);  break;  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  DETERMINISTIC_COMMENT_START);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  DETERMINISTIC_COMMENT_START);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
10	[BUG]  [BUGGY]  Switch(in.read()  &  c  ==  '9')  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c  ==  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  ==  '9')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  ';'  expected	136	None	replace
11	[BUG]  [BUGGY]  Switch(c.read()  &  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &  c  <  =  '9')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
12	[BUG]  [BUGGY]  Switch(c  &  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  c  <  =  '9')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
13	[BUG]  [BUGGY]  Switch(in.read()  &  c!=  '9')  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c!=  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c!=  '9')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  ';'  expected	136	None	replace
14	[BUG]  [BUGGY]  Switch(in.read()  &  c  >=  '9')  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c  >=  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  >=  '9')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  ';'  expected	136	None	replace
15	[BUG]  [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  <  =  '9'  ||  c  <  =  '9')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
16	[BUG]  [BUGGY]  switch(in.read(c),  ignoreSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  ignoreSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  ignoreSurroundingSpaces)  {	  switch(in.read(c),    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
17	[BUG]  [BUGGY]  switch(in.read(c),  ignoreEmptyLines)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  ignoreEmptyLines)  {	  switch(in.read(c),    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
18	[BUG]  [BUGGY]  switch(c.read(),  escapeEmptyLines)  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  escapeEmptyLines)  {	  switch(in.read(c),    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
19	[BUG]  [BUGGY]  switch(in.read(c),  this.ignoreEmptyLines)  {  [CE]  ')'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  this.ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  this.ignoreEmptyLines)  {	  switch(in.read(c),    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
20	[BUG]  [BUGGY]  switch(in.read(),  c),  commmentStart)  {  [CE]  ')'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c),  commmentStart)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
21	[BUG]  [BUGGY]  switch(in.read(),  c  +  1)  {  [CE]  ')'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c  +  1)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
22	[BUG]  [BUGGY]  switch(c.read(),  in)  {  [CE]  ')'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  in)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  in)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
23	[BUG]  [BUGGY]  switch(in.readLine(),  c)  {  [CE]  ')'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readLine(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readLine(),  c)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
24	[BUG]  [BUGGY]  switch(in.read(),  c  &  0xff)  {  [CE]  ')'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c  &  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c  &  0xff)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
25	[BUG]  [BUGGY]  if(c!=  'e'  ||  c  ==  'E')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'e'  ||  c  ==  'E')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'e'  ||  c  ==  'E')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
26	[BUG]  [BUGGY]  if(c  >=  'e'  ||  c  ==  'E')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'e'  ||  c  ==  'E')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'e'  ||  c  ==  'E')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
27	[BUG]  [BUGGY]  if(c  <  'e'  ||  c  >  'E')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'e'  ||  c  >  'E')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'e'  ||  c  >  'E')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
28	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'A')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
29	[BUG]  [BUGGY]  if(c  <  =  'e'  ||  c  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'e'  ||  c  ==  'E')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'e'  ||  c  ==  'E')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
30	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'r')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
31	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
32	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	204	None	replace
33	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
34	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
35	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	204	None	replace
36	[BUG]  [BUGGY]  final  int  r  =  in.read();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
37	[BUG]  [BUGGY]  switch(c.readEscape(),  in)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.readEscape(),  in)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape(),  in)  {	  switch(in.readEscape(),    c)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
38	[BUG]  [BUGGY]  switch(in.readSurroundingSpaces(),  c)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readSurroundingSpaces(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readSurroundingSpaces(),  c)  {	  switch(in.readEscape(),    c)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
39	[BUG]  [BUGGY]  switch(in.readEscape(),  c),  commmentStart)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readEscape(),  c),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readEscape(),  c),  commmentStart)  {	  switch(in.readEscape(),    c)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
40	[BUG]  [BUGGY]  switch(in.readChar(),  c)  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readChar(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readChar(),  c)  {	  switch(in.readEscape(),    c)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
41	[BUG]  [BUGGY]  switch(c,  commmentStart.charAt(0))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  commmentStart.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  commmentStart.charAt(0))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
42	[BUG]  [BUGGY]  switch(c,  escapeChar.charAt(1))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escapeChar.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escapeChar.charAt(1))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
43	[BUG]  [BUGGY]  switch(c,  DISABLED.charAt(0))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DISABLED.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DISABLED.charAt(0))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
44	[BUG]  [BUGGY]  switch(c,  escapeChar.charAt(2))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escapeChar.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escapeChar.charAt(2))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
45	[BUG]  [BUGGY]  switch(c,  escapeChar.charAt(3))  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escapeChar.charAt(3))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escapeChar.charAt(3))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
46	[BUG]  [BUGGY]  Switch(c,  escapeChar.charAt(0))  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeChar.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeChar.charAt(0))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ';'  expected	166	None	replace
47	[BUG]  [BUGGY]  final  int  c  =  in.readInt();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  orphaned  case	68	None	replace
48	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  int  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  int  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	68	None	replace
49	[BUG]  [BUGGY]  int  c  =  in.readInt();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  orphaned  case	68	None	replace
50	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  Integer  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	68	None	replace
51	[BUG]  [BUGGY]  Integer  c  =  in.readInt();  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Integer  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  orphaned  case	68	None	replace
52	[BUG]  [BUGGY]  while(c  &  0xffff)  {  final  int  c  =  in.readInt();  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  &  0xffff)  {  final  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  &  0xffff)  {  final  int  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  orphaned  case	68	None	replace
53	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
54	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
55	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  c  +  DISABLED)  {  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  c  +  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    c  +  DISABLED)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
56	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
57	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
58	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    final  int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
59	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
60	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
61	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffF)  {	  switch(c    &    0xffFF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	98	4	replace
62	[BUG]  [BUGGY]  switch(c  &  0xffF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffF)  {	  switch(c    &    0xffFF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	98	4	replace
63	[BUG]  [BUGGY]  Switch(c,  escapeEmptyLines,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeEmptyLines,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeEmptyLines,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
64	[BUG]  [BUGGY]  Switch(c,  DISABLED,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
65	[BUG]  [BUGGY]  Switch(c),  commmentStart,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  commmentStart,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  ignoreEmptyLines)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
66	[BUG]  [BUGGY]  Switch(c,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
67	[BUG]  [BUGGY]  Switch(c,  commmentStart,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  ignoreEmptyLines)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
68	[BUG]  [BUGGY]  Switch(c,  escapeSurroundingSpaces,  commmentStart)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeSurroundingSpaces,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeSurroundingSpaces,  commmentStart)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
69	[BUG]  [BUGGY]  Switch(c,  delimiter,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  delimiter,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  delimiter,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
70	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
71	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	205	None	replace
72	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
73	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	205	None	replace
74	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
75	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	205	None	replace
76	[BUG]  [BUGGY]  switch(in.read(c,  escapeChar))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeChar))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	196	None	replace
77	[BUG]  [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces,  delimiter))  {  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces,  delimiter))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeSurroundingSpaces,  delimiter))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	196	None	replace
78	[BUG]  [BUGGY]  switch(in.read(c,  commmentStart,  delimiter))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  commmentStart,  delimiter))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentStart,  delimiter))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	196	None	replace
79	[BUG]  [BUGGY]  switch(in.read(c,  escapeChar,  delimiter))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeChar,  delimiter))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeChar,  delimiter))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	196	None	replace
80	[BUG]  [BUGGY]  switch(in.read(c,  delimiter,  commmentStart))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter,  commmentStart))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	196	None	replace
81	[BUG]  [BUGGY]  switch(c.read(commmentStart,  delimiter))  {  [CE]  int  cannot  be  dereferenced  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(commmentStart,  delimiter))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(commmentStart,  delimiter))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	196	None	replace
82	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	74	None	replace
83	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	74	None	replace
84	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	74	None	replace
85	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
86	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
87	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
88	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
89	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  c  &  0xffffF)  {  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  c  &  0xffffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    c  &  0xffffF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
90	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
91	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
92	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
93	[BUG]  [BUGGY]  switch(c.charAt(in))  {  [CE]  int  cannot  be  dereferenced  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.charAt(in))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(in))  {	  switch(in.charAt(c))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	112	None	replace
94	[BUG]  [BUGGY]  switch(in.charAt(c),  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.charAt(c),  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(c),  escapeSurroundingSpaces)  {	  switch(in.charAt(c))    {    	non-compiled	[CE]  ')'  expected	112	None	replace
95	[BUG]  [BUGGY]  switch(in.charAt(c),  escapeChar)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.charAt(c),  escapeChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(c),  escapeChar)  {	  switch(in.charAt(c))    {    	non-compiled	[CE]  ')'  expected	112	None	replace
96	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
97	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
98	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
99	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
100	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
101	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
102	[BUG]  [BUGGY]  Switch(c,  COMMENT_SURroundingSpaces)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  COMMENT_SURroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  COMMENT_SURroundingSpaces)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
103	[BUG]  [BUGGY]  Switch(c,  DEPRECATED)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DEPRECATED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DEPRECATED)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
104	[BUG]  [BUGGY]  Switch(c,  COMMENT_START)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  COMMENT_START)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  COMMENT_START)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
105	[BUG]  [BUGGY]  Switch(c,  commmentStart,  DISABLED)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  DISABLED)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
106	[BUG]  [BUGGY]  Switch(c,  DETERMINISTIC_SIZE)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DETERMINISTIC_SIZE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DETERMINISTIC_SIZE)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
107	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	77	None	replace
108	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	77	None	replace
109	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  ignoreEmptyLines)  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  ignoreEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
110	[BUG]  [BUGGY]  switch(in.read(c),  escapeEmptyLines,  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeEmptyLines,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeEmptyLines,  escapeSurroundingSpaces)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
111	[BUG]  [BUGGY]  switch(escapeSurroundingSpaces.read(c),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escapeSurroundingSpaces.read(c),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeSurroundingSpaces.read(c),  commmentStart,  escapeSurroundingSpaces)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
112	[BUG]  [BUGGY]  switch(in.read(c),  delimiter,  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  delimiter,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  delimiter,  escapeSurroundingSpaces)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
113	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  escapeSurroundingSpaces,  ignoreEmptyLines)  {  [CE]  ')'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  escapeSurroundingSpaces,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  escapeSurroundingSpaces,  ignoreEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
114	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	79	None	replace
115	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  't')  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	79	None	replace
116	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
117	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	31	None	replace
118	[BUG]  [BUGGY]  switch(c  &  0xff)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
119	[BUG]  [BUGGY]  switch(c  &  0xff)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
120	[BUG]  [BUGGY]  switch(c  &  0xff)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
121	[BUG]  [BUGGY]  switch(c  &  0xff)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
122	[BUG]  [BUGGY]  switch(c  &  0xff)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
123	[BUG]  [BUGGY]  switch(c  &  0xff)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
124	[BUG]  [BUGGY]  switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xff)  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    Record  do  not  match  expected  result(c  &  0xff)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
125	[BUG]  [BUGGY]  switch(c  &  0xff)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
126	[BUG]  [BUGGY]  final  int  c  =  in.read();  [CE]  orphaned  case  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
127	[BUG]  [BUGGY]  int  c  =  in.read();  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
128	[BUG]  [BUGGY]  while(in.read()  >  0)  {  final  int  c  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  final  int  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
129	[BUG]  [BUGGY]  switch(in.readLine())  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readLine())  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readLine())  {  int  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	187	None	replace
130	[BUG]  [BUGGY]  while(in.read()  >  0)  {  int  c  =  in.read();  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  int  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
131	[BUG]  [BUGGY]  while(in.read()  <  =  0)  {  final  int  c  =  in.read();  [CE]  illegal  start  of  expression  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  <  =  0)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  <  =  0)  {  final  int  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	187	None	replace
132	[BUG]  [BUGGY]  Switch(c,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeEmptyLines)  {	  Switch(c,    commmentStart)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
133	[BUG]  [BUGGY]  Switch(c,  delimiter)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  delimiter)  {	  Switch(c,    commmentStart)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
134	[BUG]  [BUGGY]  Switch(c,  escape)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escape)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escape)  {	  Switch(c,    commmentStart)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
135	[BUG]  [BUGGY]  Switch(c,  len)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  len)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  len)  {	  Switch(c,    commmentStart)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
136	[BUG]  [BUGGY]  switch(c  ==  DISABLED,  commmentStart)  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  ==  DISABLED,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  DISABLED,  commmentStart)  {	  switch(c    ==    DISABLED)    {    	non-compiled	[CE]  ')'  expected	130	None	replace
137	[BUG]  [BUGGY]  switch(c!=  DISABLED)  {  [CE]  incompatible  types  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c!=  DISABLED)  {	  switch(c    ==    DISABLED)    {    	non-compiled	[CE]  incompatible  types	130	None	replace
138	[BUG]  [BUGGY]  switch(c  ==  DISABLED  ||  c  ==  commmentStart)  {  [CE]  incompatible  types  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  ==  DISABLED  ||  c  ==  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  DISABLED  ||  c  ==  commmentStart)  {	  switch(c    ==    DISABLED)    {    	non-compiled	[CE]  incompatible  types	130	None	replace
139	[BUG]  [BUGGY]  switch(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  incompatible  types  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  DISABLED  ||  c  ==  DISABLED)  {	  switch(c    ==    DISABLED)    {    	non-compiled	[CE]  incompatible  types	130	None	replace
140	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
141	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	39	None	replace
142	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	39	None	replace
143	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    >=    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	162	None	replace
144	[BUG]  [BUGGY]  switch(c  |  DISABLED)  {  c  |  DISABLED)  {  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  |  DISABLED)  {  c  |  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  |  DISABLED)  {  c  |  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  case,  default,  or  '}'  expected	47	None	replace
145	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  DISABLED:  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c)  {  case  DISABLED:  return  DISABLED;	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	47	3	replace
146	[BUG]  [BUGGY]  switch(c)  {  case  DISABLED:  return  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  DISABLED:  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  DISABLED:  return  DISABLED;	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	47	3	replace
147	[BUG]  [BUGGY]  switch(c  &  DISABLED)  ==  DISABLED)  {  [CE]  '{'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  ==  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  '{'  expected	47	None	replace
148	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  c  >  DISABLED)  {  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  c  >  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  case,  default,  or  '}'  expected	47	None	replace
149	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  DISABLED)  {  case  ',':	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	compilable	  [FE]  (entry  2)  	47	6	replace
150	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  [FE]  (entry  2)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  ',':	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	compilable	  [FE]  (entry  2)  	47	6	replace
151	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  DISABLED:  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c)  {  case  DISABLED:	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	47	3	replace
152	[BUG]  [BUGGY]  switch(c)  {  case  DISABLED:  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  DISABLED:  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  DISABLED:	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	47	3	replace
153	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	44	None	replace
154	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	44	None	replace
155	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
156	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c!=  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c!=  DISABLED)  {	  switch(c    &    DISABLED    ||    c    >=    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	65	None	replace
157	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  <  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  c  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  <  DISABLED)  {	  switch(c    &    DISABLED    ||    c    >=    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	65	None	replace
158	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  >>  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  c  >>  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  >>  DISABLED)  {	  switch(c    &    DISABLED    ||    c    >=    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	65	None	replace
159	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
160	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >=  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >=  'r'  ||  c!=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	76	None	replace
161	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	76	None	replace
162	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	76	None	replace
163	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	76	None	replace
164	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
165	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
166	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!='}  ')  {  return  r;  }  [CE]  unclosed  character  literal  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!='}  ')  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!='}  ')  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  unclosed  character  literal	206	None	replace
167	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  0)  {  return  r;  }  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  0)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  0)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
168	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
169	[BUG]  [BUGGY]  int  r  =  in.read();  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  r  =  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	153	None	replace
170	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  int  r  =  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
171	[BUG]  [BUGGY]  if(c  <  0xffff)  {  switch(c  &  0xffff)  {  r  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  0xffff)  {  switch(c  &  0xffff)  {  r  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  0xffff)  {  switch(c  &  0xffff)  {  r  =  in.read();  }	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
172	[BUG]  [BUGGY]  if(c  <  0xffff)  {  switch(c  &  0xffff)  {  return  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  0xffff)  {  switch(c  &  0xffff)  {  return  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  0xffff)  {  switch(c  &  0xffff)  {  return  in.read();  }	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
173	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  final  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffff)  {  final  int  r  =  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
174	[BUG]  [BUGGY]  if(c  <  0xfff)  {  switch(c  &  0xffff)  {  r  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  0xfff)  {  switch(c  &  0xffff)  {  r  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  0xfff)  {  switch(c  &  0xffff)  {  r  =  in.read();  }	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
175	[BUG]  [BUGGY]  switch(c  <  <  1)  {  [CE]  illegal  start  of  type  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  <  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  <  1)  {	  switch(c    &    DISABLED)    {    switch(c    &    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  type	208	None	replace
176	[BUG]  [BUGGY]  switch(c  <  <  DISABLED)  {  [CE]  >  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  <  DISABLED)  {	  switch(c    &    DISABLED)    {    switch(c    &    DISABLED)    {    	non-compiled	[CE]  >  expected	208	None	replace
177	[BUG]  [BUGGY]  switch(c  >  DISABLED)  {  [CE]  incompatible  types  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >  DISABLED)  {	  switch(c    &    DISABLED)    {    switch(c    &    DISABLED)    {    	non-compiled	[CE]  incompatible  types	208	None	replace
178	[BUG]  [BUGGY]  switch(c.charAt(char))  {  [CE]  '.class'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.charAt(char))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(char))  {	  switch(char.charAt(c))    {    	non-compiled	[CE]  '.class'  expected	115	None	replace
179	[BUG]  [BUGGY]  char  c  =  in.read(c);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.read(c);	  switch(char.charAt(c))    {    	non-compiled	[CE]  orphaned  case	115	None	replace
180	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'z')    {    	non-compiled	[CE]  orphaned  case	201	None	replace
181	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'z')    {    	non-compiled	[CE]  orphaned  case	201	None	replace
182	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'z')    {    	non-compiled	[CE]  orphaned  case	201	None	replace
183	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'z')    {    	non-compiled	[CE]  orphaned  case	201	None	replace
184	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'z')    {    	non-compiled	[CE]  orphaned  case	201	None	replace
185	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a'  ||  c  ==  'z')  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a'  ||  c  ==  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a'  ||  c  ==  'z')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'z')    {    	non-compiled	[CE]  orphaned  case	201	None	replace
186	[BUG]  [BUGGY]  Switch(c,  in)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
187	[BUG]  [BUGGY]  Switch(in,  c,  commmentStart)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c,  commmentStart)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
188	[BUG]  [BUGGY]  Switch(in,  c),  commmentStart)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c),  commmentStart)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
189	[BUG]  [BUGGY]  Switch(in,  c,  DEPRECATED)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c,  DEPRECATED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c,  DEPRECATED)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
190	[BUG]  [BUGGY]  Switch(in,  c,  false)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c,  false)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c,  false)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
191	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    ==    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
192	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    ==    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	78	None	replace
193	[BUG]  [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces,  commmentStart))  {  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeSurroundingSpaces,  commmentStart))  {	  switch(in.read(c,    commmentStart))    {    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	99	None	replace
194	[BUG]  [BUGGY]  switch(in.read(c,  DISABLED,  commmentStart))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  DISABLED,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  DISABLED,  commmentStart))  {	  switch(in.read(c,    commmentStart))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	99	None	replace
195	[BUG]  [BUGGY]  switch(in.read(c,  escapeEmptyLines))  {  [CE]  cannot  find  symbol  escapeEmptyLines  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeEmptyLines))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeEmptyLines))  {	  switch(in.read(c,    commmentStart))    {    	non-compiled	[CE]  cannot  find  symbol  escapeEmptyLines	99	None	replace
196	[BUG]  [BUGGY]  switch(in.read(c,  escapeStart))  {  [CE]  cannot  find  symbol  escapeStart  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeStart))  {	  switch(in.read(c,    commmentStart))    {    	non-compiled	[CE]  cannot  find  symbol  escapeStart	99	None	replace
197	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {	  if(c    >=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	41	None	replace
198	[BUG]  [BUGGY]  switch(in.read(c,  escape,  commmentStart))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape,  commmentStart))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	169	None	replace
199	[BUG]  [BUGGY]  switch(in.read(c,  commmentStart,  escape))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  commmentStart,  escape))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentStart,  escape))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	169	None	replace
200	[BUG]  [BUGGY]  switch(in.read(c,  escape,  quoteChar))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape,  quoteChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape,  quoteChar))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	169	None	replace
201	[BUG]  [BUGGY]  switch(escape.read(c,  c))  {  [CE]  char  cannot  be  dereferenced  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escape.read(c,  c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escape.read(c,  c))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	169	None	replace
202	[BUG]  [BUGGY]  switch(c.read(escape,  commmentStart))  {  [CE]  int  cannot  be  dereferenced  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(escape,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(escape,  commmentStart))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	169	None	replace
203	[BUG]  [BUGGY]  switch(in.read(c,  escape,  commmentChar))  {  [CE]  cannot  find  symbol  commmentChar  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape,  commmentChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape,  commmentChar))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  cannot  find  symbol  commmentChar	169	None	replace
204	[BUG]  [BUGGY]  switch(in.read(c,  escape),  commmentStart)  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape),  commmentStart)  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  ')'  expected	169	None	replace
205	[BUG]  [BUGGY]  Switch(c.read(),  in.read())  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read(),  in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read(),  in.read())  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
206	[BUG]  [BUGGY]  Switch(in.read(),  in.read(),  c)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  in.read(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read(),  c)  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
207	[BUG]  [BUGGY]  Switch(in.read(),  in.read()),  c)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  in.read()),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read()),  c)  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
208	[BUG]  [BUGGY]  Switch(in.read(),  in.read()  +  1)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  in.read()  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read()  +  1)  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
209	[BUG]  [BUGGY]  Switch(c,  DISABLED,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  escapeEmptyLines)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
210	[BUG]  [BUGGY]  Switch(c,  escapeEmptyLines,  commmentStart)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeEmptyLines,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeEmptyLines,  commmentStart)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
211	[BUG]  [BUGGY]  Switch(c,  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
212	[BUG]  [BUGGY]  Switch(c),  escapeEmptyLines,  commmentStart)  {  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  escapeEmptyLines,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  escapeEmptyLines,  commmentStart)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
213	[BUG]  [BUGGY]  Switch(c,  in.readEscape())  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.readEscape())  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ';'  expected	150	None	replace
214	[BUG]  [BUGGY]  switch(in,  in.readLine())  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  in.readLine())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  in.readLine())  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	150	None	replace
215	[BUG]  [BUGGY]  switch(in,  c)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  c)  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	150	None	replace
216	[BUG]  [BUGGY]  switch(in,  in.read())  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  in.read())  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	150	None	replace
217	[BUG]  [BUGGY]  switch(c,  in.read())  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.read())  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	150	None	replace
218	[BUG]  [BUGGY]  switch(c,  descriptionChar.charAt(1))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  descriptionChar.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  descriptionChar.charAt(1))  {	  switch(c,    descriptionChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	4	None	replace
219	[BUG]  [BUGGY]  switch(c,  descriptionChar.charAt(c))  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  descriptionChar.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  descriptionChar.charAt(c))  {	  switch(c,    descriptionChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	4	None	replace
220	[BUG]  [BUGGY]  switch(c,  descriptionChar.charAt(2))  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  descriptionChar.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  descriptionChar.charAt(2))  {	  switch(c,    descriptionChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	4	None	replace
221	[BUG]  [BUGGY]  Switch(c,  descriptionChar.charAt(0))  {  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  descriptionChar.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  descriptionChar.charAt(0))  {	  switch(c,    descriptionChar.charAt(0))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
222	[BUG]  [BUGGY]  int  delimiter  =  c.read();  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  c.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  c.read();	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
223	[BUG]  [BUGGY]  char  delimiter  =  in.read();  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  delimiter  =  in.read();	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
224	[BUG]  [BUGGY]  int  delimiter  =  in.read(c);  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read(c);	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
225	[BUG]  [BUGGY]  int  delimiter  =  in.read()  +  c;  [CE]  orphaned  case  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  in.read()  +  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read()  +  c;	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
226	[BUG]  [BUGGY]  int  delimiter  =  in.read()  -  c;  [CE]  orphaned  case  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  in.read()  -  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read()  -  c;	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
227	[BUG]  [BUGGY]  switch(c,  commmentStart)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  commmentStart)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
228	[BUG]  [BUGGY]  switch(c,  DEPRECATED)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DEPRECATED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DEPRECATED)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
229	[BUG]  [BUGGY]  switch(c,  delimiter)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
230	[BUG]  [BUGGY]  switch(c,  COMMENT_START)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  COMMENT_START)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  COMMENT_START)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
231	[BUG]  [BUGGY]  switch(c,  DECLUSIVE)  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DECLUSIVE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DECLUSIVE)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
232	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xfffffF)  {	  switch(c    &    0xffffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	93	4	replace
233	[BUG]  [BUGGY]  switch(c  &  0xfffffF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffffF)  {	  switch(c    &    0xffffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	93	4	replace
234	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffffff)  {	  switch(c    &    0xffffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	93	4	replace
235	[BUG]  [BUGGY]  switch(c  &  0xffffff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffffff)  {	  switch(c    &    0xffffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	93	4	replace
236	[BUG]  [BUGGY]  switch(c  &  0xfffffL)  {  [CE]  possible  loss  of  precision  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffffL)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffffL)  {	  switch(c    &    0xffffF)    {    	non-compiled	[CE]  possible  loss  of  precision	93	None	replace
237	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xfffffFF)  {	  switch(c    &    0xffffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	93	4	replace
238	[BUG]  [BUGGY]  switch(c  &  0xfffffFF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffffFF)  {	  switch(c    &    0xffffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	93	4	replace
239	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
240	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
241	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
242	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  >=  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
243	[BUG]  [BUGGY]  if(c  >=  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
244	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
245	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  commmentStart)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  commmentStart)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
246	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  CR)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  CR)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  CR)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
247	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
248	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
249	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START)  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  COMMENT_START)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
250	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	181	None	replace
251	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  commmentStart)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  commmentStart)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	181	None	replace
252	[BUG]  [BUGGY]  switch(in.read()  &  c  ==  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  ==  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	132	None	replace
253	[BUG]  [BUGGY]  switch(in.read()  &  c!=  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c!=  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	132	None	replace
254	[BUG]  [BUGGY]  switch(c.read()  &  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &  c  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &  c  <  =  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
255	[BUG]  [BUGGY]  switch(in.read()  &  c  >=  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  >=  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	132	None	replace
256	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >>  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(in.read()  &  c  >>  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	compilable	  [FE]  (entry  2)  	132	12	replace
257	[BUG]  [BUGGY]  switch(in.read()  &  c  >>  DISABLED)  {  [FE]  (entry  2)  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >>  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  >>  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	compilable	  [FE]  (entry  2)  	132	12	replace
258	[BUG]  [BUGGY]  switch(in.read()  &  c  <  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  <  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	132	None	replace
259	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  int  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  int  c  =  in.readInt();	  switch(c    &    DISABLED)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	48	None	replace
260	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  Integer  c  =  in.readInt();	  switch(c    &    DISABLED)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	48	None	replace
261	[BUG]  [BUGGY]  while(c  <  DISABLED)  {  final  int  c  =  in.readInt();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  DISABLED)  {  final  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  DISABLED)  {  final  int  c  =  in.readInt();	  switch(c    &    DISABLED)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  orphaned  case	48	None	replace
262	[BUG]  [BUGGY]  Switch(c.read(),  in)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read(),  in)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read(),  in)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
263	[BUG]  [BUGGY]  Switch(in.read(),  c),  commmentStart)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c),  commmentStart)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
264	[BUG]  [BUGGY]  Switch(in.read(),  c,  commmentStart)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c,  commmentStart)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
265	[BUG]  [BUGGY]  Switch(in,  in.read(),  c)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  in.read(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  in.read(),  c)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
266	[BUG]  [BUGGY]  Switch(in.read(),  c,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c,  escapeSurroundingSpaces)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
267	[BUG]  [BUGGY]  Switch(in.read(),  c,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c,  escapeEmptyLines)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
268	[BUG]  [BUGGY]  Char  c  =  in.read();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Char  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	49	None	replace
269	[BUG]  [BUGGY]  final  char  c  =  in.read();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	49	None	replace
270	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  char  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	49	None	replace
271	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  String  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  String  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  String  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	49	None	replace
272	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
273	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
274	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
275	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
276	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  c  &  0xffffFF)  {  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  c  &  0xffffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    c  &  0xffffFF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
277	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
278	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
279	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
280	[BUG]  [BUGGY]  switch(c)  {  Context.readEscape(in,  c);  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	52	None	replace
281	[BUG]  [BUGGY]  Context.readEscape(in,  c);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  orphaned  case	52	None	replace
282	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  commmentStart);  [CE]  case,  default,  or  '}'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  commmentStart);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	52	None	replace
283	[BUG]  [BUGGY]  int  switch(c  &  DISABLED)  {  Context.readEscape(in,  c);  [CE]  not  a  statement  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  switch(c  &  DISABLED)  {  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  switch(c  &  DISABLED)  {  Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  not  a  statement	52	None	replace
284	[BUG]  [BUGGY]  Switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  commmentStart);  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  commmentStart);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  ';'  expected	52	None	replace
285	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  Context.readEscape(in,  c);  [CE]  case,  default,  or  '}'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	52	None	replace
286	[BUG]  [BUGGY]  final  String  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  String  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  String  commmentStart  =  in.read();	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
287	[BUG]  [BUGGY]  final  char  commmentStart  =  in.readFully();  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.readFully();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.readFully();	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
288	[BUG]  [BUGGY]  final  char  commmentStart  =  in.readLine();  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.readLine();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.readLine();	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
289	[BUG]  [BUGGY]  final  char  commmentStart  =  in.readFully(c);  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.readFully(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.readFully(c);	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
290	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
291	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
292	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
293	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
294	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
295	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
296	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(c  -  1))  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter.charAt(c  -  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(c  -  1))  {	  switch(c,    delimiter.charAt(c))    {    	non-compiled	[CE]  ')'  expected	197	None	replace
297	[BUG]  [BUGGY]  switch(c,  commmentStart.charAt(c))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  commmentStart.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  commmentStart.charAt(c))  {	  switch(c,    delimiter.charAt(c))    {    	non-compiled	[CE]  ')'  expected	197	None	replace
298	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(c  +  1))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter.charAt(c  +  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(c  +  1))  {	  switch(c,    delimiter.charAt(c))    {    	non-compiled	[CE]  ')'  expected	197	None	replace
299	[BUG]  [BUGGY]  switch(c,  escapeChar.charAt(c))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escapeChar.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escapeChar.charAt(c))  {	  switch(c,    delimiter.charAt(c))    {    	non-compiled	[CE]  ')'  expected	197	None	replace
300	[BUG]  [BUGGY]  switch(c,  DISABLED.charAt(c))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DISABLED.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DISABLED.charAt(c))  {	  switch(c,    delimiter.charAt(c))    {    	non-compiled	[CE]  ')'  expected	197	None	replace
301	[BUG]  [BUGGY]  switch(in.read()  &  c  ==  '0')  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  ==  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  ==  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	134	None	replace
302	[BUG]  [BUGGY]  switch(c.read()  &  c  <  =  '0')  {  [CE]  illegal  start  of  expression  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &  c  <  =  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &  c  <  =  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
303	[BUG]  [BUGGY]  switch(in.read()  &  c!=  '0')  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c!=  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c!=  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	134	None	replace
304	[BUG]  [BUGGY]  switch(in.read()  &  c  >=  '0')  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >=  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  >=  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	134	None	replace
305	[BUG]  [BUGGY]  switch(in.read()  &  c  <  =  '0'  ||  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  <  =  '0'  ||  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  <  =  '0'  ||  c  <  =  '9')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
306	[BUG]  [BUGGY]  switch(c  &  c  <  =  '0')  {  [CE]  illegal  start  of  expression  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  c  <  =  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  c  <  =  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
307	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	83	None	replace
308	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	83	None	replace
309	[BUG]  [BUGGY]  switch(in.read(c),  escape)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escape)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escape)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
310	[BUG]  [BUGGY]  switch(c.read(),  DISABLED)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  DISABLED)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
311	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  DISABLED)  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  DISABLED)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
312	[BUG]  [BUGGY]  switch(in.read(c),  commmentEnd)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentEnd)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentEnd)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
313	[BUG]  [BUGGY]  switch(in.read(c),  DETERMINISTIC_SURroundingSpaces)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  DETERMINISTIC_SURroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  DETERMINISTIC_SURroundingSpaces)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
314	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  ',':  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffff)  {  case  ',':	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	compilable	  [FE]  (entry  2)  	209	6	replace
315	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  ',':  [FE]  (entry  2)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  ',':  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  ',':	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	compilable	  [FE]  (entry  2)  	209	6	replace
316	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'r':  return  LF;  [CE]  duplicate  case  label  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'r':  return  LF;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'r':  return  LF;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  duplicate  case  label	209	None	replace
317	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  '.':  c  &  0xfffff)  {  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '.':  c  &  0xfffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  '.':  c  &  0xfffff)  {	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  not  a  statement	209	None	replace
318	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'r':  return  CR;  [CE]  duplicate  case  label  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'r':  return  CR;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  duplicate  case  label	209	None	replace
319	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'r':  return  FF;  [CE]  duplicate  case  label  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'r':  return  FF;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'r':  return  FF;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  duplicate  case  label	209	None	replace
320	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case's':  c  &  0xfffff)  {  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case's':  c  &  0xfffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case's':  c  &  0xfffff)  {	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  not  a  statement	209	None	replace
321	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'n':  return  LF;  [CE]  duplicate  case  label  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'n':  return  LF;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'n':  return  LF;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  duplicate  case  label	209	None	replace
322	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  [Delete]  DISABLED)  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  c  [Delete]  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  [Delete]  DISABLED)  {	  switch(c    &    DISABLED    ||    c    <    =    DISABLED)    {    	non-compiled	[CE]  ')'  expected	63	None	replace
323	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	19	None	replace
324	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r')  {	  if(c    <    =    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
325	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >=  'r')  {	  if(c    <    =    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
326	[BUG]  [BUGGY]  final  Records  do  not  match  expected  result  ()  [CE]  <identifier>  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  <identifier>  expected	72	None	replace
327	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  case,  default,  or  '}'  expected	72	None	replace
328	[BUG]  [BUGGY]  Switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  ';'  expected	72	None	replace
329	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  case,  default,  or  '}'  expected	72	None	replace
330	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'r':  final  Records  do  not  match  expected  result  ()  [CE]  <identifier>  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'r':  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'r':  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  <identifier>  expected	72	None	replace
331	[BUG]  [BUGGY]  int  switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()  [CE]  not  a  statement  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  switch(c  &  0xffff)  {  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  not  a  statement	72	None	replace
332	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
333	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
334	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
335	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
336	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
337	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
338	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    Record  do  not  match  expected  result(c  &  0xfff)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
339	[BUG]  [BUGGY]  final  int  delimiter  =  in.read();  break;  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read();  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
340	[BUG]  [BUGGY]  char  delimiter  =  in.read();  break;  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  delimiter  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  delimiter  =  in.read();  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
341	[BUG]  [BUGGY]  int  delimiter  =  c.read();  break;  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  c.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  c.read();  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
342	[BUG]  [BUGGY]  int  delimiter  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  in.read(c);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read(c);  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
343	[BUG]  [BUGGY]  long  delimiter  =  in.read();  break;  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  long  delimiter  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	long  delimiter  =  in.read();  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
344	[BUG]  [BUGGY]  delimiter  =  in.read();  break;  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  delimiter  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	delimiter  =  in.read();  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
345	[BUG]  [BUGGY]  switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff)  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
346	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xffff)  [CE]  case,  default,  or  '}'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xffff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xffff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
347	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  ';'  expected	73	None	replace
348	[BUG]  [BUGGY]  Switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff)  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  ';'  expected	73	None	replace
349	[BUG]  [BUGGY]  switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff),  case,  default,  or'}  '  [CE]  case,  default,  or  '}'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff),  case,  default,  or'}  '  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Record  do  not  match  expected  result(c  &  0xffff),  case,  default,  or'}  '	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
350	[BUG]  [BUGGY]  if(c!=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
351	[BUG]  [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
352	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
353	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
354	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
355	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c!=  't')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c!=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c!=  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
356	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    DISABLED)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
357	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    DISABLED)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
358	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    DISABLED)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
359	[BUG]  [BUGGY]  switch(commmentStart.charAt(c))  {  [CE]  char  cannot  be  dereferenced  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(commmentStart.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(commmentStart.charAt(c))  {	  switch(escapeChar.charAt(c))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	172	None	replace
360	[BUG]  [BUGGY]  switch(len.charAt(c))  {  [CE]  cannot  find  symbol  len  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(len.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(len.charAt(c))  {	  switch(escapeChar.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  len	172	None	replace
361	[BUG]  [BUGGY]  switch(v.charAt(c))  {  [CE]  cannot  find  symbol  v  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(v.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(v.charAt(c))  {	  switch(escapeChar.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  v	172	None	replace
362	[BUG]  [BUGGY]  switch(c,  in.charAt(c  -  1))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.charAt(c  -  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.charAt(c  -  1))  {	  switch(c,    in.charAt(c))    {    	non-compiled	[CE]  ')'  expected	114	None	replace
363	[BUG]  [BUGGY]  switch(c,  in.charAt(c  +  1))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.charAt(c  +  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.charAt(c  +  1))  {	  switch(c,    in.charAt(c))    {    	non-compiled	[CE]  ')'  expected	114	None	replace
364	[BUG]  [BUGGY]  char  c  =  in.charAt(c);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.charAt(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.charAt(c);	  switch(c,    in.charAt(c))    {    	non-compiled	[CE]  orphaned  case	114	None	replace
365	[BUG]  [BUGGY]  toggle(c)  {  [CE]  ';'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  toggle(c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	toggle(c)  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
366	[BUG]  [BUGGY]  switch(escapeChar.charAt(0))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escapeChar.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeChar.charAt(0))  {	  switch(in.charAt(0))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	6	None	replace
367	[BUG]  [BUGGY]  switch(char.charAt(0))  {  [CE]  class  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(char.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(char.charAt(0))  {	  switch(in.charAt(0))    {    	non-compiled	[CE]  class  expected	6	None	replace
368	[BUG]  [BUGGY]  Switch(c.charAt(0))  {  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.charAt(0))  {	  switch(in.charAt(0))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
369	[BUG]  [BUGGY]  switch(c.read(),  commmentStart)  {  [CE]  ')'  expected  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  commmentStart)  {	  switch(c.read())    {    	non-compiled	[CE]  ')'  expected	53	None	replace
370	[BUG]  [BUGGY]  switch(c.read(),  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  escapeSurroundingSpaces)  {	  switch(c.read())    {    	non-compiled	[CE]  ')'  expected	53	None	replace
371	[BUG]  [BUGGY]  switch(c.read(),  delimiter)  {  [CE]  ')'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  delimiter)  {	  switch(c.read())    {    	non-compiled	[CE]  ')'  expected	53	None	replace
372	[BUG]  [BUGGY]  switch(c.read(),  in.read())  {  [CE]  ')'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  in.read())  {	  switch(c.read())    {    	non-compiled	[CE]  ')'  expected	53	None	replace
373	[BUG]  [BUGGY]  if(c  ==  'n')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
374	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
375	[BUG]  [BUGGY]  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
376	[BUG]  [BUGGY]  switch(c)  {  case  'n':  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  cannot  find  symbol  R  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  'n':  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  'n':  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  cannot  find  symbol  R	149	None	replace
377	[BUG]  [BUGGY]  if(c  ==  'n')  {  final  int  r  =  in.read();  if(r  >=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n')  {  final  int  r  =  in.read();  if(r  >=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n')  {  final  int  r  =  in.read();  if(r  >=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
378	[BUG]  [BUGGY]  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r  >=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r  >=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.')  {  final  int  r  =  in.read();  if(r  >=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
379	[BUG]  [BUGGY]  int  len  =  in.read();  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	152	None	replace
380	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	152	None	replace
381	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  final  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  final  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffff)  {  final  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	152	None	replace
382	[BUG]  [BUGGY]  char  len  =  in.read();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	152	None	replace
383	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	152	None	replace
384	[BUG]  [BUGGY]  Switch(c),  commmentStart,  ignoreEmptyLines);  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  commmentStart,  ignoreEmptyLines);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  ignoreEmptyLines);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
385	[BUG]  [BUGGY]  Switch(c,  escapeEmptyLines,  commmentStart,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeEmptyLines,  commmentStart,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeEmptyLines,  commmentStart,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
386	[BUG]  [BUGGY]  Switch(c,  DISABLED,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
387	[BUG]  [BUGGY]  Switch(c,  escapeEmptyLines,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeEmptyLines,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeEmptyLines,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
388	[BUG]  [BUGGY]  Switch(c),  escapeEmptyLines,  escapeSurroundingSpaces);  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  escapeEmptyLines,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  escapeEmptyLines,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
389	[BUG]  [BUGGY]  Switch(c,  escapeSurroundingSpaces,  commmentStart);  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeSurroundingSpaces,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeSurroundingSpaces,  commmentStart);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
390	[BUG]  [BUGGY]  Switch(c,  commmentStart,  ignoreEmptyLines);  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  ignoreEmptyLines);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  ignoreEmptyLines);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
391	[BUG]  [BUGGY]  switch(c)  {  case  '.':  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  cannot  find  symbol  R  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  '.':  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  cannot  find  symbol  R	10	None	replace
392	[BUG]  [BUGGY]  while(c!=  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  '.')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	10	None	replace
393	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r  ==  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r  ==  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r  ==  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	10	None	replace
394	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c!=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	42	None	replace
395	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	15	None	replace
396	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >=  'r')  {	  if(c!=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	15	None	replace
397	[BUG]  [BUGGY]  switch(in.read(c),  escape,  delimiter)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escape,  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escape,  delimiter)  {	  switch(in.read(c),    delimiter)    {    	non-compiled	[CE]  ')'  expected	194	None	replace
398	[BUG]  [BUGGY]  switch(c.read(commmentStart),  delimiter)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(commmentStart),  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(commmentStart),  delimiter)  {	  switch(in.read(c),    delimiter)    {    	non-compiled	[CE]  ')'  expected	194	None	replace
399	[BUG]  [BUGGY]  toggle(c.read())  {  [CE]  ';'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  toggle(c.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	toggle(c.read())  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  ';'  expected	9	None	replace
400	[BUG]  [BUGGY]  switch(c.in())  {  [CE]  int  cannot  be  dereferenced  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.in())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.in())  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
401	[BUG]  [BUGGY]  switch(c.get())  {  [CE]  int  cannot  be  dereferenced  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.get())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.get())  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
402	[BUG]  [BUGGY]  switch(in,  c.readLine())  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  c.readLine())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  c.readLine())  {	  switch(in,    c.readEscape())    {    	non-compiled	[CE]  ')'  expected	108	None	replace
403	[BUG]  [BUGGY]  switch(in,  c.read())  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  c.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  c.read())  {	  switch(in,    c.readEscape())    {    	non-compiled	[CE]  ')'  expected	108	None	replace
404	[BUG]  [BUGGY]  switch(c,  description.charAt(0))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  description.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  description.charAt(0))  {	  switch(c,    quoteChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	178	None	replace
405	[BUG]  [BUGGY]  switch(c)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  len  =  in.read();	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	147	None	replace
406	[BUG]  [BUGGY]  switch(c.read())  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  int  len  =  in.read();	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	147	None	replace
407	[BUG]  [BUGGY]  while(in.read()  >  0)  {  len  =  in.read();  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  len  =  in.read();	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	147	None	replace
408	[BUG]  [BUGGY]  while(c!=  in.read())  {  len  =  in.read();  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  in.read())  {  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  in.read())  {  len  =  in.read();	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	147	None	replace
409	[BUG]  [BUGGY]  Switch(c,  DISABLED,  commmentStart);  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  commmentStart);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  orphaned  case	214	None	replace
410	[BUG]  [BUGGY]  Switch(c),  DISABLED,  commmentStart);  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  commmentStart);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
411	[BUG]  [BUGGY]  Switch(c,  commmentStart,  DISABLED);  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  DISABLED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  DISABLED);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  orphaned  case	214	None	replace
412	[BUG]  [BUGGY]  Switch(c),  DISABLED,  COMMENT_SURroundingSpaces);  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  COMMENT_SURroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  COMMENT_SURroundingSpaces);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
413	[BUG]  [BUGGY]  Switch(c),  DISABLED,  COMMENT);  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  COMMENT);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  COMMENT);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
414	[BUG]  [BUGGY]  Switch(c,  DISABLED,  commmentStart));  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  commmentStart));  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  commmentStart));	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
415	[BUG]  [BUGGY]  Switch(c),  DISABLED,  COMMENT_START);  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  COMMENT_START);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  COMMENT_START);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
416	[BUG]  [BUGGY]  switch(c.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	148	None	replace
417	[BUG]  [BUGGY]  while(c  <  =  in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [CE]  illegal  start  of  expression  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  =  in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  =  in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
418	[BUG]  [BUGGY]  switch(c.read())  {  case  'n':  if(c  ==  'r'  ||  c  ==  'n')  {  return  DISABLED;  }  [CE]  int  cannot  be  dereferenced  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  case  'n':  if(c  ==  'r'  ||  c  ==  'n')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  case  'n':  if(c  ==  'r'  ||  c  ==  'n')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  int  cannot  be  dereferenced	148	None	replace
419	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  orphaned  case	148	None	replace
420	[BUG]  [BUGGY]  switch(c)  {  case  'n':  return  DISABLED;  [CE]  duplicate  case  label  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  'n':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  'n':  return  DISABLED;	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  duplicate  case  label	148	None	replace
421	[BUG]  [BUGGY]  switch(c.read())  {  if(c  ==  'n'  ||  c!=  'r')  {  return  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]                          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  if(c  ==  'n'  ||  c!=  'r')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  if(c  ==  'n'  ||  c!=  'r')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	148	None	replace
422	[BUG]  [BUGGY]  Switch(c.read(),  commmentStart)  {  [CE]  ';'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read(),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read(),  commmentStart)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
423	[BUG]  [BUGGY]  Switch(c.read()  -  1)  {  [CE]  ';'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  -  1)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
424	[BUG]  [BUGGY]  Switch(c.read()  &  0xfff)  {  [CE]  ';'  expected  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &  0xfff)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
425	[BUG]  [BUGGY]  Switch(c.read()),  commmentStart)  {  [CE]  ';'  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()),  commmentStart)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
426	[BUG]  [BUGGY]  char  c  =  c.charAt(0);  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  c.charAt(0);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  c.charAt(0);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
427	[BUG]  [BUGGY]  char  c  =  c.charAt(c  +  1);  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  c.charAt(c  +  1);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  c.charAt(c  +  1);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
428	[BUG]  [BUGGY]  char  c  =  c.charAt(c  -  1);  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  c.charAt(c  -  1);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  c.charAt(c  -  1);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
429	[BUG]  [BUGGY]  char  c  =  c.charAt(c++);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  c.charAt(c++);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  c.charAt(c++);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
430	[BUG]  [BUGGY]  char  c  =  Character.toLowerCase(c);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  Character.toLowerCase(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  Character.toLowerCase(c);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
431	[BUG]  [BUGGY]  switch(c).readLine()  {  [CE]  '{'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).readLine()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).readLine()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
432	[BUG]  [BUGGY]  switch(c).commmentStart()  {  [CE]  '{'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).commmentStart()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).commmentStart()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
433	[BUG]  [BUGGY]  switch(c).read()  ==  [CE]  '{'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).read()  ==  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).read()  ==	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
434	[BUG]  [BUGGY]  switch(c).reset()  {  [CE]  '{'  expected  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).reset()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).reset()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
435	[BUG]  [BUGGY]  switch(c).read();  [CE]  '{'  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).read();	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
436	[BUG]  [BUGGY]  switch(in).read()  {  [CE]  '{'  expected  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in).read()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in).read()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
437	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
438	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
439	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
440	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
441	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  DISABLED)  {  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
442	[BUG]  [BUGGY]  switch(c)  {  case  'r':  return  CR;  [CE]  duplicate  case  label  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  duplicate  case  label	145	None	replace
443	[BUG]  [BUGGY]  switch(c.read())  {  case  'r':  return  CR;  [CE]  int  cannot  be  dereferenced  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  int  cannot  be  dereferenced	145	None	replace
444	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  switch(in.read())  {  case  'r':  return  CR;  }  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  switch(in.read())  {  case  'r':  return  CR;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  switch(in.read())  {  case  'r':  return  CR;  }	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  orphaned  case	145	None	replace
445	[BUG]  [BUGGY]  switch(c)  {  int  case  'r':  return  CR;  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  case,  default,  or  '}'  expected	145	None	replace
446	[BUG]  [BUGGY]  switch(c.read())  {  int  case  'r':  return  CR;  [CE]  case,  default,  or  '}'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  int  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  int  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  case,  default,  or  '}'  expected	145	None	replace
447	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  't')  {  switch(in.read())  {  case  'r':  return  CR;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  't')  {  switch(in.read())  {  case  'r':  return  CR;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  't')  {  switch(in.read())  {  case  'r':  return  CR;  }	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  orphaned  case	145	None	replace
448	[BUG]  [BUGGY]  Switch(c)  {  case  'r':  return  CR;  [CE]  ';'  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c)  {  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c)  {  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  ';'  expected	145	None	replace
449	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	125	None	replace
450	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	125	None	replace
451	[BUG]  [BUGGY]  char  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  commmentStart  =  in.read();	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	163	None	replace
452	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  int  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  int  commmentStart  =  in.read();	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	163	None	replace
453	[BUG]  [BUGGY]  while(c  <  DISABLED)  {  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  DISABLED)  {  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  DISABLED)  {  commmentStart  =  in.read();	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	163	None	replace
454	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read()  +  1;  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read()  +  1;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  int  commmentStart  =  in.read()  +  1;	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	163	None	replace
455	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  >  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
456	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >=  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >=  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >=  'n'  ||  c  >=  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
457	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
458	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  ==  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
459	[BUG]  [BUGGY]  if(c  <  =  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'r'  ||  c  >  'n'  ||  c  >=  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	179	None	replace
460	[BUG]  [BUGGY]  if(c  >=  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'r'  ||  c  >  'n'  ||  c  >=  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
461	[BUG]  [BUGGY]  switch(c,  in.readLine())  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.readLine())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.readLine())  {	  switch(c,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	110	None	replace
462	[BUG]  [BUGGY]  switch(c,  in.readChar())  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.readChar())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.readChar())  {	  switch(c,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	110	None	replace
463	[BUG]  [BUGGY]  switch(in.readLine())  {  [CE]  strings  in  switch  are  not  supported  in  -source  1.5  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readLine())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readLine())  {	  switch(c,    in.readEscape())    {    	non-compiled	[CE]  strings  in  switch  are  not  supported  in  -source  1.5	110	None	replace
464	[BUG]  [BUGGY]  switch(c  [Delete]  DISABLED)  {  [CE]  ')'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  [Delete]  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  [Delete]  DISABLED)  {	  switch(c    >>    DISABLED)    {    	non-compiled	[CE]  ')'  expected	128	None	replace
465	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
466	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
467	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
468	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
469	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
470	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
471	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  Record  do  not  match  expected  result(c  &  0xfffff)  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  Record  do  not  match  expected  result(c  &  0xfffff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    Record  do  not  match  expected  result(c  &  0xfffff)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
472	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  Record  do  not  match  expected  result(c  &  0xffffff)  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  Record  do  not  match  expected  result(c  &  0xffffff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    Record  do  not  match  expected  result(c  &  0xffffff)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
473	[BUG]  [BUGGY]  switch(c)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
474	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
475	[BUG]  [BUGGY]  switch(c  <  =  DISABLED)  {  Context.codeBug();  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
476	[BUG]  [BUGGY]  switch(c  |  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  |  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  |  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
477	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  DISABLED)  {  case  '.':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  (entry  2)  	45	5	replace
478	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  in.read();  [FE]  (entry  2)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '.':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  (entry  2)  	45	5	replace
479	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  DISABLED)  {  case  ',':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  (entry  2)  	45	6	replace
480	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  in.read();  [FE]  (entry  2)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  ',':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  (entry  2)  	45	6	replace
481	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	45	None	replace
482	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  'e':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  DISABLED)  {  case  'e':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	45	4	replace
483	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  'e':  in.read();  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  'e':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  'e':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	45	4	replace
484	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  'n':  in.read();  [CE]  duplicate  case  label  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  'n':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  'n':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  duplicate  case  label	45	None	replace
485	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '':  in.read();  [CE]  empty  character  literal  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  empty  character  literal	45	None	replace
486	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  int  in  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  int  in  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  int  in  =  in.read();	  switch(c    &    0xffff)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	66	None	replace
487	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '.':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffff)  {  case  '.':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	66	4	replace
488	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  '.':  in.read();  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '.':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  '.':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	66	4	replace
489	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  ',':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffff)  {  case  ',':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  (entry  2)  	66	6	replace
490	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  ',':  in.read();  [FE]  (entry  2)  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  ',':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  ',':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  (entry  2)  	66	6	replace
491	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'e':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffff)  {  case  'e':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	66	4	replace
492	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'e':  in.read();  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'e':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'e':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	66	4	replace
493	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '[':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffff)  {  case  '[':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	66	4	replace
494	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  '[':  in.read();  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '[':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  '[':  in.read();	  switch(c    &    0xffff)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	66	4	replace
495	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'n':  in.read();  [CE]  duplicate  case  label  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'n':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'n':  in.read();	  switch(c    &    0xffff)    {    in.read();    	non-compiled	[CE]  duplicate  case  label	66	None	replace
496	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	33	None	replace
497	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	33	None	replace
498	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  unclosed  character  literal  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  unclosed  character  literal	210	None	replace
499	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x  [CE]  unclosed  character  literal  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  unclosed  character  literal	210	None	replace
500	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  unclosed  character  literal  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  unclosed  character  literal	210	None	replace
501	[BUG]  [BUGGY]  int  default,  or(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default,  or(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default,  or(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
502	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff  [CE]  unclosed  character  literal  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  unclosed  character  literal	210	None	replace
503	[BUG]  [BUGGY]  int  default,  or(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default,  or(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default,  or(c  &  0xffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
504	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  unclosed  character  literal  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  unclosed  character  literal	212	None	replace
505	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  unclosed  character  literal  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  unclosed  character  literal	212	None	replace
506	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
507	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
508	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
509	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
510	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
511	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
512	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
513	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
514	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
515	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
516	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xffffFF)  {	  switch(c    &    0xfffFF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	175	4	replace
517	[BUG]  [BUGGY]  switch(c  &  0xffffFF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffffFF)  {	  switch(c    &    0xfffFF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	175	4	replace
518	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
519	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
520	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
521	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	12	None	replace
522	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  int  r  =  in.read();	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	164	None	replace
523	[BUG]  [BUGGY]  while(c  <  DISABLED)  {  final  int  r  =  in.read();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  DISABLED)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  DISABLED)  {  final  int  r  =  in.read();	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	164	None	replace
524	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  r  =  in.read();  [CE]  cannot  find  symbol  r  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  ',':  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  ',':  r  =  in.read();	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  cannot  find  symbol  r	164	None	replace
525	[BUG]  [BUGGY]  char  r  =  in.read();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  r  =  in.read();	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	164	None	replace
526	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  r  =  in.read();  [CE]  cannot  find  symbol  r  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '.':  r  =  in.read();	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  cannot  find  symbol  r	164	None	replace
527	[BUG]  [BUGGY]  final  int  len  =  in.read(c);  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  in.read(c);	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
528	[BUG]  [BUGGY]  final  int  len  =  c.read();  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  c.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  c.read();	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
529	[BUG]  [BUGGY]  final  int  len  =  in.readLine();  [CE]  orphaned  case  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  in.readLine();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  in.readLine();	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
530	[BUG]  [BUGGY]  final  int  len  =  this.in.read();  [CE]  orphaned  case  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  this.in.read();	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
531	[BUG]  [BUGGY]  final  int  len  =  in.read()  -  c;  [CE]  orphaned  case  [FE]                                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  in.read()  -  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  in.read()  -  c;	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
532	[BUG]  [BUGGY]  final  int  len  =  in.read()  +  c;  [CE]  orphaned  case  [FE]                                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  in.read()  +  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  in.read()  +  c;	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
533	[BUG]  [BUGGY]  while(in.read()  >  0)  {  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  commmentStart  =  in.read();	  switch(in.read())    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	144	None	replace
534	[BUG]  [BUGGY]  switch(c)  {  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  commmentStart  =  in.read();	  switch(in.read())    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	144	None	replace
535	[BUG]  [BUGGY]  while(in.read()  <  c)  {  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  <  c)  {  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  <  c)  {  commmentStart  =  in.read();	  switch(in.read())    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	144	None	replace
536	[BUG]  [BUGGY]  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	commmentStart  =  in.read();	  switch(in.read())    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	144	None	replace
537	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  >=  'r')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	36	None	replace
538	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c,  quoteChar);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c,  quoteChar);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c,  quoteChar);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
539	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c,  DISABLED);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c,  DISABLED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c,  DISABLED);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
540	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c,  escapeSurroundingSpaces);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
541	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readFully(c);  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readFully(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readFully(c);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
542	[BUG]  [BUGGY]  switch(in.read()  &&  c  ==  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  ==  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	190	None	replace
543	[BUG]  [BUGGY]  switch(c.read()  &&  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&  c  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&  c  <  =  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
544	[BUG]  [BUGGY]  switch(in.read()  &&  c!=  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c!=  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	190	None	replace
545	[BUG]  [BUGGY]  switch(in.read()  &&  c  >=  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  >=  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	190	None	replace
546	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	190	None	replace
547	[BUG]  [BUGGY]  switch(in.read()  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  ||  c  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  ||  c  <  =  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
548	[BUG]  [BUGGY]  int  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	189	None	replace
549	[BUG]  [BUGGY]  switch(c.read())  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  int  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	189	None	replace
550	[BUG]  [BUGGY]  while(in.read()  >  0)  {  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	189	None	replace
551	[BUG]  [BUGGY]  char  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	189	None	replace
552	[BUG]  [BUGGY]  while(in.read()  <  commmentStart)  {  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  <  commmentStart)  {  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  <  commmentStart)  {  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	189	None	replace
553	[BUG]  [BUGGY]  while(in.read()  <  commmentStart)  {  int  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  <  commmentStart)  {  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  <  commmentStart)  {  int  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	189	None	replace
554	[BUG]  [BUGGY]  int  commmentStart  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  in.read(c);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.read(c);  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
555	[BUG]  [BUGGY]  char  commmentStart  =  in.read();  break;  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  commmentStart  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  commmentStart  =  in.read();  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
556	[BUG]  [BUGGY]  long  commmentStart  =  in.read();  break;  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  long  commmentStart  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	long  commmentStart  =  in.read();  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
557	[BUG]  [BUGGY]  int  commmentStart  =  this.in.read();  break;  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  this.in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  this.in.read();  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
558	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read();  break;  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read();  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
559	[BUG]  [BUGGY]  switch(c,  Character.toLowerCase(c.charAt(0)))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  Character.toLowerCase(c.charAt(0)))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  Character.toLowerCase(c.charAt(0)))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
560	[BUG]  [BUGGY]  switch(c,  Character.toLowerCase(c))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  Character.toLowerCase(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  Character.toLowerCase(c))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
561	[BUG]  [BUGGY]  switch(c,  0,  c.charAt(0))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  0,  c.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  0,  c.charAt(0))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
562	[BUG]  [BUGGY]  switch(c,  Character.toLowerCase(c.charAt(0))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  Character.toLowerCase(c.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  Character.toLowerCase(c.charAt(0))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
563	[BUG]  [BUGGY]  Switch(c),  DISABLED,  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
564	[BUG]  [BUGGY]  Switch(c),  DISABLED  ==  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED  ==  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED  ==	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
565	[BUG]  [BUGGY]  Switch(c),  DISABLED,  commmentStart,  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  commmentStart,  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  commmentStart,	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
566	[BUG]  [BUGGY]  Switch(c),  DETERMINISTIC  |  DISABLED  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DETERMINISTIC  |  DISABLED  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DETERMINISTIC  |  DISABLED  {	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
567	[BUG]  [BUGGY]  Switch(c),  commmentStart,  DISABLED  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  commmentStart,  DISABLED  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  DISABLED  {	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
568	[BUG]  [BUGGY]  Switch(in.read()  +  c,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  +  c,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  +  c,  escapeSurroundingSpaces)  {	  Switch(in.read()    +    c)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
569	[BUG]  [BUGGY]  Switch(in.read()  /  c)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  /  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  /  c)  {	  Switch(in.read()    +    c)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
570	[BUG]  [BUGGY]  Switch(in.read()  +  c,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  +  c,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  +  c,  escapeEmptyLines)  {	  Switch(in.read()    +    c)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
571	[BUG]  [BUGGY]  Switch(in.read()  -  c)  {  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  -  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  -  c)  {	  Switch(in.read()    +    c)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
572	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	35	None	replace
573	[BUG]  [BUGGY]  switch(c  <  DISABLED  ||  c  >  DISABLED)  {  [CE]  incompatible  types  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED  ||  c  >  DISABLED)  {	  switch(c    >=    DISABLED)    {    	non-compiled	[CE]  incompatible  types	131	None	replace
574	[BUG]  [BUGGY]  if(c!=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	123	None	replace
575	[BUG]  [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	123	None	replace
576	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	123	None	replace
577	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c!=  'n'  ||  c  ==  'r')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	123	None	replace
578	[BUG]  [BUGGY]  Switch(c  &  0xfffff)  {  [CE]  ';'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfffff)  {	  switch(c    &    0xfffff)    {    	non-compiled	[CE]  ';'  expected	89	None	replace
579	[BUG]  [BUGGY]  Switch(c  &  0xff)  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xff)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
580	[BUG]  [BUGGY]  Switch(c  &  0xffFF)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffFF)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
581	[BUG]  [BUGGY]  Switch(c  &  0xfff,  commmentStart)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff,  commmentStart)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
582	[BUG]  [BUGGY]  Switch(c  +  0xfff)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  +  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  +  0xfff)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
583	[BUG]  [BUGGY]  Switch(c  &  0xffF)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffF)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
584	[BUG]  [BUGGY]  Switch(c  &  1xfff)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  1xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  1xfff)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ')'  expected	158	None	replace
585	[BUG]  [BUGGY]  switch(c  &  1xfff)  {  [CE]  ')'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  1xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  1xfff)  {	  switch(c    &    0xfff)    {    	non-compiled	[CE]  ')'  expected	91	None	replace
586	[BUG]  [BUGGY]  switch(c  <  DISABLED,  commmentStart)  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED,  commmentStart)  {	  switch(c    <    DISABLED)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
587	[BUG]  [BUGGY]  switch(c  <  DISABLED  ||  c  >=  DISABLED)  {  [CE]  incompatible  types  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED  ||  c  >=  DISABLED)  {	  switch(c    <    DISABLED)    {    	non-compiled	[CE]  incompatible  types	62	None	replace
588	[BUG]  [BUGGY]  switch(c  <  DISABLED  ||  c  ==  DISABLED)  {  [CE]  incompatible  types  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED  ||  c  ==  DISABLED)  {	  switch(c    <    DISABLED)    {    	non-compiled	[CE]  incompatible  types	62	None	replace
589	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
590	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
591	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
592	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
593	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
594	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
595	[BUG]  [BUGGY]  Switch(c,  escapeSurroundingSpaces,  commmentEnd)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeSurroundingSpaces,  commmentEnd)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeSurroundingSpaces,  commmentEnd)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
596	[BUG]  [BUGGY]  Switch(c,  commmentEnd,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentEnd,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentEnd,  ignoreEmptyLines)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
597	[BUG]  [BUGGY]  Switch(c,  escapeSurroundingSpaces,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeSurroundingSpaces,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeSurroundingSpaces,  ignoreEmptyLines)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
598	[BUG]  [BUGGY]  Switch(c,  in.read(),  commmentStart)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.read(),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.read(),  commmentStart)  {	  Switch(c,    in.read())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
599	[BUG]  [BUGGY]  Switch(c,  in.read()),  commmentStart)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.read()),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.read()),  commmentStart)  {	  Switch(c,    in.read())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
600	[BUG]  [BUGGY]  Switch(c,  in.read(),  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.read(),  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.read(),  escapeSurroundingSpaces)  {	  Switch(c,    in.read())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
601	[BUG]  [BUGGY]  Switch(in,  c.read())  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c.read())  {	  Switch(c,    in.read())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
602	[BUG]  [BUGGY]  Switch(c,  in.read()  -  1)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.read()  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.read()  -  1)  {	  Switch(c,    in.read())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
603	[BUG]  [BUGGY]  switch(c  &  0xffffL)  {  [CE]  possible  loss  of  precision  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffL)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffffL)  {	  switch(c    &    0xfffF)    {    	non-compiled	[CE]  possible  loss  of  precision	96	None	replace
604	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
605	[BUG]  [BUGGY]  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
606	[BUG]  [BUGGY]  while(c!=  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  '.')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
607	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r  ==  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r  ==  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r  ==  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
608	[BUG]  [BUGGY]  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
609	[BUG]  [BUGGY]  switch(c)  {  case  =  in.read();  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
610	[BUG]  [BUGGY]  final  int  switch(in.read())  {  case  =  in.read();  [CE]  <identifier>  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  switch(in.read())  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  switch(in.read())  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  <identifier>  expected	188	None	replace
611	[BUG]  [BUGGY]  switch(c.read())  {  case  =  in.read();  [CE]  illegal  start  of  expression  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
612	[BUG]  [BUGGY]  int  case  =  in.read();  [CE]  not  a  statement  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  not  a  statement	188	None	replace
613	[BUG]  [BUGGY]  while(c!=  in.read())  {  case  =  in.read();  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  in.read())  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  in.read())  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  orphaned  case	188	None	replace
614	[BUG]  [BUGGY]  final  int  case  =  in.read();  [CE]  <identifier>  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  <identifier>  expected	188	None	replace
615	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  int  commmentStart  =  in.read(c);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	165	None	replace
616	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c,  commmentChar);  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c,  commmentChar);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c,  commmentChar);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	165	None	replace
617	[BUG]  [BUGGY]  switch(c)  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  commmentStart  =  in.read(c);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	165	None	replace
618	[BUG]  [BUGGY]  switch(c,  char.charAt(c))  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  char.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  char.charAt(c))  {	  switch(c,    c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	111	None	replace
619	[BUG]  [BUGGY]  switch(escapeChar.read())  {  [CE]  cannot  find  symbol  escapeChar  [FE]    (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escapeChar.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeChar.read())  {	  switch(in.read()    -    1)    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	56	None	replace
620	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
621	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
622	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
623	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
624	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
625	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
626	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  Record  do  not  match  expected  result(c  &  0xffFF)  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  Record  do  not  match  expected  result(c  &  0xffFF)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    Record  do  not  match  expected  result(c  &  0xffFF)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
627	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
628	[BUG]  [BUGGY]  switch(in.read()  &  c  ==  '9')  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  ==  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  ==  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	133	None	replace
629	[BUG]  [BUGGY]  switch(c.read()  &  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &  c  <  =  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
630	[BUG]  [BUGGY]  switch(in.read()  &  c  >=  '9')  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >=  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  >=  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	133	None	replace
631	[BUG]  [BUGGY]  switch(in.read()  &  c!=  '9')  {  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c!=  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c!=  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	133	None	replace
632	[BUG]  [BUGGY]  switch(c  &  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  c  <  =  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
633	[BUG]  [BUGGY]  switch(in.read()  &  c  <  =  '9'  ||  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  <  =  '9'  ||  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  <  =  '9'  ||  c  <  =  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
634	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  int  c  =  in.read();	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	46	None	replace
635	[BUG]  [BUGGY]  while(c  <  DISABLED)  {  final  int  c  =  in.read();  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  DISABLED)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  DISABLED)  {  final  int  c  =  in.read();	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	46	None	replace
636	[BUG]  [BUGGY]  while(c  >=  DISABLED)  {  final  int  c  =  in.read();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  >=  DISABLED)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  >=  DISABLED)  {  final  int  c  =  in.read();	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	46	None	replace
637	[BUG]  [BUGGY]  switch(c)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  c  =  in.read();	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	46	None	replace
638	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
639	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
640	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
641	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
642	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
643	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
644	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	207	None	replace
645	[BUG]  [BUGGY]  if(c!=  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  DISABLED)  {  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	207	None	replace
646	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  >>  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  >>  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();  if(commmentStart  >>  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	207	None	replace
647	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'a')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
648	[BUG]  [BUGGY]  if(c!=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
649	[BUG]  [BUGGY]  if(c  >=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
650	[BUG]  [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
651	[BUG]  [BUGGY]  if(c  <  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
652	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'f')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'f')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
653	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
654	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
655	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
656	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
657	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  c  &  0xfffffF)  {  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  c  &  0xfffffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    c  &  0xfffffF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
658	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
659	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  final  Records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    final  Records  do  not  match  expected  result  ()	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
660	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  Record  do  not  match  expected  result(c  &  0xfffff)  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  Record  do  not  match  expected  result(c  &  0xfffff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    Record  do  not  match  expected  result(c  &  0xfffff)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
661	[BUG]  [BUGGY]  Integer  c  =  in.read();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Integer  c  =  in.read();	  switch(c    &    DISABLED)    {    Integer    c    =    in.read();    	non-compiled	[CE]  orphaned  case	50	None	replace
662	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  final  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  final  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  final  Integer  c  =  in.read();	  switch(c    &    DISABLED)    {    Integer    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	50	None	replace
663	[BUG]  [BUGGY]  Switch(in,  in.read()  -  c)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  in.read()  -  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  in.read()  -  c)  {	  Switch(in,    in.read())    {    	non-compiled	[CE]  ';'  expected	135	None	replace
664	[BUG]  [BUGGY]  Switch(in,  in.read()),  c  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  in.read()),  c  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  in.read()),  c  {	  Switch(in,    in.read())    {    	non-compiled	[CE]  ';'  expected	135	None	replace
665	[BUG]  [BUGGY]  switch(c).clear())  {  [CE]  '{'  expected  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).clear())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).clear())  {	  switch(in.read())    {    switch(in.read())    {    	non-compiled	[CE]  '{'  expected	7	None	replace
666	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  int  c  =  in.read();	  switch(c    &    0xffff)    {    Integer    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	69	None	replace
667	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  Integer  c  =  in.read();	  switch(c    &    0xffff)    {    Integer    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	69	None	replace
668	[BUG]  [BUGGY]  while(c  &  0xffff)  {  final  int  c  =  in.read();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  &  0xffff)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  &  0xffff)  {  final  int  c  =  in.read();	  switch(c    &    0xffff)    {    Integer    c    =    in.read();    	non-compiled	[CE]  orphaned  case	69	None	replace
669	[BUG]  [BUGGY]  switch(c,  out.charAt(0))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  out.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  out.charAt(0))  {	  switch(c,    in.charAt(0))    {    	non-compiled	[CE]  ')'  expected	168	None	replace
670	[BUG]  [BUGGY]  switch(c,  in.charAt(1))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.charAt(1))  {	  switch(c,    in.charAt(0))    {    	non-compiled	[CE]  ')'  expected	168	None	replace
671	[BUG]  [BUGGY]  switch(c,  0,  c.length())  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  0,  c.length())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  0,  c.length())  {	  switch(c,    in.charAt(0))    {    	non-compiled	[CE]  ')'  expected	168	None	replace
672	[BUG]  [BUGGY]  int  switch(c  &  0xffff)  {  Context.codeBug();  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  switch(c  &  0xffff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  switch(c  &  0xffff)  {  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  not  a  statement	155	None	replace
673	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffff)  {  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	155	None	replace
674	[BUG]  [BUGGY]  toggle(c  &  0xffff)  {  Context.codeBug();  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  toggle(c  &  0xffff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	toggle(c  &  0xffff)  {  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  ';'  expected	155	None	replace
675	[BUG]  [BUGGY]  Switch(c  &  0xffff)  {  Context.codeBug();  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff)  {  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  ';'  expected	155	None	replace
676	[BUG]  [BUGGY]  switch(c.read()  &&  in.read()  >  0)  {  [CE]  int  cannot  be  dereferenced  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&  in.read()  >  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&  in.read()  >  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	192	None	replace
677	[BUG]  [BUGGY]  switch(in.read()  &&  in.read()  ==  0)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  in.read()  ==  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  in.read()  ==  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	192	None	replace
678	[BUG]  [BUGGY]  switch(in.read()  ||  in.read()  >  0)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  ||  in.read()  >  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  ||  in.read()  >  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	192	None	replace
679	[BUG]  [BUGGY]  switch(in.read()  &&  in.read()!=  0)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  in.read()!=  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  in.read()!=  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	192	None	replace
680	[BUG]  [BUGGY]  switch(in.read()  &&  in.read()  >=  0)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  in.read()  >=  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  in.read()  >=  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	192	None	replace
681	[BUG]  [BUGGY]  switch(in.read()  &&  in.read()  <  0)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  in.read()  <  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  in.read()  <  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	192	None	replace
682	[BUG]  [BUGGY]  if(c!=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
683	[BUG]  [BUGGY]  if(c  >=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
684	[BUG]  [BUGGY]  if(c  <  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
685	[BUG]  [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
686	[BUG]  [BUGGY]  if(c  <  't'  ||  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
687	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
688	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  0xff)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
689	[BUG]  [BUGGY]  switch(c  +  0xff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xff)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
690	[BUG]  [BUGGY]  switch(c  &  1xff)  {  [CE]  ')'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  1xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  1xff)  {	  switch(c    &    0xff)    {    	non-compiled	[CE]  ')'  expected	157	None	replace
691	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xf)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xf)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
692	[BUG]  [BUGGY]  switch(c  &  0xf)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xf)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xf)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
693	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0x7f)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0x7f)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	4	replace
694	[BUG]  [BUGGY]  switch(c  &  0x7f)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0x7f)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0x7f)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	4	replace
695	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  BACKSPACE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  BACKSPACE)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
696	[BUG]  [BUGGY]  switch(c  &  BACKSPACE)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  BACKSPACE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  BACKSPACE)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
697	[BUG]  [BUGGY]  switch(commmentStart.readEscape())  {  [CE]  char  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(commmentStart.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(commmentStart.readEscape())  {	  switch(escapeChar.readEscape())    {    	non-compiled	[CE]  char  cannot  be  dereferenced	109	None	replace
698	[BUG]  [BUGGY]  Switch(c.readEscape())  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.readEscape())  {	  switch(escapeChar.readEscape())    {    	non-compiled	[CE]  ';'  expected	109	None	replace
699	[BUG]  [BUGGY]  switch(s.readEscape())  {  [CE]  cannot  find  symbol  s  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(s.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(s.readEscape())  {	  switch(escapeChar.readEscape())    {    	non-compiled	[CE]  cannot  find  symbol  s	109	None	replace
700	[BUG]  [BUGGY]  final  int  commmentStart  =  this.in.read();  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  this.in.read();	  final    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	116	None	replace
701	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readLine();  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readLine();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readLine();	  final    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	116	None	replace
702	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readFully();  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readFully();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readFully();	  final    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	116	None	replace
703	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readInt();  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readInt();	  final    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	116	None	replace
704	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  >  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  orphaned  case	184	None	replace
705	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >=  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >=  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >=  'n'  ||  c  >=  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  orphaned  case	184	None	replace
706	[BUG]  [BUGGY]  if(c  <  =  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'r'  ||  c  >  'n'  ||  c  >=  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
707	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  >=  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  orphaned  case	184	None	replace
708	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  <  =  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
709	[BUG]  [BUGGY]  Switch(c  &  0xffff,  commmentStart)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff,  commmentStart)  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
710	[BUG]  [BUGGY]  Switch(c  &  0xffffF)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffffF)  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
711	[BUG]  [BUGGY]  Switch(c  +  0xffff)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  +  0xffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  +  0xffff)  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
712	[BUG]  [BUGGY]  Switch(c  &  0xfffF)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfffF)  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
713	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(1))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(1))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ')'  expected	177	None	replace
714	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(2))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(2))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ')'  expected	177	None	replace
715	[BUG]  [BUGGY]  switch(c,  escape.charAt(0))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escape.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escape.charAt(0))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ')'  expected	177	None	replace
716	[BUG]  [BUGGY]  switch(c)  {  int  delimiter  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	186	None	replace
717	[BUG]  [BUGGY]  while(c!=  in.read())  {  delimiter  =  in.read();  [CE]  orphaned  case  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  in.read())  {  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  in.read())  {  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	186	None	replace
718	[BUG]  [BUGGY]  switch(c.read())  {  int  delimiter  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  int  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  int  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	186	None	replace
719	[BUG]  [BUGGY]  while(in.read()  >  0)  {  delimiter  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	186	None	replace
720	[BUG]  [BUGGY]  final  int  delimiter  =  c.read();  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  c.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  c.read();	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
721	[BUG]  [BUGGY]  final  int  delimiter  =  in.read(c);  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read(c);	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
722	[BUG]  [BUGGY]  final  char  delimiter  =  in.read();  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  delimiter  =  in.read();	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
723	[BUG]  [BUGGY]  final  int  delimiter  =  in.read()  -  c;  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  in.read()  -  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read()  -  c;	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
724	[BUG]  [BUGGY]  final  int  delimiter  =  in.read()  +  c;  [CE]  orphaned  case  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  in.read()  +  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read()  +  c;	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
725	[BUG]  [BUGGY]  final  int  delimiter  =  in.read()  &  c;  [CE]  orphaned  case  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  in.read()  &  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read()  &  c;	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
726	[BUG]  [BUGGY]  final  int  commmentStart  =  this.in.read();  break;  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  this.in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  this.in.read();  break;	  final    int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	117	None	replace
727	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readSurroundingSpaces();  break;  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readSurroundingSpaces();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readSurroundingSpaces();  break;	  final    int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	117	None	replace
728	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readFully();  break;  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readFully();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readFully();  break;	  final    int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	117	None	replace
729	[BUG]  [BUGGY]  final  int  commmentStart  =  in.readLine();  break;  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.readLine();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.readLine();  break;	  final    int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	117	None	replace
730	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  commmentStart  ==  DISABLED)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  commmentStart  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  commmentStart  ==  DISABLED)  {	  switch(c    &    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	64	None	replace
731	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c  ==  commmentStart)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  c  ==  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c  ==  commmentStart)  {	  switch(c    &    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	64	None	replace
732	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  '.':  c  &  0xffffff)  {  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '.':  c  &  0xffffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  '.':  c  &  0xffffff)  {	  switch(c    &    0xffff)    {    c    &    0xfffff)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
733	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case's':  c  &  0xffffff)  {  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case's':  c  &  0xffffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case's':  c  &  0xffffff)  {	  switch(c    &    0xffff)    {    c    &    0xfffff)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
734	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case's':  c  &  0xfffffff)  {  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case's':  c  &  0xfffffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case's':  c  &  0xfffffff)  {	  switch(c    &    0xffff)    {    c    &    0xfffff)    {    	non-compiled	[CE]  not  a  statement	71	None	replace
735	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  switch(in.read()  -  1)  {  [CE]  case,  default,  or  '}'  expected  [FE]    (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  switch(in.read()  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    switch(in.read()  -  1)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
736	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  switch(in.read()  -  1)  {  [CE]  case,  default,  or  '}'  expected  [FE]      (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  switch(in.read()  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  switch(in.read()  -  1)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
737	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  switch(c  -  1)  {  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  switch(c  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    switch(c  -  1)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
738	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
739	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  switch(c.read()  -  1)  {  [CE]  case,  default,  or  '}'  expected  [FE]            (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  switch(c.read()  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  switch(c.read()  -  1)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
740	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
741	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  in.read()  -  1;  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  in.read()  -  1;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    in.read()  -  1;	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
742	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  len  =  in.read()  -  1;  [CE]  case,  default,  or  '}'  expected  [FE]                  (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  len  =  in.read()  -  1;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  len  =  in.read()  -  1;	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
743	[BUG]  [BUGGY]  Switch(c),  out.read())  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  out.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  out.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
744	[BUG]  [BUGGY]  Switch(c),  commmentStart,  in.read())  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  commmentStart,  in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  in.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
745	[BUG]  [BUGGY]  Switch(c),  commmentStart.read())  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  commmentStart.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
746	[BUG]  [BUGGY]  Switch(c),  in,  reader.read())  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  in,  reader.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  in,  reader.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
747	[BUG]  [BUGGY]  Switch(c),  this.in.read())  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  this.in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  this.in.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
748	[BUG]  [BUGGY]  Switch(c),  in.read());  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  in.read());  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  in.read());	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
749	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
750	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
751	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    final  int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
752	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    char  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
753	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c  ==  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c  ==  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c  ==  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
754	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c  ==  DISABLED)  {  final  int  c  =  in.read();  if(c!=  DISABLED)  {  return  LC;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c  ==  DISABLED)  {  final  int  c  =  in.read();  if(c!=  DISABLED)  {  return  LC;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c  ==  DISABLED)  {  final  int  c  =  in.read();  if(c!=  DISABLED)  {  return  LC;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
755	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    Integer  c  =  in.readInt();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
756	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c  ==  DISABLED)  {  final  int  c  =  in.read();  if(c!=  DISABLED)  {  return  CR;  }  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c  ==  DISABLED)  {  final  int  c  =  in.read();  if(c!=  DISABLED)  {  return  CR;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c  ==  DISABLED)  {  final  int  c  =  in.read();  if(c!=  DISABLED)  {  return  CR;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
757	[BUG]  [BUGGY]  Switch(c,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  ignoreEmptyLines)  {	  Switch(c,    commmentSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
758	[BUG]  [BUGGY]  Switch(c,  ignorEmptyLines)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  ignorEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  ignorEmptyLines)  {	  Switch(c,    commmentSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
759	[BUG]  [BUGGY]  Switch(c,  ignoredEmptyLines)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  ignoredEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  ignoredEmptyLines)  {	  Switch(c,    commmentSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
760	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  char  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	70	None	replace
761	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  final  String  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  final  String  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  final  String  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	70	None	replace
762	[BUG]  [BUGGY]  switch(in.read()  &  0xffff)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  0xffff)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  0xffff)  {  char  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	70	None	replace
763	[BUG]  [BUGGY]  String  c  =  in.read();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  String  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	String  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	138	None	replace
764	[BUG]  [BUGGY]  final  String  c  =  in.read();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  String  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  String  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	138	None	replace
765	[BUG]  [BUGGY]  char  c  =  this.in.read();  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  this.in.read();	  char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	138	None	replace
766	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c!=  'n'  ||  c  ==  DISABLED)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	27	None	replace
767	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
768	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
769	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
770	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
771	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
772	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'p')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
773	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
774	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
775	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
776	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
777	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
778	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
779	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
780	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'a'  ||  c  >  'z')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'a'  ||  c  >  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  <  'a'  ||  c  >  'z')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
781	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  1)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
782	[BUG]  [BUGGY]  switch(c  +  1)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  1)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
783	[BUG]  [BUGGY]  switch(c  +  COMMENT)  {  [CE]  cannot  find  symbol  COMMENT  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  COMMENT)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  COMMENT)  {	  switch(c    +    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  COMMENT	61	None	replace
784	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  commmentStart)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
785	[BUG]  [BUGGY]  switch(c  +  commmentStart)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  commmentStart)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
786	[BUG]  [BUGGY]  switch(c  +  COMMENT_SURroundingSpaces)  {  [CE]  cannot  find  symbol  COMMENT_SURroundingSpaces  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  COMMENT_SURroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  COMMENT_SURroundingSpaces)  {	  switch(c    +    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  COMMENT_SURroundingSpaces	61	None	replace
787	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  *  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  *  DISABLED)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
788	[BUG]  [BUGGY]  switch(c  *  DISABLED)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  *  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  *  DISABLED)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
789	[BUG]  [BUGGY]  switch(c  +  COMMENT_START)  {  [CE]  cannot  find  symbol  COMMENT_START  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  COMMENT_START)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  COMMENT_START)  {	  switch(c    +    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	61	None	replace
790	[BUG]  [BUGGY]  switch(c,  c.charAt(2))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  c.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  c.charAt(2))  {	  switch(c.charAt(2))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
791	[BUG]  [BUGGY]  switch(in.charAt(2))  {  [CE]  cannot  find  symbol  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(2))  {	  switch(c.charAt(2))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
792	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    <    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	180	None	replace
793	[BUG]  [BUGGY]  if(c  <  =  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    <    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
794	[BUG]  [BUGGY]  switch(c,  getCharAt(1))  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getCharAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(1))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
795	[BUG]  [BUGGY]  switch(c,  getCharAt(2))  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getCharAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(2))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
796	[BUG]  [BUGGY]  switch(c,  getLineAt(0))  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getLineAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getLineAt(0))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
797	[BUG]  [BUGGY]  switch(c,  getLineBreak())  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getLineBreak())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getLineBreak())  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
798	[BUG]  [BUGGY]  switch(c,  getCharAt(4))  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getCharAt(4))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(4))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
799	[BUG]  [BUGGY]  switch(c,  getCharAt(3))  {  [CE]  ')'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getCharAt(3))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(3))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
800	[BUG]  [BUGGY]  switch(in.read(c),  escapeStart)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeStart)  {	  switch(in.read(c),    commmentStart)    {    	non-compiled	[CE]  ')'  expected	104	None	replace
801	[BUG]  [BUGGY]  switch(in.read(c),  outlineChar)  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  outlineChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  outlineChar)  {	  switch(in.read(c),    commmentStart)    {    	non-compiled	[CE]  ')'  expected	104	None	replace
802	[BUG]  [BUGGY]  switch(escape.readEscape(),  c)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escape.readEscape(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escape.readEscape(),  c)  {	  switch(escape.readEscape())    {    	non-compiled	[CE]  ')'  expected	151	None	replace
803	[BUG]  [BUGGY]  switch(c,  escape.readEscape())  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escape.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escape.readEscape())  {	  switch(escape.readEscape())    {    	non-compiled	[CE]  ')'  expected	151	None	replace
804	[BUG]  [BUGGY]  Switch(c  &  DISABLED,  commmentStart)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED,  commmentStart)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
805	[BUG]  [BUGGY]  Switch(c  +  DISABLED)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  +  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  +  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
806	[BUG]  [BUGGY]  Switch(c  &  DISABLED  ||  c  >  DISABLED)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED  ||  c  >  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
807	[BUG]  [BUGGY]  Switch(c  |  DISABLED)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  |  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  |  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
808	[BUG]  [BUGGY]  Switch(c  &  DISABLED  ||  c  ==  DISABLED)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED  ||  c  ==  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
809	[BUG]  [BUGGY]  Switch(c  &  DISABLED  ||  c  >=  DISABLED)  {  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED  ||  c  >=  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
810	[BUG]  [BUGGY]  switch(c,  out.charAt(c  -  1))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  out.charAt(c  -  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  out.charAt(c  -  1))  {	  switch(c,    out.charAt(c))    {    	non-compiled	[CE]  ')'  expected	173	None	replace
811	[BUG]  [BUGGY]  switch(c,  out.charAt(c  +  1))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  out.charAt(c  +  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  out.charAt(c  +  1))  {	  switch(c,    out.charAt(c))    {    	non-compiled	[CE]  ')'  expected	173	None	replace
812	[BUG]  [BUGGY]  char  c  =  out.charAt(c);  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  out.charAt(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  out.charAt(c);	  switch(c,    out.charAt(c))    {    	non-compiled	[CE]  orphaned  case	173	None	replace
813	[BUG]  [BUGGY]  switch(out.charAt(c))  {  [CE]  cannot  find  symbol  out  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(out.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(out.charAt(c))  {	  switch(c,    out.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  out	173	None	replace
814	[BUG]  [BUGGY]  switch(in.read(c,  ignoreEmptyLines))  {  [CE]  no  suitable  method  found  for  read(int,boolean)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  ignoreEmptyLines))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  ignoreEmptyLines))  {	  switch(in.read(c,    escapeSurroundingSpaces))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,boolean)	101	None	replace
815	[BUG]  [BUGGY]  switch(in.read(c,  this.ignoreEmptyLines))  {  [CE]  no  suitable  method  found  for  read(int,boolean)  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  this.ignoreEmptyLines))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  this.ignoreEmptyLines))  {	  switch(in.read(c,    escapeSurroundingSpaces))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,boolean)	101	None	replace
816	[BUG]  [BUGGY]  switch(in.read(c,  commmentChar))  {  [CE]  cannot  find  symbol  commmentChar  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  commmentChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentChar))  {	  switch(in.read(c,    escapeSurroundingSpaces))    {    	non-compiled	[CE]  cannot  find  symbol  commmentChar	101	None	replace
817	[BUG]  [BUGGY]  switch(in.read(c,  quoteChar))  {  [CE]  no  suitable  method  found  for  read(int,char)  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  quoteChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  quoteChar))  {	  switch(in.read(c,    escapeSurroundingSpaces))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char)	101	None	replace
818	[BUG]  [BUGGY]  switch(in.read(c,  commmentEnd))  {  [CE]  cannot  find  symbol  commmentEnd  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  commmentEnd))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentEnd))  {	  switch(in.read(c,    escapeSurroundingSpaces))    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	101	None	replace
819	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffff)  {  final  int  c  =  in.read();	  switch(c    &    0xffff)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	67	None	replace
820	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  int  c  =  in.read();	  switch(c    &    0xffff)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	67	None	replace
821	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	17	None	replace
822	[BUG]  [BUGGY]  switch(c.readEscape(),  commmentStart)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.readEscape(),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape(),  commmentStart)  {	  switch(c.readEscape())    {    	non-compiled	[CE]  ')'  expected	106	None	replace
823	[BUG]  [BUGGY]  switch(c.readEscape(),  delimiter)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.readEscape(),  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape(),  delimiter)  {	  switch(c.readEscape())    {    	non-compiled	[CE]  ')'  expected	106	None	replace
824	[BUG]  [BUGGY]  switch(c.readEscape(),  in.readChar())  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.readEscape(),  in.readChar())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape(),  in.readChar())  {	  switch(c.readEscape())    {    	non-compiled	[CE]  ')'  expected	106	None	replace
825	[BUG]  [BUGGY]  switch(c.readEscape(),  in.readEscape())  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.readEscape(),  in.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape(),  in.readEscape())  {	  switch(c.readEscape())    {    	non-compiled	[CE]  ')'  expected	106	None	replace
826	[BUG]  [BUGGY]  switch(escapeSurroundingSpaces.read(c),  escapeSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escapeSurroundingSpaces.read(c),  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeSurroundingSpaces.read(c),  escapeSurroundingSpaces)  {	  switch(in.read(c),    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	100	None	replace
827	[BUG]  [BUGGY]  Switch(in.read(c),  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(c),  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(c),  ignoreEmptyLines)  {	  switch(in.read(c),    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	100	None	replace
828	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
829	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
830	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
831	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
832	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
833	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
834	[BUG]  [BUGGY]  final  String  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  String  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  String  commmentStart  =  in.read(c);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
835	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  DISABLED);  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  DISABLED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  DISABLED);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
836	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  escapeSurroundingSpaces);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
837	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  quoteChar);  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  quoteChar);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  quoteChar);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
838	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  escapeChar);  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  escapeChar);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  escapeChar);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
839	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	38	None	replace
840	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
841	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
842	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c  >=  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
843	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  <  =  'n'  ||  c  ==  'r')  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  >  'r'  ||  c  <  =  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  >  'r'  ||  c  <  =  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
844	[BUG]  [BUGGY]  switch(c  <  =  DISABLED  ||  c  >  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED  ||  c  >  DISABLED)  {	  switch(c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
845	[BUG]  [BUGGY]  switch(c  <  =  DISABLED  ||  c  >=  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED  ||  c  >=  DISABLED)  {	  switch(c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
846	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
847	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
848	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
849	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
850	[BUG]  [BUGGY]  switch(in.read(c),  quoteChar)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  quoteChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  quoteChar)  {	  switch(in.read(c),    escapeChar)    {    	non-compiled	[CE]  ')'  expected	171	None	replace
851	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  escapeChar)  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  escapeChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  escapeChar)  {	  switch(in.read(c),    escapeChar)    {    	non-compiled	[CE]  ')'  expected	171	None	replace
852	[BUG]  [BUGGY]  switch(c.read(),  escapeChar)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(),  escapeChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(),  escapeChar)  {	  switch(in.read(c),    escapeChar)    {    	non-compiled	[CE]  ')'  expected	171	None	replace
853	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	16	None	replace
854	[BUG]  [BUGGY]  int  commmentStart  =  this.in.read();  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  this.in.read();	  int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	118	None	replace
855	[BUG]  [BUGGY]  int  commmentStart  =  in.readInt();  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.readInt();	  int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	118	None	replace
856	[BUG]  [BUGGY]  int  commmentStart  =  in.readLine();  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  in.readLine();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.readLine();	  int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	118	None	replace
857	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
858	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
859	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
860	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r  >=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r  >=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r  >=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
861	[BUG]  [BUGGY]  switch(in.read(c),  escapeSurroundingSpaces,  escapeEmptyLines)  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeSurroundingSpaces,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeSurroundingSpaces,  escapeEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
862	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  ignoreSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  ignoreSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  ignoreSurroundingSpaces)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
863	[BUG]  [BUGGY]  switch(in.read(c),  DISABLED,  escapeEmptyLines)  {  [CE]  ')'  expected  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  DISABLED,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  DISABLED,  escapeEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
864	[BUG]  [BUGGY]  switch(in.read(c),  escapeSurroundingSpaces,  commmentStart)  {  [CE]  ')'  expected  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeSurroundingSpaces,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeSurroundingSpaces,  commmentStart)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
865	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  escapeEmptyLines,  ignoreSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  escapeEmptyLines,  ignoreSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  escapeEmptyLines,  ignoreSurroundingSpaces)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
866	[BUG]  [BUGGY]  switch(in.read(c),  delimiter,  escapeEmptyLines)  {  [CE]  ')'  expected  [FE]                                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  delimiter,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  delimiter,  escapeEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
867	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
868	[BUG]  [BUGGY]  Switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	154	None	replace
869	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ')  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ')  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ')	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
870	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c);  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c);	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
871	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c),  case,  default,  or'}  '  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c),  case,  default,  or'}  '  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c),  case,  default,  or'}  '	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
872	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c),  default,  or'}  '  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c),  default,  or'}  '  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c),  default,  or'}  '	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
873	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
874	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
875	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
876	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
877	[BUG]  [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
878	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0x	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
879	[BUG]  [BUGGY]  switch(c.read()  &&  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&  c  <  =  '9')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
880	[BUG]  [BUGGY]  switch(in.read()  &&  c  ==  '9')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  ==  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  ==  '9')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	191	None	replace
881	[BUG]  [BUGGY]  switch(in.read()  &&  c!=  '9')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c!=  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c!=  '9')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	191	None	replace
882	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  '9'  ||  c  <  =  '9')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
883	[BUG]  [BUGGY]  switch(in.read()  &&  c  >=  '9')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  >=  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  >=  '9')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	191	None	replace
884	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  expression  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'z')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
885	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    <    =    'n'    ||    c    >=    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	43	None	replace
886	[BUG]  [BUGGY]  switch(c)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	146	None	replace
887	[BUG]  [BUGGY]  switch(c.read())  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read())  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read())  {  int  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	146	None	replace
888	[BUG]  [BUGGY]  while(c!=  in.read())  {  r  =  in.read();  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  in.read())  {  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  in.read())  {  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
889	[BUG]  [BUGGY]  while(c!=  in.read())  {  final  int  r  =  in.read();  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c!=  in.read())  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c!=  in.read())  {  final  int  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
890	[BUG]  [BUGGY]  while(in.read()  >  0)  {  final  int  r  =  in.read();  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  final  int  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
891	[BUG]  [BUGGY]  switch(in.read(c,  commmentStart,  DISABLED))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  commmentStart,  DISABLED))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentStart,  DISABLED))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	170	None	replace
892	[BUG]  [BUGGY]  switch(in.read(c,  DISABLED,  quoteChar))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  DISABLED,  quoteChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  DISABLED,  quoteChar))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	170	None	replace
893	[BUG]  [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces,  DISABLED))  {  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeSurroundingSpaces,  DISABLED))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeSurroundingSpaces,  DISABLED))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	170	None	replace
894	[BUG]  [BUGGY]  switch(in.read(c,  DISABLED,  escape))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  DISABLED,  escape))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  DISABLED,  escape))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	170	None	replace
895	[BUG]  [BUGGY]  switch(in.read(c,  DISABLED,  escapeChar))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  DISABLED,  escapeChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  DISABLED,  escapeChar))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	170	None	replace
896	[BUG]  [BUGGY]  switch(c.read(DISABLED,  commmentStart))  {  [CE]  int  cannot  be  dereferenced  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(DISABLED,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(DISABLED,  commmentStart))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	170	None	replace
897	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
898	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
899	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
900	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
901	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
902	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
903	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
904	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  int  r  =  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
905	[BUG]  [BUGGY]  switch(c  &  0xff)  {  final  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  final  int  r  =  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	153	None	replace
906	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  final  int  r  =  in.read();  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  final  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  final  int  r  =  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  ';'  expected	153	None	replace
907	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
908	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  INT)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  INT)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  INT)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
909	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  records  do  not  match  expected  result  ()  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  case,  default,  or  '}'  expected	72	None	replace
910	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  final  Records  do  not  match  expected  result  ()  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  ';'  expected	72	None	replace
911	[BUG]  [BUGGY]  switch(in,  in.charAt(c))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  in.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  in.charAt(c))  {	  switch(in.charAt(c))    {    	non-compiled	[CE]  ')'  expected	112	None	replace
912	[BUG]  [BUGGY]  switch(in.charAt(c),  escape)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.charAt(c),  escape)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(c),  escape)  {	  switch(in.charAt(c))    {    	non-compiled	[CE]  ')'  expected	112	None	replace
913	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  0xfff)  {	  switch(c    &    0xfff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	91	6	replace
914	[BUG]  [BUGGY]  switch(c  +  0xfff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xfff)  {	  switch(c    &    0xfff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	91	6	replace
915	[BUG]  [BUGGY]  switch(in.read(c,  escapeStart,  commmentStart))  {  [CE]  cannot  find  symbol  escapeStart  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escapeStart,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escapeStart,  commmentStart))  {	  switch(in.read(c,    commmentStart))    {    	non-compiled	[CE]  cannot  find  symbol  escapeStart	99	None	replace
916	[BUG]  [BUGGY]  switch(c),  commmentStart)  {  [CE]  '{'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c),  commmentStart)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  '{'  expected	167	None	replace
917	[BUG]  [BUGGY]  switch(c,  escape)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escape)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escape)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
918	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Context.codeBug(0);  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Context.codeBug(0);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Context.codeBug(0);	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	155	None	replace
919	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Context.codeBug(0);  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Context.codeBug(0);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Context.codeBug(0);	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	155	None	replace
920	[BUG]  [BUGGY]  switch(c  +  0xffff)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xffff)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xffff)  {  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	155	None	replace
921	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
922	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
923	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
924	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISQUOTE  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISQUOTE  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISQUOTE  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
925	[BUG]  [BUGGY]  switch(c  <  0xff)  {  [CE]  incompatible  types  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  0xff)  {	  switch(c    &    0xff)    {    	non-compiled	[CE]  incompatible  types	157	None	replace
926	[BUG]  [BUGGY]  switch(c!=  DISABLED  ||  c  ==  DISABLED)  {  [CE]  incompatible  types  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c!=  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c!=  DISABLED  ||  c  ==  DISABLED)  {	  switch(c    >>    DISABLED)    {    	non-compiled	[CE]  incompatible  types	128	None	replace
927	[BUG]  [BUGGY]  Switch(c  &  0xfff)  ==  [CE]  illegal  start  of  expression  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  ==  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  ==	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
928	[BUG]  [BUGGY]  Switch(c  *  0xfff)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  *  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  *  0xfff)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
929	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >>  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(in.read()  &  c  >>  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	compilable	  [FE]  (entry  2)  	134	12	replace
930	[BUG]  [BUGGY]  switch(in.read()  &  c  >>  '0')  {  [FE]  (entry  2)  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >>  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  >>  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	compilable	  [FE]  (entry  2)  	134	12	replace
931	[BUG]  [BUGGY]  switch(symbol.charAt(c))  {  [CE]  cannot  find  symbol  symbol  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(symbol.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(symbol.charAt(c))  {	  switch(escapeChar.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  symbol	172	None	replace
932	[BUG]  [BUGGY]  switch(encodeEscapeChar.charAt(c))  {  [CE]  cannot  find  symbol  encodeEscapeChar  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(encodeEscapeChar.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(encodeEscapeChar.charAt(c))  {	  switch(escapeChar.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  encodeEscapeChar	172	None	replace
933	[BUG]  [BUGGY]  switch(c.charAt(escapeChar))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.charAt(escapeChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.charAt(escapeChar))  {	  switch(escapeChar.charAt(c))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	172	None	replace
934	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(R!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(R!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(R!=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
935	[BUG]  [BUGGY]  switch(c  <  =  DISABLED)  {  in.read();  [CE]  illegal  start  of  expression  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED)  {  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
936	[BUG]  [BUGGY]  switch(c  >=  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >=  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >=  DISABLED)  {  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	45	None	replace
937	[BUG]  [BUGGY]  switch(c  ==  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  ==  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  DISABLED)  {  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	45	None	replace
938	[BUG]  [BUGGY]  switch(c!=  DISABLED)  {  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c!=  DISABLED)  {  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c!=  DISABLED)  {  in.read();	  switch(c    &    DISABLED)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	45	None	replace
939	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  int  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    int  commmentStart  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
940	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
941	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    +    DISABLED)    {    int  commmentStart  =  in.read(c);	  	non-compiled	[CE]  case,  default,  or  '}'  expected	60	None	add
942	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  int  r  =  in.read();	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	164	None	replace
943	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  'n':  return  DISABLED;  [CE]  duplicate  case  label  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  'n':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  'n':  return  DISABLED;	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	non-compiled	[CE]  duplicate  case  label	164	None	replace
944	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	38	None	replace
945	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	38	None	replace
946	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read()  +  c;  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read()  +  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read()  +  c;	  final    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	116	None	replace
947	[BUG]  [BUGGY]  Switch(c  <  DISABLED)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  <  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
948	[BUG]  [BUGGY]  Switch(c  >>  DISABLED)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  >>  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  >>  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
949	[BUG]  [BUGGY]  Switch(c  *  DISABLED)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  *  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  *  DISABLED)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
950	[BUG]  [BUGGY]  Switch(in.readEscape())  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.readEscape())  {	  switch(escapeChar.readEscape())    {    	non-compiled	[CE]  ';'  expected	109	None	replace
951	[BUG]  [BUGGY]  switch(out.readEscape())  {  [CE]  cannot  find  symbol  out  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(out.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(out.readEscape())  {	  switch(escapeChar.readEscape())    {    	non-compiled	[CE]  cannot  find  symbol  out	109	None	replace
952	[BUG]  [BUGGY]  switch(c,  DISABLED.charAt(1))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DISABLED.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DISABLED.charAt(1))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
953	[BUG]  [BUGGY]  switch(c,  0,  escapeChar.charAt(0))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  0,  escapeChar.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  0,  escapeChar.charAt(0))  {	  switch(c,    escapeChar.charAt(0))    {    	non-compiled	[CE]  ')'  expected	166	None	replace
954	[BUG]  [BUGGY]  switch(en.readEscape())  {  [CE]  cannot  find  symbol  en  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(en.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(en.readEscape())  {	  switch(escape.readEscape())    {    	non-compiled	[CE]  cannot  find  symbol  en	151	None	replace
955	[BUG]  [BUGGY]  Switch(c.read(),  DISABLED)  {  [CE]  ';'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read(),  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read(),  DISABLED)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
956	[BUG]  [BUGGY]  Switch(c.read()  &  0xff)  {  [CE]  ';'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &  0xff)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
957	[BUG]  [BUGGY]  Switch(c.read()  &  DISABLED)  {  [CE]  ';'  expected  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &  DISABLED)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
958	[BUG]  [BUGGY]  Switch(c.read()  &  0xFFFF)  {  [CE]  ';'  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &  0xFFFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &  0xFFFF)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
959	[BUG]  [BUGGY]  switch(c  &  0xff)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
960	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	154	None	replace
961	[BUG]  [BUGGY]  switch(c  +  0xfff)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xfff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xfff)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
962	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfffF)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
963	[BUG]  [BUGGY]  Switch(c  &  0xff)  {  Record  do  not  match  expected  result(c)  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xff)  {  Record  do  not  match  expected  result(c)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  ';'  expected	154	None	replace
964	[BUG]  [BUGGY]  if(c  <  =  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
965	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
966	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
967	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
968	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(in.read())  {  int  len  =  in.read();  }  [CE]  unclosed  character  literal  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(in.read())  {  int  len  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(in.read())  {  int  len  =  in.read();  }	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  unclosed  character  literal	147	None	replace
969	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(in.read())  {  len  =  in.read();  }  [CE]  unclosed  character  literal  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(in.read())  {  len  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(in.read())  {  len  =  in.read();  }	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  unclosed  character  literal	147	None	replace
970	[BUG]  [BUGGY]  while(in.read()  >  c)  {  len  =  in.read();  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  c)  {  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  c)  {  len  =  in.read();	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	147	None	replace
971	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	35	None	replace
972	[BUG]  [BUGGY]  switch(out,  c.charAt(c))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(out,  c.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(out,  c.charAt(c))  {	  switch(c,    out.charAt(c))    {    	non-compiled	[CE]  ')'  expected	173	None	replace
973	[BUG]  [BUGGY]  switch(delimiter.read(c),  in)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(delimiter.read(c),  in)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(delimiter.read(c),  in)  {	  switch(in.read(c),    delimiter)    {    	non-compiled	[CE]  ')'  expected	194	None	replace
974	[BUG]  [BUGGY]  switch(in.read(),  delimiter)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  delimiter)  {	  switch(in.read(c),    delimiter)    {    	non-compiled	[CE]  ')'  expected	194	None	replace
975	[BUG]  [BUGGY]  switch(c)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Integer  c  =  in.readInt();	  switch(c    &    DISABLED)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	48	None	replace
976	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  Integer  c  =  in.readInt();	  switch(c    &    DISABLED)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	48	None	replace
977	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Integer  c  =  in.readInt(0);  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  Integer  c  =  in.readInt(0);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  Integer  c  =  in.readInt(0);	  switch(c    &    DISABLED)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	48	None	replace
978	[BUG]  [BUGGY]  switch(c  <  =  DISABLED)  {  c  &  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED)  {  c  &  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED)  {  c  &  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
979	[BUG]  [BUGGY]  switch(c)  ==  DISABLED)  {  [CE]  '{'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  ==  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  '{'  expected	47	None	replace
980	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  c  &  DISABLED)  {  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  c  &  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  c  &  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  case,  default,  or  '}'  expected	47	None	replace
981	[BUG]  [BUGGY]  switch(c  &  DISABLED)  <  =  DISABLED)  {  [CE]  '{'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  <  =  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  '{'  expected	47	None	replace
982	[BUG]  [BUGGY]  if(c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	74	None	replace
983	[BUG]  [BUGGY]  if(c  >>  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >>  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >>  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	15	None	replace
984	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xfffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  0xfffF)  {	  switch(c    &    0xfffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	96	6	replace
985	[BUG]  [BUGGY]  switch(c  +  0xfffF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xfffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xfffF)  {	  switch(c    &    0xfffF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	96	6	replace
986	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
987	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >=  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  >=  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
988	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
989	[BUG]  [BUGGY]  switch(escapeSurroundingSpaces.read(c),  in)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escapeSurroundingSpaces.read(c),  in)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeSurroundingSpaces.read(c),  in)  {	  switch(in.read(c),    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	100	None	replace
990	[BUG]  [BUGGY]  switch(in.read(c)&&  escapeSurroundingSpaces)  {  [CE]  no  suitable  method  found  for  read(int)  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c)&&  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c)&&  escapeSurroundingSpaces)  {	  switch(in.read(c),    escapeSurroundingSpaces)    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	100	None	replace
991	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  <  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  <  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  <  'r')  {	  if(c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	16	None	replace
992	[BUG]  [BUGGY]  while(in.read()  >  0)  {  c  =  in.read();  [CE]  orphaned  case  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
993	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  int  c  =  in.read();  }  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  0)  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  0)  {  int  c  =  in.read();  }	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
994	[BUG]  [BUGGY]  while(!in.read())  {  c  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(!in.read())  {  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(!in.read())  {  c  =  in.read();	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
995	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  int  c  =  in.read();  }  else  {  return  c;  }  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  0)  {  int  c  =  in.read();  }  else  {  return  c;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  0)  {  int  c  =  in.read();  }  else  {  return  c;  }	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
996	[BUG]  [BUGGY]  switch(c  <  =  DISABLED)  {  Context.readEscape(in,  c);  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED)  {  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED)  {  Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
997	[BUG]  [BUGGY]  switch(c  >  DISABLED)  {  Context.readEscape(in,  c);  [CE]  case,  default,  or  '}'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >  DISABLED)  {  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >  DISABLED)  {  Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	52	None	replace
998	[BUG]  [BUGGY]  switch(c  +  DISABLED)  {  Context.readEscape(in,  c);  [CE]  case,  default,  or  '}'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  DISABLED)  {  Context.readEscape(in,  c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  DISABLED)  {  Context.readEscape(in,  c);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	52	None	replace
999	[BUG]  [BUGGY]  Switch(in.read(c),  commmentStart,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(c),  commmentStart,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(c),  commmentStart,  ignoreEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	102	None	replace
1000	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  ignorEmptyLines)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  ignorEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  ignorEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
1001	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  ignoredEmptyLines)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  ignoredEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  ignoredEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ')'  expected	102	None	replace
1002	[BUG]  [BUGGY]  switch(c)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  final  int  c  =  in.read();	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	46	None	replace
1003	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  int  c  =  in.read();	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	46	None	replace
1004	[BUG]  [BUGGY]  int  commmentStart  =  out.read();  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  out.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  out.read();	  int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	118	None	replace
1005	[BUG]  [BUGGY]  switch(c  ==  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  ==  null)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  null)  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	9	None	replace
1006	[BUG]  [BUGGY]  switch(c!=  null)  {  [CE]  incomparable  types:  int  and  <null>  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c!=  null)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c!=  null)  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  incomparable  types:  int  and  <null>	9	None	replace
1007	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	152	None	replace
1008	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  final  int  len  =  in.read();  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  final  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  final  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  ';'  expected	152	None	replace
1009	[BUG]  [BUGGY]  switch(c  &  0xff)  {  final  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  final  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  final  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	152	None	replace
1010	[BUG]  [BUGGY]  final  int  delimiter  =  in.read()  -  1;  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  in.read()  -  1;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  in.read()  -  1;	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
1011	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1012	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1013	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1014	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  'commmentStart':  in.read();  [CE]  unclosed  character  literal  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  'commmentStart':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  'commmentStart':  in.read();	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  unclosed  character  literal	163	None	replace
1015	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c  +  1);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c  +  1);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c  +  1);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
1016	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c,  delimiter);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c,  delimiter);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c,  delimiter);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
1017	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(char);  [CE]  '.class'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(char);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(char);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  '.class'  expected	159	None	replace
1018	[BUG]  [BUGGY]  switch(c.read()  &&!commmentSurroundingSpaces.isEmpty())  {  [CE]  int  cannot  be  dereferenced  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&!commmentSurroundingSpaces.isEmpty())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&!commmentSurroundingSpaces.isEmpty())  {	  switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
1019	[BUG]  [BUGGY]  switch(c.read()  &&!commmentSurroundingSpaces.contains(c))  {  [CE]  int  cannot  be  dereferenced  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&!commmentSurroundingSpaces.contains(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&!commmentSurroundingSpaces.contains(c))  {	  switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
1020	[BUG]  [BUGGY]  switch(c.read()  &&  Character.isDigit(c))  {  [CE]  int  cannot  be  dereferenced  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&  Character.isDigit(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&  Character.isDigit(c))  {	  switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
1021	[BUG]  [BUGGY]  switch(c.read()  &&  Character.isDigit(in.charAt(c)))  {  [CE]  int  cannot  be  dereferenced  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &&  Character.isDigit(in.charAt(c)))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &&  Character.isDigit(in.charAt(c)))  {	  switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	53	None	replace
1022	[BUG]  [BUGGY]  switch(c  &  0xfff)  ==  0xfff)  {  [CE]  '{'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  ==  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  ==  0xfff)  {	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  '{'  expected	209	None	replace
1023	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  case  'e':  return  EAST;  [CE]  cannot  find  symbol  EAST  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  case  'e':  return  EAST;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  case  'e':  return  EAST;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  cannot  find  symbol  EAST	209	None	replace
1024	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  case  'r':  return  CR;  [CE]  duplicate  case  label  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  case  'r':  return  CR;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  duplicate  case  label	209	None	replace
1025	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  case  'e':  return  EXPR_RESULT;  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  case  'e':  return  EXPR_RESULT;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  case  'e':  return  EXPR_RESULT;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	209	None	replace
1026	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  case  'r':  return  FF;  [CE]  duplicate  case  label  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  case  'r':  return  FF;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  case  'r':  return  FF;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  duplicate  case  label	209	None	replace
1027	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'e':  return  EAST;  [CE]  cannot  find  symbol  EAST  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'e':  return  EAST;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'e':  return  EAST;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  cannot  find  symbol  EAST	209	None	replace
1028	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  case  'r':  return  RB;  [CE]  cannot  find  symbol  RB  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  case  'r':  return  RB;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  case  'r':  return  RB;	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  cannot  find  symbol  RB	209	None	replace
1029	[BUG]  [BUGGY]  switch(in.read(c,  COMMENT_START,  DISABLED))  {  [CE]  cannot  find  symbol  COMMENT_START  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  COMMENT_START,  DISABLED))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  COMMENT_START,  DISABLED))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  cannot  find  symbol  COMMENT_START	170	None	replace
1030	[BUG]  [BUGGY]  switch(in.read(c,  DEPRECATED))  {  [CE]  cannot  find  symbol  DEPRECATED  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  DEPRECATED))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  DEPRECATED))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  cannot  find  symbol  DEPRECATED	170	None	replace
1031	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c  +  1);  break;  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c  +  1);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c  +  1);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
1032	[BUG]  [BUGGY]  switch(c)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Integer  c  =  in.read();	  switch(c    &    DISABLED)    {    Integer    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	50	None	replace
1033	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  Integer  c  =  in.read();	  switch(c    &    DISABLED)    {    Integer    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	50	None	replace
1034	[BUG]  [BUGGY]  Switch(c  &  DISABLED)  {  final  int  c  =  in.read();  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED)  {  final  int  c  =  in.read();	  switch(c    &    DISABLED)    {    Integer    c    =    in.read();    	non-compiled	[CE]  ';'  expected	50	None	replace
1035	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  't'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
1036	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
1037	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  char  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	70	None	replace
1038	[BUG]  [BUGGY]  switch(c  &  0xff)  {  final  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  final  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  final  char  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	70	None	replace
1039	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  final  char  c  =  in.read();  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  final  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  final  char  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  ';'  expected	70	None	replace
1040	[BUG]  [BUGGY]  switch(in.read())  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  char  c  =  in.read();	  switch(c    &    0xffff)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	70	None	replace
1041	[BUG]  [BUGGY]  switch(c  &  DISABLED  ||  c!=  commmentStart)  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  ||  c!=  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  ||  c!=  commmentStart)  {	  switch(c    &    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	64	None	replace
1042	[BUG]  [BUGGY]  switch(in.read())  {  case  'r':  return  CR;  [CE]  duplicate  case  label  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  duplicate  case  label	145	None	replace
1043	[BUG]  [BUGGY]  int  case  'r':  return  CR;  [CE]  not  a  statement  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  case  'r':  return  CR;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  case  'r':  return  CR;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  not  a  statement	145	None	replace
1044	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  0xffff)  {	  switch(c    &    0xfffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	89	6	replace
1045	[BUG]  [BUGGY]  switch(c  +  0xffff)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xffff)  {	  switch(c    &    0xfffff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	89	6	replace
1046	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	207	None	replace
1047	[BUG]  [BUGGY]  if(c!=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	207	None	replace
1048	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  <  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  <  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  <  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	207	None	replace
1049	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	207	None	replace
1050	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart!=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	207	None	replace
1051	[BUG]  [BUGGY]  switch(c  &&  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &&  c  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &&  c  <  =  DISABLED)  {	  switch(in.read()    &&    c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	190	None	replace
1052	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  <  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  <  'r'  ||  c  >  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  <  'r'  ||  c  >  'n'  ||  c  >=  't')  {	  if(c!=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	42	None	replace
1053	[BUG]  [BUGGY]  Switch(c))  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c))  {	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
1054	[BUG]  [BUGGY]  Switch(c),  DETERMINISTIC,  DISABLED  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DETERMINISTIC,  DISABLED  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DETERMINISTIC,  DISABLED  {	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
1055	[BUG]  [BUGGY]  int  delimiter  =  in.read()  &  c;  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  in.read()  &  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  in.read()  &  c;	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
1056	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
1057	[BUG]  [BUGGY]  switch(in.read(c),  DETERMINISTIC_SOURCE)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  DETERMINISTIC_SOURCE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  DETERMINISTIC_SOURCE)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
1058	[BUG]  [BUGGY]  switch(in.read(),  DISABLED)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  DISABLED)  {	  switch(in.read(c),    DISABLED)    {    	non-compiled	[CE]  ')'  expected	195	None	replace
1059	[BUG]  [BUGGY]  switch(in.read()).read()  {  [CE]  '{'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()).read()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()).read()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
1060	[BUG]  [BUGGY]  switch(c).isEmpty()  {  [CE]  '{'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).isEmpty()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).isEmpty()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
1061	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1062	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1063	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1064	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  commmentStart  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
1065	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
1066	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  in.read()  -  1  {  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  in.read()  -  1  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    in.read()  -  1  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
1067	[BUG]  [BUGGY]  switch(c)  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	148	None	replace
1068	[BUG]  [BUGGY]  while(c  <  DISABLED)  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  DISABLED)  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  DISABLED)  {  if(c  ==  'n'  ||  c  ==  'r')  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  orphaned  case	148	None	replace
1069	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1070	[BUG]  [BUGGY]  switch(c,  char.charAt(0))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  char.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  char.charAt(0))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
1071	[BUG]  [BUGGY]  switch(c,  Character.toLowerCase(char.charAt(0)))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  Character.toLowerCase(char.charAt(0)))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  Character.toLowerCase(char.charAt(0)))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
1072	[BUG]  [BUGGY]  switch(c,  Character.toLowerCase(labelChar))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  Character.toLowerCase(labelChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  Character.toLowerCase(labelChar))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
1073	[BUG]  [BUGGY]  switch(c,  char.charAt(1))  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  char.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  char.charAt(1))  {	  switch(c,    c.charAt(0))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
1074	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  -  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  -  DISABLED)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
1075	[BUG]  [BUGGY]  switch(c  -  DISABLED)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  -  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  -  DISABLED)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
1076	[BUG]  [BUGGY]  Switch(c,  DETERMINISTIC_SYNTHETIC)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DETERMINISTIC_SYNTHETIC)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DETERMINISTIC_SYNTHETIC)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1077	[BUG]  [BUGGY]  Switch(c,  DETERMINISTIC_SOURCE)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DETERMINISTIC_SOURCE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DETERMINISTIC_SOURCE)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1078	[BUG]  [BUGGY]  if(c  =='}  ')  {  switch(in.read())  {  case  =  in.read();  }  [CE]  unclosed  character  literal  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  =='}  ')  {  switch(in.read())  {  case  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  =='}  ')  {  switch(in.read())  {  case  =  in.read();  }	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  unclosed  character  literal	188	None	replace
1079	[BUG]  [BUGGY]  switch(c)  {  int  case  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  int  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  int  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	188	None	replace
1080	[BUG]  [BUGGY]  Switch(c)  {  case  =  in.read();  [CE]  ';'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c)  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c)  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  ';'  expected	188	None	replace
1081	[BUG]  [BUGGY]  switch(in.read())  {  case  =  in.read();  [CE]  illegal  start  of  expression  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1082	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	203	None	replace
1083	[BUG]  [BUGGY]  switch(c)  {  DISABLED  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  DISABLED  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  DISABLED  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	49	None	replace
1084	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  char  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	49	None	replace
1085	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Char  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  Char  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  Char  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	49	None	replace
1086	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  String  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  String  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  String  c  =  in.read();	  switch(c    &    DISABLED)    {    char    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	49	None	replace
1087	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	17	None	replace
1088	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >>  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(in.read()  &  c  >>  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	compilable	  [FE]  (entry  2)  	133	12	replace
1089	[BUG]  [BUGGY]  switch(in.read()  &  c  >>  '9')  {  [FE]  (entry  2)  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &  c  >>  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &  c  >>  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	compilable	  [FE]  (entry  2)  	133	12	replace
1090	[BUG]  [BUGGY]  switch(in.read()  +  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  +  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  +  c  <  =  '9')  {	  switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1091	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  Integer  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  Integer  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  Integer  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	68	None	replace
1092	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Integer  c  =  in.readInt(0);  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Integer  c  =  in.readInt(0);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Integer  c  =  in.readInt(0);	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	68	None	replace
1093	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  int  c  =  in.readInt();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  int  c  =  in.readInt();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  int  c  =  in.readInt();	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	68	None	replace
1094	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Integer  c  =  in.readInt(0);  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Integer  c  =  in.readInt(0);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Integer  c  =  in.readInt(0);	  switch(c    &    0xffff)    {    Integer    c    =    in.readInt();    	non-compiled	[CE]  case,  default,  or  '}'  expected	68	None	replace
1095	[BUG]  [BUGGY]  Switch(c  &  0xffff),  case  ';')  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff),  case  ';')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff),  case  ';')  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
1096	[BUG]  [BUGGY]  Switch(c  &  0xffff),  commmentStart)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff),  commmentStart)  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
1097	[BUG]  [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  not  a  statement	212	None	replace
1098	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
1099	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  not  a  statement	212	None	replace
1100	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  not  a  statement  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  not  a  statement	212	None	replace
1101	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1102	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1103	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  Document  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  Document  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1104	[BUG]  [BUGGY]  Switch(c),  commmentStart,  escapeEmptyLines);  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  commmentStart,  escapeEmptyLines);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  commmentStart,  escapeEmptyLines);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
1105	[BUG]  [BUGGY]  Char(c),  commmentStart,  escapeSurroundingSpaces);  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Char(c),  commmentStart,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Char(c),  commmentStart,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
1106	[BUG]  [BUGGY]  Switch(c,  escapeSurroundingSpaces),  commmentStart);  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeSurroundingSpaces),  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeSurroundingSpaces),  commmentStart);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
1107	[BUG]  [BUGGY]  Switch(c,  commmentStart,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
1108	[BUG]  [BUGGY]  switch(c,  in.charAt(2))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.charAt(2))  {	  switch(c.charAt(2))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
1109	[BUG]  [BUGGY]  Switch(in.read(),  Integer.MAX_VALUE)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  Integer.MAX_VALUE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  Integer.MAX_VALUE)  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
1110	[BUG]  [BUGGY]  Switch(in.read(),  in.read()),  c  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  in.read()),  c  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read()),  c  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
1111	[BUG]  [BUGGY]  switch(in.read(c,  COMmmentStart))  {  [CE]  cannot  find  symbol  COMmmentStart  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  COMmmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  COMmmentStart))  {	  switch(in.read(c,    escapeSurroundingSpaces))    {    	non-compiled	[CE]  cannot  find  symbol  COMmmentStart	101	None	replace
1112	[BUG]  [BUGGY]  Switch(c),  DISABLED,  COMmmentStart);  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  COMmmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  COMmmentStart);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1113	[BUG]  [BUGGY]  Char(c),  DISABLED,  DISABLED);  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Char(c),  DISABLED,  DISABLED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Char(c),  DISABLED,  DISABLED);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1114	[BUG]  [BUGGY]  Switch(c),  DISABLED,  COMMENTS);  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  COMMENTS);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  COMMENTS);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1115	[BUG]  [BUGGY]  ble  delimiter  =  in.read();  break;  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  ble  delimiter  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	ble  delimiter  =  in.read();  break;	  int    delimiter    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	182	None	replace
1116	[BUG]  [BUGGY]  final  char  commmentStart  =  this.in.read();  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  this.in.read();	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
1117	[BUG]  [BUGGY]  final  Character  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  Character  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  Character  commmentStart  =  in.read();	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
1118	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	replace
1119	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
1120	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  Document  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  Document  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
1121	[BUG]  [BUGGY]  Switch(in.read()  *  c)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  *  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  *  c)  {	  Switch(in.read()    +    c)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
1122	[BUG]  [BUGGY]  Switch(in.read()  +  c,  escape)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  +  c,  escape)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  +  c,  escape)  {	  Switch(in.read()    +    c)    {    	non-compiled	[CE]  ';'  expected	87	None	replace
1123	[BUG]  [BUGGY]  switch(escape.read(c,  escape))  {  [CE]  char  cannot  be  dereferenced  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escape.read(c,  escape))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escape.read(c,  escape))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	169	None	replace
1124	[BUG]  [BUGGY]  switch(in.read(c,  escape,  DISABLED))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape,  DISABLED))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape,  DISABLED))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	169	None	replace
1125	[BUG]  [BUGGY]  switch(in.read(c,  escape,  commmentEnd))  {  [CE]  cannot  find  symbol  commmentEnd  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape,  commmentEnd))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape,  commmentEnd))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  cannot  find  symbol  commmentEnd	169	None	replace
1126	[BUG]  [BUGGY]  switch(in.read())  {  case  'n':  return  DISABLED;  [CE]  duplicate  case  label  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  'n':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  'n':  return  DISABLED;	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  duplicate  case  label	189	None	replace
1127	[BUG]  [BUGGY]  switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	206	None	replace
1128	[BUG]  [BUGGY]  switch(c)  {  if(c  <  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  <  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  <  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	206	None	replace
1129	[BUG]  [BUGGY]  switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  r;  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	206	None	replace
1130	[BUG]  [BUGGY]  Switch(c,  commmentEnd,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentEnd,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentEnd,  escapeEmptyLines)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
1131	[BUG]  [BUGGY]  Switch(c,  out,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  out,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  out,  escapeSurroundingSpaces)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
1132	[BUG]  [BUGGY]  Switch(c,  commmentStart,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentStart,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentStart,  escapeEmptyLines)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
1133	[BUG]  [BUGGY]  char  c  =  in.readCharAt(c);  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.readCharAt(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.readCharAt(c);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
1134	[BUG]  [BUGGY]  int  commmentStart  =  out.read();  break;  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  out.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  out.read();  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
1135	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
1136	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
1137	[BUG]  [BUGGY]  switch(in.read())  {  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  if(c!=  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	13	None	replace
1138	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  0xffFF)  {	  switch(c    &    0xffFF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	98	6	replace
1139	[BUG]  [BUGGY]  switch(c  +  0xffFF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  0xffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  0xffFF)  {	  switch(c    &    0xffFF)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	98	6	replace
1140	[BUG]  [BUGGY]  switch(c)  {  Record  do  not  match  expected  result(c  &  0xfff)  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  Record  do  not  match  expected  result(c  &  0xfff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  Record  do  not  match  expected  result(c  &  0xfff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
1141	[BUG]  [BUGGY]  switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [CE]  case,  default,  or  '}'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xfff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
1142	[BUG]  [BUGGY]  Switch(c)  {  Record  do  not  match  expected  result(c  &  0xfff)  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c)  {  Record  do  not  match  expected  result(c  &  0xfff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c)  {  Record  do  not  match  expected  result(c  &  0xfff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  ';'  expected	73	None	replace
1143	[BUG]  [BUGGY]  Switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [CE]  ';'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xfff)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xff)  {  Record  do  not  match  expected  result(c  &  0xfff)	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  ';'  expected	73	None	replace
1144	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1145	[BUG]  [BUGGY]  switch(c)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1146	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1147	[BUG]  [BUGGY]  if(c  <  0)  {  switch(c)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  0)  {  switch(c)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  0)  {  switch(c)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1148	[BUG]  [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	211	None	replace
1149	[BUG]  [BUGGY]  switch(c)  {  if(c  <  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  <  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  <  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1150	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
1151	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  DISABLED  ||  c  ==  'n')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
1152	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c)  {  case  '.':  return  DISABLED;	  switch(in.read())    {    int    delimiter    =    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	186	3	replace
1153	[BUG]  [BUGGY]  switch(c)  {  case  '.':  return  DISABLED;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  '.':  return  DISABLED;	  switch(in.read())    {    int    delimiter    =    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	186	3	replace
1154	[BUG]  [BUGGY]  switch(c)  {  case  '.':  delimiter  =  in.read();  [CE]  cannot  assign  a  value  to  final  variable  delimiter  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  '.':  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  delimiter	186	None	replace
1155	[BUG]  [BUGGY]  Switch(c),  DISABLED)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED)  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
1156	[BUG]  [BUGGY]  Switch(c),  out,  in.read())  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  out,  in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  out,  in.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
1157	[BUG]  [BUGGY]  switch(c  &  0xfff)  ==  0xffff)  {  [CE]  '{'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  ==  0xffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  ==  0xffff)  {	  switch(c    &    0xffff)    {    c    &    0xfffff)    {    	non-compiled	[CE]  '{'  expected	71	None	replace
1158	[BUG]  [BUGGY]  if(c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
1159	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.'  ||  c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.'  ||  c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
1160	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.'  ||  c  ==  ',')  {  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
1161	[BUG]  [BUGGY]  if(c  ==  '.')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.')  {  final  int  R  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	14	None	replace
1162	[BUG]  [BUGGY]  switch(c)  {  case  '.':  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [CE]  incomparable  types:  int  and  <null>  [FE]                              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  '.':  final  int  r  =  in.read();  if(r!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	14	None	replace
1163	[BUG]  [BUGGY]  switch(c,  escape.charAt(c))  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escape.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escape.charAt(c))  {	  switch(c,    delimiter.charAt(c))    {    	non-compiled	[CE]  ')'  expected	197	None	replace
1164	[BUG]  [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
1165	[BUG]  [BUGGY]  if(c  <  'r'  ||  c  >  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'r'  ||  c  >  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'r'  ||  c  >  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
1166	[BUG]  [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  >  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
1167	[BUG]  [BUGGY]  switch(c)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1168	[BUG]  [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
1169	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1170	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
1171	[BUG]  [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
1172	[BUG]  [BUGGY]  if(c  <  0)  {  switch(c)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  0)  {  switch(c)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  0)  {  switch(c)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1173	[BUG]  [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [CE]  not  a  statement  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
1174	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1175	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >=  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	181	None	replace
1176	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  Integer  c  =  in.read();	  switch(c    &    0xffff)    {    Integer    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	69	None	replace
1177	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  final  Integer  c  =  in.read();  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  final  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  final  Integer  c  =  in.read();	  switch(c    &    0xffff)    {    Integer    c    =    in.read();    	non-compiled	[CE]  ';'  expected	69	None	replace
1178	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'r'  ||  c  ==  'A')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'r'  ||  c  ==  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'r'  ||  c  ==  'A')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
1179	[BUG]  [BUGGY]  switch(c.readEscape(),  DEPRECATED)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.readEscape(),  DEPRECATED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.readEscape(),  DEPRECATED)  {	  switch(c.readEscape())    {    	non-compiled	[CE]  ')'  expected	106	None	replace
1180	[BUG]  [BUGGY]  switch(in.read(),  c  -  1)  {  [CE]  ')'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c  -  1)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
1181	[BUG]  [BUGGY]  switch(in.read(),  c  &  0xFF)  {  [CE]  ')'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c  &  0xFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c  &  0xFF)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
1182	[BUG]  [BUGGY]  Switch(c,  in.read(),  DISABLED)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.read(),  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.read(),  DISABLED)  {	  Switch(c,    in.read())    {    	non-compiled	[CE]  ';'  expected	85	None	replace
1183	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  c;  }  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  0)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  c;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  0)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  c;  }	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
1184	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  c;  }  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  c)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  c;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  c)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  c;  }	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
1185	[BUG]  [BUGGY]  while(in.read()  >  0)  {  r  =  in.read();  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
1186	[BUG]  [BUGGY]  if(in.read()  ==  0)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  CR;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  0)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  CR;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  0)  {  int  r  =  in.read();  }  else  {  final  int  c  =  in.read();  return  CR;  }	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
1187	[BUG]  [BUGGY]  switch(c  <  =  DISABLED  ||  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  =  DISABLED  ||  c  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  =  DISABLED  ||  c  <  =  DISABLED)  {	  switch(c    &    DISABLED    ||    c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1188	[BUG]  [BUGGY]  switch(c  &  DISABLED  &&  c  <  =  DISABLED)  {  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED  &&  c  <  =  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED  &&  c  <  =  DISABLED)  {	  switch(c    &    DISABLED    ||    c    <    =    DISABLED)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1189	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
1190	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	149	None	replace
1191	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  in.read())  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
1192	[BUG]  [BUGGY]  switch(in.read()  &&  in.read()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  in.read()  <  =  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  in.read()  <  =  0)  {	  switch(in.read()    &&    in.read()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	192	None	replace
1193	[BUG]  [BUGGY]  switch(in,  out.readEscape())  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  out.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  out.readEscape())  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	150	None	replace
1194	[BUG]  [BUGGY]  switch(in,  in.readChar())  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in,  in.readChar())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in,  in.readChar())  {	  switch(in,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	150	None	replace
1195	[BUG]  [BUGGY]  switch(c,  escape.charAt(1))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  escape.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  escape.charAt(1))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ')'  expected	177	None	replace
1196	[BUG]  [BUGGY]  switch(in.read(c),  escapeEmptyLines,  commmentStart)  {  [CE]  ')'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeEmptyLines,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeEmptyLines,  commmentStart)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
1197	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  skipSurroundingSpaces)  {  [CE]  ')'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  skipSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  skipSurroundingSpaces)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
1198	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'a')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
1199	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'e')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'e')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
1200	[BUG]  [BUGGY]  while(in.read()  >  commmentStart)  {  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  commmentStart)  {  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  commmentStart)  {  commmentStart  =  in.read();	  switch(in.read())    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	144	None	replace
1201	[BUG]  [BUGGY]  while(in.read()  <  commmentStart)  {  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  <  commmentStart)  {  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  <  commmentStart)  {  commmentStart  =  in.read();	  switch(in.read())    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	144	None	replace
1202	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  int  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  int  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    int  commmentStart  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1203	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  Integer  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  Integer  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    Integer  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1204	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    int  commmentStart  =  in.read(c);	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1205	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1206	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1207	[BUG]  [BUGGY]  final  int  len  =  in.readFully();  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  len  =  in.readFully();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  len  =  in.readFully();	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
1208	[BUG]  [BUGGY]  switch(in.read(c),  escapeChar,  commmentStart)  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeChar,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeChar,  commmentStart)  {	  switch(in.read(c),    escapeChar)    {    	non-compiled	[CE]  ')'  expected	171	None	replace
1209	[BUG]  [BUGGY]  if(c  ==  '.')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.')  {  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	10	None	replace
1210	[BUG]  [BUGGY]  switch(c)  {  case  '.':  in.read();  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  cannot  find  symbol  R  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  in.read();  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  '.':  in.read();  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  cannot  find  symbol  R	10	None	replace
1211	[BUG]  [BUGGY]  if(c  <  =  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1212	[BUG]  [BUGGY]  switch(in.readEscape(),  c  +  1)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readEscape(),  c  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readEscape(),  c  +  1)  {	  switch(in.readEscape(),    c)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
1213	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  not  a  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1214	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  <  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  <  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  <  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1215	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT  [CE]  not  a  statement  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1216	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COM  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COM  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COM	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1217	[BUG]  [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  [CE]  not  a  statement  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  default:  switch(c  &  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1218	[BUG]  [BUGGY]  switch(c  &&  c  <  =  '9')  {  [CE]  illegal  start  of  expression  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &&  c  <  =  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &&  c  <  =  '9')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1219	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a')  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1220	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1221	[BUG]  [BUGGY]  switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	204	None	replace
1222	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  >=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1223	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1224	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  int  commmentStart  =  in.read(c);  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  int  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  int  commmentStart  =  in.read(c);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	165	None	replace
1225	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c  +  1);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c  +  1);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	165	None	replace
1226	[BUG]  [BUGGY]  switch(c,  getCharAt(in.readEscape()))  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getCharAt(in.readEscape()))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(in.readEscape()))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
1227	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  orphaned  case	185	None	replace
1228	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'n'  ||  c  >=  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  orphaned  case	185	None	replace
1229	[BUG]  [BUGGY]  switch(c  >  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
1230	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >>  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
1231	[BUG]  [BUGGY]  switch(c  ==  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  ==  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  ==  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
1232	[BUG]  [BUGGY]  switch(c  >=  DISABLED)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >=  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  >=  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  case,  default,  or  '}'  expected	51	None	replace
1233	[BUG]  [BUGGY]  switch(in.read(0))  {  [CE]  no  suitable  method  found  for  read(int)  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(0))  {	  switch(in.read())    {    switch(in.read())    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	7	None	replace
1234	[BUG]  [BUGGY]  switch(c).clear()  {  [CE]  '{'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).clear()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).clear()  {	  switch(in.read())    {    switch(in.read())    {    	non-compiled	[CE]  '{'  expected	7	None	replace
1235	[BUG]  [BUGGY]  switch(c,  out.readEscape())  {  [CE]  ')'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  out.readEscape())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  out.readEscape())  {	  switch(c,    in.readEscape())    {    	non-compiled	[CE]  ')'  expected	110	None	replace
1236	[BUG]  [BUGGY]  Switch(c  &  0xfff)  {  final  int  c  =  in.read();  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff)  {  final  int  c  =  in.read();	  switch(c    &    0xffff)    {    int    c    =    in.read();    	non-compiled	[CE]  ';'  expected	67	None	replace
1237	[BUG]  [BUGGY]  switch(c  &  0xff)  {  final  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  final  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  final  int  c  =  in.read();	  switch(c    &    0xffff)    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	67	None	replace
1238	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c  +  1);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c  +  1);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c  +  1);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
1239	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  DEPRECATED);  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  DEPRECATED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  DEPRECATED);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
1240	[BUG]  [BUGGY]  Switch(c,  escapeStart)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  escapeStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  escapeStart)  {	  Switch(c,    commmentStart)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
1241	[BUG]  [BUGGY]  if(c  <  =  '0'  ||  c  >  '9')  {  switch(in.read())  {  [CE]  illegal  start  of  expression  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  '0'  ||  c  >  '9')  {  switch(in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  '0'  ||  c  >  '9')  {  switch(in.read())  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1242	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  switch(in.read())  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  'r')  {  switch(in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r')  {  switch(in.read())  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1243	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  switch(in.read())  {  [CE]  illegal  start  of  expression  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >=  'r')  {  switch(in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >=  'r')  {  switch(in.read())  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1244	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  't')  {  switch(in.read())  {  [CE]  illegal  start  of  expression  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  't')  {  switch(in.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  't')  {  switch(in.read())  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1245	[BUG]  [BUGGY]  while(c  <  in.read())  {  switch(c)  {  [CE]  illegal  start  of  expression  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(c  <  in.read())  {  switch(c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(c  <  in.read())  {  switch(c)  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1246	[BUG]  [BUGGY]  switch(in.read(),  commmentStart)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  commmentStart)  {	  switch(in.read(c),    commmentStart)    {    	non-compiled	[CE]  ')'  expected	104	None	replace
1247	[BUG]  [BUGGY]  Switch(c,  commmentSurroundingSpaces,  ignoreEmptyLines)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentSurroundingSpaces,  ignoreEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentSurroundingSpaces,  ignoreEmptyLines)  {	  Switch(c,    commmentSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
1248	[BUG]  [BUGGY]  Switch(c,  ignoreSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  ignoreSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  ignoreSurroundingSpaces)  {	  Switch(c,    commmentSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
1249	[BUG]  [BUGGY]  char  c  =  in.read(Character.EXPR_RESULT);  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.read(Character.EXPR_RESULT);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.read(Character.EXPR_RESULT);	  char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	138	None	replace
1250	[BUG]  [BUGGY]  switch(delimiter.read(c,  c))  {  [CE]  char  cannot  be  dereferenced  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(delimiter.read(c,  c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(delimiter.read(c,  c))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	196	None	replace
1251	[BUG]  [BUGGY]  switch(in.read(c,  escape,  delimiter))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  escape,  delimiter))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  escape,  delimiter))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	196	None	replace
1252	[BUG]  [BUGGY]  switch(in.read(c,  commmentStart,  escapeChar))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  commmentStart,  escapeChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  commmentStart,  escapeChar))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	196	None	replace
1253	[BUG]  [BUGGY]  switch(c.read(delimiter,  commmentStart))  {  [CE]  int  cannot  be  dereferenced  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(delimiter,  commmentStart))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(delimiter,  commmentStart))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  int  cannot  be  dereferenced	196	None	replace
1254	[BUG]  [BUGGY]  switch(in.charAt(1))  {  [CE]  cannot  find  symbol  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.charAt(1))  {	  switch(in.charAt(0))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
1255	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'a')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
1256	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  '-')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  '-')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  '-')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
1257	[BUG]  [BUGGY]  if(c  <  =  'e'  ||  c  >  'E')  {  [CE]  illegal  start  of  expression  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'e'  ||  c  >  'E')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'e'  ||  c  >  'E')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1258	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'p')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
1259	[BUG]  [BUGGY]  Switch(in.read(),  c  +  1)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c  +  1)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
1260	[BUG]  [BUGGY]  Switch(in.read(),  commmentStart)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  commmentStart)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
1261	[BUG]  [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  't'  ||  c  >  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  't'  ||  c  >  'n'  ||  c  >=  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
1262	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1263	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  Context.codeBug();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    Context.codeBug();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1264	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  Record  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  Record  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    Record  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1265	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  Document  do  not  match  expected  result(c)  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  Document  do  not  match  expected  result(c)  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    Document  do  not  match  expected  result(c)	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1266	[BUG]  [BUGGY]  switch(c  &  0xff)  {  int  len  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    int  len  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
1267	[BUG]  [BUGGY]  switch(c  &  0xff)  {  int  r  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    int  r  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
1268	[BUG]  [BUGGY]  switch(in.read(c),  ignoreEmptySpaces)  {  [CE]  ')'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  ignoreEmptySpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  ignoreEmptySpaces)  {	  switch(in.read(c),    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
1269	[BUG]  [BUGGY]  switch(in.read(c),  escapeEscapes)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  escapeEscapes)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  escapeEscapes)  {	  switch(in.read(c),    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	103	None	replace
1270	[BUG]  [BUGGY]  switch(c.read(1))  {  [CE]  int  cannot  be  dereferenced  [FE]    (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read(1))  {	  switch(in.read()    -    1)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	56	None	replace
1271	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  -  1)  {	  switch(in.read()    -    1)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	56	6	replace
1272	[BUG]  [BUGGY]  switch(c  -  1)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  -  1)  {	  switch(in.read()    -    1)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	56	6	replace
1273	[BUG]  [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
1274	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  >=  'r')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    'r')    {    	non-compiled	[CE]  orphaned  case	179	None	replace
1275	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
1276	[BUG]  [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a')  {  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1277	[BUG]  [BUGGY]  Switch(in,  c,  DISABLED)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c,  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c,  DISABLED)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1278	[BUG]  [BUGGY]  Switch(in,  c),  DISABLED  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c),  DISABLED  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c),  DISABLED  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1279	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  final  int  in  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  final  int  in  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  final  int  in  =  in.read();	  switch(c    &    0xffff)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	66	None	replace
1280	[BUG]  [BUGGY]  switch(c  &  0xfff)  ==  in.read();  [CE]  '{'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  ==  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  ==  in.read();	  switch(c    &    0xffff)    {    in.read();    	non-compiled	[CE]  '{'  expected	66	None	replace
1281	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	34	None	replace
1282	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  ==  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	39	None	replace
1283	[BUG]  [BUGGY]  switch(c].read())  {  [CE]  ')'  expected  [FE]    (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c].read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c].read())  {	  switch(in.read()    -    1)    {    	non-compiled	[CE]  ')'  expected	56	None	replace
1284	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'r':  in.read();  [CE]  duplicate  case  label  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'r':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'r':  in.read();	  switch(c    &    0xffff)    {    int    r    =    in.read();    	non-compiled	[CE]  duplicate  case  label	153	None	replace
1285	[BUG]  [BUGGY]  Switch(c),  DISABLED,  DISABLED,  commmentStart);  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  DISABLED,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  DISABLED,  commmentStart);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1286	[BUG]  [BUGGY]  Character.toLowerCase(c),  DISABLED,  DISABLED);  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Character.toLowerCase(c),  DISABLED,  DISABLED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Character.toLowerCase(c),  DISABLED,  DISABLED);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1287	[BUG]  [BUGGY]  Switch(c),  DISABLED,  DISABLED,  delimiter);  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  DISABLED,  delimiter);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  DISABLED,  delimiter);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1288	[BUG]  [BUGGY]  Character.toCharArray(c),  DISABLED,  DISABLED);  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Character.toCharArray(c),  DISABLED,  DISABLED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Character.toCharArray(c),  DISABLED,  DISABLED);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1289	[BUG]  [BUGGY]  Switch(c),  DISABLED,  DISABLED,  commmentEnd);  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  DISABLED,  commmentEnd);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  DISABLED,  commmentEnd);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1290	[BUG]  [BUGGY]  Switch(c),  DISABLED,  DISABLED,  COMmmentStart);  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED,  DISABLED,  COMmmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED,  DISABLED,  COMmmentStart);	  Switch(c),    DISABLED,    DISABLED);    	non-compiled	[CE]  ';'  expected	214	None	replace
1291	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  c  =  in.read()  -  1;  [CE]  case,  default,  or  '}'  expected  [FE]    (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  c  =  in.read()  -  1;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  c  =  in.read()  -  1;	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
1292	[BUG]  [BUGGY]  switch(in.read()  -  1)  {  int  switch(c  -  1)  {  [CE]  case,  default,  or  '}'  expected  [FE]      (entry  2)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  -  1)  {  int  switch(c  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()    -    1)    {    int  switch(c  -  1)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	55	None	add
1293	[BUG]  [BUGGY]  Switch(c,  DISABLED,  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
1294	[BUG]  [BUGGY]  Switch(c,  delimiter),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  delimiter),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  delimiter),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c),    commmentStart,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
1295	[BUG]  [BUGGY]  Switch(c,  delimiter.charAt(0))  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  delimiter.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  delimiter.charAt(0))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ';'  expected	177	None	replace
1296	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(3))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter.charAt(3))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(3))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ')'  expected	177	None	replace
1297	[BUG]  [BUGGY]  switch(c,  delimiter.charAt(8))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  delimiter.charAt(8))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  delimiter.charAt(8))  {	  switch(c,    delimiter.charAt(0))    {    	non-compiled	[CE]  ')'  expected	177	None	replace
1298	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  default);  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  default);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  Context.readEscape(in,  c,  default);	  switch(c    &    DISABLED)    {    Context.readEscape(in,    c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	52	None	replace
1299	[BUG]  [BUGGY]  double  commmentStart  =  in.read();  break;  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  double  commmentStart  =  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	double  commmentStart  =  in.read();  break;	  int    commmentStart    =    in.read();    break;    	non-compiled	[CE]  orphaned  case	183	None	replace
1300	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xF)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
1301	[BUG]  [BUGGY]  switch(c  &  0xF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xF)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	6	replace
1302	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xFFFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  0xFFFF)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	4	replace
1303	[BUG]  [BUGGY]  switch(c  &  0xFFFF)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xFFFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xFFFF)  {	  switch(c    &    0xff)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	157	4	replace
1304	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	82	None	replace
1305	[BUG]  [BUGGY]  Switch(c,  DECLUSIVE_SURroundingSpaces)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DECLUSIVE_SURroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DECLUSIVE_SURroundingSpaces)  {	  Switch(c,    commmentStart)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
1306	[BUG]  [BUGGY]  final  int  delimiter  =  this.in.read();  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  delimiter  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  delimiter  =  this.in.read();	  final    int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	120	None	replace
1307	[BUG]  [BUGGY]  switch(readChar.read())  {  [CE]  cannot  find  symbol  readChar  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(readChar.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(readChar.read())  {	  switch(c.read())    {    	non-compiled	[CE]  cannot  find  symbol  readChar	53	None	replace
1308	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff),  case,  default,  or'}  '  [CE]  case,  default,  or  '}'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff),  case,  default,  or'}  '  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff),  case,  default,  or'}  '	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
1309	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff),  default,  or'}  '  [CE]  case,  default,  or  '}'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff),  default,  or'}  '  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c  &  0xfff),  default,  or'}  '	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c    &    0xffff)    	non-compiled	[CE]  case,  default,  or  '}'  expected	73	None	replace
1310	[BUG]  [BUGGY]  switch(c  <  DETERMINISTIC_SIZE)  {  [CE]  cannot  find  symbol  DETERMINISTIC_SIZE  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DETERMINISTIC_SIZE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DETERMINISTIC_SIZE)  {	  switch(c    <    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_SIZE	62	None	replace
1311	[BUG]  [BUGGY]  switch(c  <  DETERMINISTIC_FIRST  ||  c  <  DISABLED)  {  [CE]  cannot  find  symbol  DETERMINISTIC_FIRST  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DETERMINISTIC_FIRST  ||  c  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DETERMINISTIC_FIRST  ||  c  <  DISABLED)  {	  switch(c    <    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  DETERMINISTIC_FIRST	62	None	replace
1312	[BUG]  [BUGGY]  Switch(c  &  0xfff),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
1313	[BUG]  [BUGGY]  Switch(c  &  0xfff),  commmentStart,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfff),  commmentStart,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfff),  commmentStart,  escapeEmptyLines)  {	  Switch(c    &    0xfff)    {    	non-compiled	[CE]  ';'  expected	158	None	replace
1314	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1315	[BUG]  [BUGGY]  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  not  a  statement  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  not  a  statement	210	None	replace
1316	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1317	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1318	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1319	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	210	None	replace
1320	[BUG]  [BUGGY]  switch(in.read(c),  out.charAt(c))  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  out.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  out.charAt(c))  {	  switch(in.read(c),    commmentStart)    {    	non-compiled	[CE]  ')'  expected	104	None	replace
1321	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ');  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ');  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ');	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
1322	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ');  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ');  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  Record  do  not  match  expected  result(c,  default,  or'}  ');	  switch(c    &    0xffff)    {    Record    do    not    match    expected    result(c)    	non-compiled	[CE]  case,  default,  or  '}'  expected	154	None	replace
1323	[BUG]  [BUGGY]  switch(in.read(c,  delimiter,  escape))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter,  escape))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter,  escape))  {	  switch(in.read(c,    escape))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	169	None	replace
1324	[BUG]  [BUGGY]  switch(in.read(c,  delimiter,  DISABLED))  {  [CE]  no  suitable  method  found  for  read(int,char,char)  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter,  DISABLED))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter,  DISABLED))  {	  switch(in.read(c,    DISABLED))    {    	non-compiled	[CE]  no  suitable  method  found  for  read(int,char,char)	170	None	replace
1325	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '.':  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  cannot  find  symbol  Context	51	None	replace
1326	[BUG]  [BUGGY]  Switch(c  &  DISABLED)  {  Context.codeBug();  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED)  {  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED)  {  Context.codeBug();	  switch(c    &    DISABLED)    {    Context.codeBug();    	non-compiled	[CE]  ';'  expected	51	None	replace
1327	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
1328	[BUG]  [BUGGY]  if(c!=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
1329	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
1330	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
1331	[BUG]  [BUGGY]  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    ==    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	205	None	replace
1332	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '[':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  DISABLED)  {  case  '[':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	45	4	replace
1333	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '[':  in.read();  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '[':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '[':  in.read();	  switch(c    &    DISABLED)    {    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	45	4	replace
1334	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'p'  ||  c  ==  'r'  ||  c  ==  'p')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'p'  ||  c  ==  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'p'  ||  c  ==  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  orphaned  case	199	None	replace
1335	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  ==  'r'  ||  c  ==  'p')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'p')    {    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
1336	[BUG]  [BUGGY]  if(c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {	  if(c    ==    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	74	None	replace
1337	[BUG]  [BUGGY]  switch(c,  c.charAt(c  -  1))  {  [CE]  ')'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  c.charAt(c  -  1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  c.charAt(c  -  1))  {	  switch(c,    c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	111	None	replace
1338	[BUG]  [BUGGY]  switch(c,  in.read(c))  {  [CE]  ')'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  in.read(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  in.read(c))  {	  switch(c,    c.charAt(c))    {    	non-compiled	[CE]  ')'  expected	111	None	replace
1339	[BUG]  [BUGGY]  int  delimiter  =  this.in.read();  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  delimiter  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  delimiter  =  this.in.read();	  int    delimiter    =    in.read();    	non-compiled	[CE]  orphaned  case	121	None	replace
1340	[BUG]  [BUGGY]  switch(in.read(c,  delimiter,  escapeSurroundingSpaces))  {  [CE]  cannot  find  symbol  escapeSurroundingSpaces  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter,  escapeSurroundingSpaces))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter,  escapeSurroundingSpaces))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeSurroundingSpaces	196	None	replace
1341	[BUG]  [BUGGY]  switch(in.read(c,  delimiter,  escapeChar))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter,  escapeChar))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter,  escapeChar))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	196	None	replace
1342	[BUG]  [BUGGY]  switch(in.read(c,  delimiter,  escapeEmptyLines))  {  [CE]  cannot  find  symbol  escapeEmptyLines  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter,  escapeEmptyLines))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter,  escapeEmptyLines))  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  cannot  find  symbol  escapeEmptyLines	196	None	replace
1343	[BUG]  [BUGGY]  switch(in.read(c,  delimiter),  escapeChar)  {  [CE]  ')'  expected  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c,  delimiter),  escapeChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c,  delimiter),  escapeChar)  {	  switch(in.read(c,    delimiter))    {    	non-compiled	[CE]  ')'  expected	196	None	replace
1344	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1345	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1346	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1347	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  >  0xfff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1348	[BUG]  [BUGGY]  if(c  >  0xfff)  {  switch(c  &  0xfff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [CE]  case,  default,  or  '}'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  0xfff)  {  switch(c  &  0xfff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  0xfff)  {  switch(c  &  0xfff)  {  records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfff;  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Records    do    not    match    expected    result    (entry    0);    }    else    {    int    c    =    in.read();    return    c    &    0xffff;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	211	None	replace
1349	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '[':  in.read();  break;  [CE]  missing  return  statement  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '[':  in.read();  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '[':  in.read();  break;	  switch(c    &    DISABLED)    {    int    c    =    in.read();    	non-compiled	[CE]  missing  return  statement	46	None	replace
1350	[BUG]  [BUGGY]  Switch(c),  in.read(),  DISABLED)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  in.read(),  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  in.read(),  DISABLED)  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
1351	[BUG]  [BUGGY]  Switch(c),  in,  delimiter.read())  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  in,  delimiter.read())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  in,  delimiter.read())  {	  Switch(c),    in.read())    {    	non-compiled	[CE]  ';'  expected	176	None	replace
1352	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  c  &  0xffffF)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  c  &  0xffffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    c  &  0xffffF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1353	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  if(c  >  0xffffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  if(c  >  0xffffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    if(c  >  0xffffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1354	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1355	[BUG]  [BUGGY]  switch(c  &  0xffffF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffffF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffffF)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	add
1356	[BUG]  [BUGGY]  Switch(c,  DISABLED),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1357	[BUG]  [BUGGY]  Switch(c,  DISABLED,  commmentStart)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  commmentStart)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  commmentStart)  {	  Switch(c,    DISABLED)    {    	non-compiled	[CE]  ';'  expected	137	None	replace
1358	[BUG]  [BUGGY]  Switch(c  &  DISABLED),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1359	[BUG]  [BUGGY]  Switch(c  &  DISABLED),  commmentStart,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED),  commmentStart,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED),  commmentStart,  escapeEmptyLines)  {	  Switch(c    &    DISABLED)    {    	non-compiled	[CE]  ';'  expected	139	None	replace
1360	[BUG]  [BUGGY]  switch(in.readDelimiter(),  c)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.readDelimiter(),  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.readDelimiter(),  c)  {	  switch(in.readEscape(),    c)    {    	non-compiled	[CE]  ')'  expected	107	None	replace
1361	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  >  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
1362	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
1363	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [CE]  case,  default,  or  '}'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xff)  {  if(c  <  0xfff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  }	  switch(c    &    0xffff)    {    if(c    >    0xffff)    {    Record    do    not    match    expected    result(entry    0);    }    else    {    int    c    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	212	None	replace
1364	[BUG]  [BUGGY]  Switch(in.read(c),  delimiter,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(c),  delimiter,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(c),  delimiter,  escapeEmptyLines)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	105	None	replace
1365	[BUG]  [BUGGY]  switch(in.read(c),  commmentStart,  delimiter)  {  [CE]  ')'  expected  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  commmentStart,  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  commmentStart,  delimiter)  {	  switch(in.read(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ')'  expected	105	None	replace
1366	[BUG]  [BUGGY]  switch(c  &  DISABLED)  ==  DISABLED  ||  c  >  DISABLED)  {  [CE]  '{'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  ==  DISABLED  ||  c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  ==  DISABLED  ||  c  >  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  '{'  expected	47	None	replace
1367	[BUG]  [BUGGY]  switch(c  <  DISABLED)  {  case  DISABLED:  return  DISABLED;  [CE]  incompatible  types  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  <  DISABLED)  {  case  DISABLED:  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  <  DISABLED)  {  case  DISABLED:  return  DISABLED;	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  incompatible  types	47	None	replace
1368	[BUG]  [BUGGY]  Switch(c  &  DISABLED)  ==  DISABLED)  {  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  DISABLED)  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  DISABLED)  ==  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  not  a  statement	47	None	replace
1369	[BUG]  [BUGGY]  switch(c  &  DISABLED)  ==  DISABLED  ||  c  >>  DISABLED)  {  [CE]  '{'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  ==  DISABLED  ||  c  >>  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  ==  DISABLED  ||  c  >>  DISABLED)  {	  switch(c    &    DISABLED)    {    c    &    DISABLED)    {    	non-compiled	[CE]  '{'  expected	47	None	replace
1370	[BUG]  [BUGGY]  Switch(in,  c),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1371	[BUG]  [BUGGY]  Switch(in,  c),  commmentStart,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c),  commmentStart,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c),  commmentStart,  escapeEmptyLines)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1372	[BUG]  [BUGGY]  Switch(in,  c),  commmentStart,  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c),  commmentStart,  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c),  commmentStart,	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1373	[BUG]  [BUGGY]  Switch(in,  c),  commmentEnd,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  c),  commmentEnd,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  c),  commmentEnd,  escapeSurroundingSpaces)  {	  Switch(in,    c)    {    	non-compiled	[CE]  ';'  expected	213	None	replace
1374	[BUG]  [BUGGY]  Switch(c,  DISABLED,  commmentStart,  escapeSurroundingSpaces);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  commmentStart,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  commmentStart,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
1375	[BUG]  [BUGGY]  Switch(c,  delimiter),  commmentStart,  escapeSurroundingSpaces);  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  delimiter),  commmentStart,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  delimiter),  commmentStart,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
1376	[BUG]  [BUGGY]  Switch(c),  delimiter,  escapeSurroundingSpaces);  [CE]  ';'  expected  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  delimiter,  escapeSurroundingSpaces);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  delimiter,  escapeSurroundingSpaces);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  ';'  expected	26	None	replace
1377	[BUG]  [BUGGY]  Switch(c,  DISABLED,  ignoreEmptyLines);  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  ignoreEmptyLines);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  ignoreEmptyLines);	  Switch(c),    commmentStart,    escapeSurroundingSpaces);    	non-compiled	[CE]  orphaned  case	26	None	replace
1378	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a')  {	  if(c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	123	None	replace
1379	[BUG]  [BUGGY]  if(c  <  '0'  ||  c  >  '9'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  '0'  ||  c  >  '9'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  '0'  ||  c  >  '9'  ||  c  ==  't'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    't'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	193	None	replace
1380	[BUG]  [BUGGY]  final  int  R  =  in.read();  if(R!=  null)  {  return  R;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  R  =  in.read();  if(R!=  null)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  R  =  in.read();  if(R!=  null)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    null)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	13	None	replace
1381	[BUG]  [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED  ||  c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    <    DISABLED    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
1382	[BUG]  [BUGGY]  Switch(c.charAt(c))  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.charAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.charAt(c))  {	  switch(char.charAt(c))    {    	non-compiled	[CE]  ';'  expected	115	None	replace
1383	[BUG]  [BUGGY]  while(in.read()  >  0)  {  int  len  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  int  len  =  in.read();	  switch(in.read())    {    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	147	None	replace
1384	[BUG]  [BUGGY]  switch(c,  getCharAt(c))  {  [CE]  ')'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  getCharAt(c))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  getCharAt(c))  {	  switch(c,    getCharAt(0))    {    	non-compiled	[CE]  ')'  expected	5	None	replace
1385	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  return  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  return  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  return  in.read();	  switch(c    &    0xffff)    {    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	66	None	replace
1386	[BUG]  [BUGGY]  while(in.read()  >  3)  {  commmentStart  =  in.read(c);  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  3)  {  commmentStart  =  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  3)  {  commmentStart  =  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	189	None	replace
1387	[BUG]  [BUGGY]  switch(in.read())  {  case  'e':  in.read(c);  [CE]  no  suitable  method  found  for  read(int)  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  'e':  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  'e':  in.read(c);	  switch(in.read())    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  no  suitable  method  found  for  read(int)	189	None	replace
1388	[BUG]  [BUGGY]  while(in.read()  >  0)  {  case  =  in.read();  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  orphaned  case	188	None	replace
1389	[BUG]  [BUGGY]  while(in.read()  >  c)  {  case  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  c)  {  case  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  c)  {  case  =  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  orphaned  case	188	None	replace
1390	[BUG]  [BUGGY]  switch(in.read())  {  case  'n':  in.read();  [CE]  duplicate  case  label  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  'n':  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  'n':  in.read();	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  duplicate  case  label	188	None	replace
1391	[BUG]  [BUGGY]  switch(c)  {  case  =  c;  [CE]  illegal  start  of  expression  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  =  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  =  c;	  switch(in.read())    {    int    case    =    in.read();    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1392	[BUG]  [BUGGY]  switch(c  &  0xfff)  {  c  &  0xfff)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  {  c  &  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfff)    {    c  &  0xfff)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	90	None	add
1393	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  c  &  0xfffF)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  c  &  0xfffF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    c  &  0xfffF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
1394	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffF;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
1395	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  if(c  >  0xfffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffF;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  if(c  >  0xfffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    if(c  >  0xfffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
1396	[BUG]  [BUGGY]  switch(c  &  0xfffF)  {  if(c  >  0xfffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffF)  {  if(c  >  0xfffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffF)    {    if(c  >  0xfffF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	95	None	add
1397	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff;  }  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    if(c  >  0xff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
1398	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    if(c  >  0xff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
1399	[BUG]  [BUGGY]  switch(c  &  0xff)  {  c  &  0xff)  {  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  c  &  0xff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    c  &  0xff)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
1400	[BUG]  [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xff)  {  if(c  >  0xff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xff)    {    if(c  >  0xff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	156	None	add
1401	[BUG]  [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'r'  ||  c  ==  'n'  ||  c  >=  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  orphaned  case	184	None	replace
1402	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  >=  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  orphaned  case	184	None	replace
1403	[BUG]  [BUGGY]  if(c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {	  if(c    <    'r'    ||    c    >    'n'    ||    c    >=    't')    {    	non-compiled	[CE]  orphaned  case	184	None	replace
1404	[BUG]  [BUGGY]  switch(c,  text.charAt(1))  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  text.charAt(1))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  text.charAt(1))  {	  switch(c.charAt(1))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
1405	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c!=  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c!=  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c!=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	27	None	replace
1406	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  '0')  {  [CE]  illegal  start  of  expression  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  <  =  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  '0')  {	  switch(in.read())    {    switch(c)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1407	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  '9')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  '9')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  '9')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
1408	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'A')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'A')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  'A')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
1409	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  't')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >=  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >=  't')  {	  if(c    <    'n'    ||    c    >    'r')    {    	non-compiled	[CE]  orphaned  case	18	None	replace
1410	[BUG]  [BUGGY]  Character  c  =  in.read();  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Character  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Character  c  =  in.read();	  char    c    =    in.read();    	non-compiled	[CE]  orphaned  case	138	None	replace
1411	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.'  ||  c  ==  ',')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.'  ||  c  ==  ',')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	10	None	replace
1412	[BUG]  [BUGGY]  if(c  ==  '.'  ||  c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  '.'  ||  c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  '.'  ||  c  ==  ':')  {  final  int  r  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	10	None	replace
1413	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  2)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  2)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  2)  {  return  R;  }	  switch(in.read())    {    if(c    ==    '.')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	10	None	replace
1414	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
1415	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  't')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
1416	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'a'  ||  c  ==  'e')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'a')    {    	non-compiled	[CE]  orphaned  case	200	None	replace
1417	[BUG]  [BUGGY]  if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
1418	[BUG]  [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
1419	[BUG]  [BUGGY]  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
1420	[BUG]  [BUGGY]  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    r;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
1421	[BUG]  [BUGGY]  final  int  commmentStart  =  out.read();  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  out.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  out.read();	  final    int    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	116	None	replace
1422	[BUG]  [BUGGY]  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  R  =  in.read();  if(r!=  0)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n')    {    final    int    r    =    in.read();    if(r!=    0)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
1423	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c,  commmentStart);  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c,  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  int  commmentStart  =  in.read(c,  commmentStart);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  case,  default,  or  '}'  expected	165	None	replace
1424	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  'commmentStart':  in.read(c);  [CE]  unclosed  character  literal  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  'commmentStart':  in.read(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  'commmentStart':  in.read(c);	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  unclosed  character  literal	165	None	replace
1425	[BUG]  [BUGGY]  switch(c.isEmpty())  {  [CE]  int  cannot  be  dereferenced  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.isEmpty())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.isEmpty())  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
1426	[BUG]  [BUGGY]  switch(in.read()  &&  c!=  'n')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c!=  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c!=  'n')  {	  switch(in.read())    {    switch(c.read())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	9	None	replace
1427	[BUG]  [BUGGY]  char  c  =  in.readChar();  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.readChar();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.readChar();	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
1428	[BUG]  [BUGGY]  char  c  =  in.readChar(c);  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.readChar(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.readChar(c);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
1429	[BUG]  [BUGGY]  char  c  =  text.charAt(c);  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  text.charAt(c);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  text.charAt(c);	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
1430	[BUG]  [BUGGY]  char  c  =  in.read(in.charAt(c));  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  char  c  =  in.read(in.charAt(c));  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	char  c  =  in.read(in.charAt(c));	  char    c    =    c.charAt(c);    	non-compiled	[CE]  orphaned  case	113	None	replace
1431	[BUG]  [BUGGY]  final  Character  commmentStart  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  Character  commmentStart  =  in.read(c);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  Character  commmentStart  =  in.read(c);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
1432	[BUG]  [BUGGY]  final  double  commmentStart  =  in.read(c);  break;  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  double  commmentStart  =  in.read(c);  break;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  double  commmentStart  =  in.read(c);  break;	  final    char    commmentStart    =    in.read(c);    break;    	non-compiled	[CE]  orphaned  case	161	None	replace
1433	[BUG]  [BUGGY]  switch(c)  {  delimiter  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	186	None	replace
1434	[BUG]  [BUGGY]  switch(in.read())  {  case  'n':  delimiter  =  in.read();  [CE]  cannot  assign  a  value  to  final  variable  delimiter  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  'n':  delimiter  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  'n':  delimiter  =  in.read();	  switch(in.read())    {    int    delimiter    =    in.read();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  delimiter	186	None	replace
1435	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  return  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c)  {  case  '.':  return  c;	  switch(in.read())    {    int    delimiter    =    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	186	3	replace
1436	[BUG]  [BUGGY]  switch(c)  {  case  '.':  return  c;  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c)  {  case  '.':  return  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c)  {  case  '.':  return  c;	  switch(in.read())    {    int    delimiter    =    in.read();    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	186	3	replace
1437	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  '.':  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  '.':  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  '.':  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  cannot  find  symbol  Context	155	None	replace
1438	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'n':  Context.codeBug();  [CE]  cannot  find  symbol  Context  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'n':  Context.codeBug();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'n':  Context.codeBug();	  switch(c    &    0xffff)    {    Context.codeBug();    	non-compiled	[CE]  cannot  find  symbol  Context	155	None	replace
1439	[BUG]  [BUGGY]  switch(c,  DETERMINISTIC_SOURCE)  {  [CE]  ')'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DETERMINISTIC_SOURCE)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DETERMINISTIC_SOURCE)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
1440	[BUG]  [BUGGY]  switch(c,  DISABLED  ||  c  ==  DISABLED)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DISABLED  ||  c  ==  DISABLED)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
1441	[BUG]  [BUGGY]  switch(c,  DETERMINISTIC_SYNTHETIC)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  DETERMINISTIC_SYNTHETIC)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  DETERMINISTIC_SYNTHETIC)  {	  switch(c,    DISABLED)    {    	non-compiled	[CE]  ')'  expected	167	None	replace
1442	[BUG]  [BUGGY]  [FE]  (entry  2)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  &  DISABLED)  {  case  '.':  return  DISABLED;	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	compilable	  [FE]  (entry  2)  	164	5	replace
1443	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  return  DISABLED;  [FE]  (entry  2)  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  case  '.':  return  DISABLED;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  case  '.':  return  DISABLED;	  switch(c    &    DISABLED)    {    int    r    =    in.read();    	compilable	  [FE]  (entry  2)  	164	5	replace
1444	[BUG]  [BUGGY]  Switch(c,  DISABLED,  commmentStart,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  DISABLED,  commmentStart,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  DISABLED,  commmentStart,  escapeEmptyLines)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
1445	[BUG]  [BUGGY]  Switch(c,  delimiter,  escapeEmptyLines)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  delimiter,  escapeEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  delimiter,  escapeEmptyLines)  {	  Switch(c),    commmentStart,    escapeEmptyLines)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
1446	[BUG]  [BUGGY]  Switch(in.read(c),  delimiter)  {  [CE]  ';'  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(c),  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(c),  delimiter)  {	  switch(in.read(c),    escapeChar)    {    	non-compiled	[CE]  ';'  expected	171	None	replace
1447	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  c  &  0xffFF)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  c  &  0xffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    c  &  0xffFF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1448	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  if(c  >  0xffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  if(c  >  0xffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    if(c  >  0xffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1449	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  if(c  >  0xffFF)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  if(c  >  0xffFF)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    if(c  >  0xffFF)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1450	[BUG]  [BUGGY]  switch(c  &  0xffFF)  {  if(c  >  0xffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffFF)  {  if(c  >  0xffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xffFF)    {    if(c  >  0xffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();	  	non-compiled	[CE]  case,  default,  or  '}'  expected	97	None	add
1451	[BUG]  [BUGGY]  switch(c  &  0xffff)  <  =  c  &  0xffff)  {  [CE]  '{'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  <  =  c  &  0xffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  <  =  c  &  0xffff)  {	  switch(c    &    0xffff)    {    c    &    0xfffff)    {    	non-compiled	[CE]  '{'  expected	71	None	replace
1452	[BUG]  [BUGGY]  switch(c).restrictByNotNullOrUndefined()  {  [CE]  '{'  expected  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).restrictByNotNullOrUndefined()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).restrictByNotNullOrUndefined()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
1453	[BUG]  [BUGGY]  switch(c).get()  {  [CE]  '{'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).get()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).get()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
1454	[BUG]  [BUGGY]  switch(c).restrictByNotNullOrEquals()  {  [CE]  '{'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c).restrictByNotNullOrEquals()  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c).restrictByNotNullOrEquals()  {	  switch(c).read()    {    	non-compiled	[CE]  '{'  expected	57	None	replace
1455	[BUG]  [BUGGY]  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  3)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	add	switch(c  +  3)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
1456	[BUG]  [BUGGY]  switch(c  +  3)  {  [FE]  Records  do  not  match  expected  result  (entry  8)  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  3)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  3)  {	  switch(c    +    DISABLED)    {    	compilable	  [FE]  Records  do  not  match  expected  result  (entry  8)  	61	6	replace
1457	[BUG]  [BUGGY]  switch(c  +  entry)  {  [CE]  cannot  find  symbol  entry  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  +  entry)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  +  entry)  {	  switch(c    +    DISABLED)    {    	non-compiled	[CE]  cannot  find  symbol  entry	61	None	replace
1458	[BUG]  [BUGGY]  Switch(c  +  1)  {  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  +  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  +  1)  {	  switch(c    +    DISABLED)    {    	non-compiled	[CE]  ';'  expected	61	None	replace
1459	[BUG]  [BUGGY]  if(c  <  '0'  ||  c  >  '9'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  '0'  ||  c  >  '9'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  '0'  ||  c  >  '9'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	81	None	replace
1460	[BUG]  [BUGGY]  switch(in.read())  {  case  'r':  return  c;  [CE]  duplicate  case  label  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  case  'r':  return  c;  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  case  'r':  return  c;	  switch(in.read())    {    int    case    'r':    return    CR;    	non-compiled	[CE]  duplicate  case  label	145	None	replace
1461	[BUG]  [BUGGY]  switch(c,  text.charAt(2))  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c,  text.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c,  text.charAt(2))  {	  switch(c.charAt(2))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
1462	[BUG]  [BUGGY]  switch(escapeChar.charAt(2))  {  [CE]  cannot  find  symbol  escapeChar  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(escapeChar.charAt(2))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(escapeChar.charAt(2))  {	  switch(c.charAt(2))    {    	non-compiled	[CE]  cannot  find  symbol  escapeChar	3	None	replace
1463	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  c  &  0xfffFF)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  c  &  0xfffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    c  &  0xfffFF)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1464	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1465	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1466	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xfffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xfffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    if(c  >  0xfffFF)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1467	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffffFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1468	[BUG]  [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFFF;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffFF)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFFF;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffFF)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffFFF;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	174	None	add
1469	[BUG]  [BUGGY]  switch(in.read(),  c  &  0xfff)  {  [CE]  ')'  expected  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c  &  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c  &  0xfff)  {	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
1470	[BUG]  [BUGGY]  switch(in.read(),  c)  ==  [CE]  ')'  expected  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(),  c)  ==  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(),  c)  ==	  switch(in.read(),    c)    {    	non-compiled	[CE]  ')'  expected	54	None	replace
1471	[BUG]  [BUGGY]  switch(c  &  DISABLED)  {  return  commmentStart  =  in.read();  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  DISABLED)  {  return  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  DISABLED)  {  return  commmentStart  =  in.read();	  switch(c    &    DISABLED)    {    int    commmentStart    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	163	None	replace
1472	[BUG]  [BUGGY]  Switch(in.read(),  c),  commmentStart,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c),  commmentStart,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c),  commmentStart,  escapeSurroundingSpaces)  {	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
1473	[BUG]  [BUGGY]  Switch(in.read(),  c),  commmentStart);  [CE]  ';'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  c),  commmentStart);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  c),  commmentStart);	  Switch(in.read(),    c)    {    	non-compiled	[CE]  ';'  expected	84	None	replace
1474	[BUG]  [BUGGY]  switch(c  &  0xfff)  <  =  c  &  0xffff)  {  [CE]  '{'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  <  =  c  &  0xffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  <  =  c  &  0xffff)  {	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  '{'  expected	209	None	replace
1475	[BUG]  [BUGGY]  switch(c  &  0xfff)  <  =  c  &  0xfff)  {  [CE]  '{'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfff)  <  =  c  &  0xfff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xfff)  <  =  c  &  0xfff)  {	  switch(c    &    0xffff)    {    c    &    0xffff)    {    	non-compiled	[CE]  '{'  expected	209	None	replace
1476	[BUG]  [BUGGY]  Switch(c,  in.charAt(0))  {  [CE]  ';'  expected  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  in.charAt(0))  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  in.charAt(0))  {	  switch(in.charAt(0))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
1477	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	80	None	replace
1478	[BUG]  [BUGGY]  if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  't')  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	80	None	replace
1479	[BUG]  [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [CE]  illegal  start  of  expression  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'z')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'z')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1480	[BUG]  [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'f')  {  [CE]  illegal  start  of  expression  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'f')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read()  &  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'f')  {	  Switch(in.read()    &    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1481	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'e'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'e')    {    	non-compiled	[CE]  orphaned  case	198	None	replace
1482	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
1483	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	140	None	replace
1484	[BUG]  [BUGGY]  Switch(in.read(),  in.read()  -  1)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  in.read()  -  1)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read()  -  1)  {	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
1485	[BUG]  [BUGGY]  Switch(in.read(),  in.read()),  c  ==  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in.read(),  in.read()),  c  ==  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in.read(),  in.read()),  c  ==	  Switch(in.read(),    in.read())    {    	non-compiled	[CE]  ';'  expected	86	None	replace
1486	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  int  c  =  in.read();  }  [CE]  orphaned  case  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  c)  {  int  c  =  in.read();  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  c)  {  int  c  =  in.read();  }	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
1487	[BUG]  [BUGGY]  if(in.read()  ==  c)  {  int  c  =  in.read();  }  else  {  return  c;  }  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(in.read()  ==  c)  {  int  c  =  in.read();  }  else  {  return  c;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(in.read()  ==  c)  {  int  c  =  in.read();  }  else  {  return  c;  }	  switch(in.read())    {    int    c    =    in.read();    	non-compiled	[CE]  orphaned  case	187	None	replace
1488	[BUG]  [BUGGY]  Switch(c  &  0xfffFF)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xfffFF)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xfffFF)  {	  Switch(c    &    0xffff)    {    	non-compiled	[CE]  ';'  expected	94	None	replace
1489	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  'e':  final  Records  do  not  match  expected  result  ()  [CE]  <identifier>  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  'e':  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  'e':  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1490	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  case  't':  final  Records  do  not  match  expected  result  ()  [CE]  <identifier>  expected  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  case  't':  final  Records  do  not  match  expected  result  ()  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  case  't':  final  Records  do  not  match  expected  result  ()	  switch(c    &    0xffff)    {    final    Records    do    not    match    expected    result    ()    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1491	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  DETERMINISTIC_COMMENT_START);  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  DETERMINISTIC_COMMENT_START);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  DETERMINISTIC_COMMENT_START);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
1492	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  delimiter);  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  delimiter);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  delimiter);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
1493	[BUG]  [BUGGY]  final  char  commmentStart  =  in.read(c,  DETERMINISTIC_SURRUNNING_LINE);  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  commmentStart  =  in.read(c,  DETERMINISTIC_SURRUNNING_LINE);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  commmentStart  =  in.read(c,  DETERMINISTIC_SURRUNNING_LINE);	  final    char    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	160	None	replace
1494	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A'  ||  c  ==  'a')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A'  ||  c  ==  'a')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'A'  ||  c  ==  'a')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'A')    {    	non-compiled	[CE]  orphaned  case	202	None	replace
1495	[BUG]  [BUGGY]  if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	207	None	replace
1496	[BUG]  [BUGGY]  if(c  ==  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  DISABLED)  {  if(c  >  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	207	None	replace
1497	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  <  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read();  if(commmentStart  <  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read();  if(commmentStart  <  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	207	None	replace
1498	[BUG]  [BUGGY]  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    commmentStart    =    in.read();    if(commmentStart    >=    commmentStart)    {    return    COMMENT;    }    	non-compiled	[CE]  orphaned  case	207	None	replace
1499	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
1500	[BUG]  [BUGGY]  CharTypes.DISABLED,  c  {  [CE]  not  a  statement  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  CharTypes.DISABLED,  c  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	CharTypes.DISABLED,  c  {	  Switch(c),    DISABLED    {    	non-compiled	[CE]  not  a  statement	215	None	replace
1501	[BUG]  [BUGGY]  Switch(c),  DISABLED!=  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c),  DISABLED!=  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c),  DISABLED!=	  Switch(c),    DISABLED    {    	non-compiled	[CE]  ';'  expected	215	None	replace
1502	[BUG]  [BUGGY]  final  double  commmentStart  =  in.read();  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  double  commmentStart  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  double  commmentStart  =  in.read();	  final    char    commmentStart    =    in.read();    	non-compiled	[CE]  orphaned  case	119	None	replace
1503	[BUG]  [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	38	None	replace
1504	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c!=  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  ==  'n'  ||  c!=  'r')  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    'r')    {    	non-compiled	[CE]  orphaned  case	38	None	replace
1505	[BUG]  [BUGGY]  switch(c.read()  &  DISABLED)  {  [CE]  int  cannot  be  dereferenced  [FE]        (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c.read()  &  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c.read()  &  DISABLED)  {	  switch(in.read()    &    c    <    =    DISABLED)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	132	None	replace
1506	[BUG]  [BUGGY]  Switch(c,  commmentEnd,  ignorEmptyLines)  {  [CE]  ';'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  commmentEnd,  ignorEmptyLines)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  commmentEnd,  ignorEmptyLines)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
1507	[BUG]  [BUGGY]  Switch(c,  len,  escapeSurroundingSpaces)  {  [CE]  ';'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c,  len,  escapeSurroundingSpaces)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c,  len,  escapeSurroundingSpaces)  {	  Switch(c,    commmentEnd,    escapeSurroundingSpaces)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
1508	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  c  &  0xfffff)  {  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  c  &  0xfffff)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    c  &  0xfffff)  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1509	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    if(c  >  0xffff)  {  Record  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1510	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    if(c  >  0xffff)  {  Records  do  not  match  expected  result(entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xffff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1511	[BUG]  [BUGGY]  switch(c  &  0xfffff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffff;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xfffff)  {  if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffff;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    &    0xfffff)    {    if(c  >  0xffff)  {  Records  do  not  match  expected  result  (entry  0);  }  else  {  int  c  =  in.read();  return  c  &  0xfffff;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	88	None	add
1512	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  'r')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	36	None	replace
1513	[BUG]  [BUGGY]  final  int  commmentStart  =  in.read(c,  DETERMINATED);  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  commmentStart  =  in.read(c,  DETERMINATED);  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  commmentStart  =  in.read(c,  DETERMINATED);	  final    int    commmentStart    =    in.read(c);    	non-compiled	[CE]  orphaned  case	159	None	replace
1514	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	143	None	replace
1515	[BUG]  [BUGGY]  if(c  >  '9'  ||  c  <  '9'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  '9'  ||  c  <  '9'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  '9'  ||  c  <  '9'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	34	None	replace
1516	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	181	None	replace
1517	[BUG]  [BUGGY]  if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    >=    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	181	None	replace
1518	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if(c!=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	42	None	replace
1519	[BUG]  [BUGGY]  if(c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'r'  ||  c  >=  'n'  ||  c  ==  't')  {	  if(c    >=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	41	None	replace
1520	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {	  if(c    >=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	41	None	replace
1521	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    DISABLED)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
1522	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c!=  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c!=    DISABLED)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
1523	[BUG]  [BUGGY]  Switch(c.read(),  delimiter)  {  [CE]  ';'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read(),  delimiter)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read(),  delimiter)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1524	[BUG]  [BUGGY]  Switch(c.read()  &&  c!=  ';')  {  [CE]  ';'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &&  c!=  ';')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &&  c!=  ';')  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1525	[BUG]  [BUGGY]  Switch(c.read()  &&  in.read()  >  0)  {  [CE]  ';'  expected  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.read()  &&  in.read()  >  0)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.read()  &&  in.read()  >  0)  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1526	[BUG]  [BUGGY]  Switch(c.getChars())  {  [CE]  ';'  expected  [FE]                      (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c.getChars())  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c.getChars())  {	  Switch(c.read())    {    	non-compiled	[CE]  ';'  expected	58	None	replace
1527	[BUG]  [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'f')  {  [CE]  illegal  start  of  expression  [FE]          (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'f')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  &&  c  <  =  '9'  ||  c  >=  'a'  &&  c  <  =  'f')  {	  switch(in.read()    &&    c    <    =    '9')    {    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
1528	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  ==  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	75	None	replace
1529	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {	  if(c    >=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	75	None	replace
1530	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c!=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c!=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c!=    'n'    ||    c    >    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	77	None	replace
1531	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'E'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'E'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'E'  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    DISABLED    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	142	None	replace
1532	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'e')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
1533	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'a'  ||  c  ==  'e')  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  'a'  ||  c  ==  'e')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
1534	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  ':')  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  ':')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'e'  ||  c  ==  'E'  ||  c  ==  ':')  {	  if(c    ==    'e'    ||    c    ==    'E')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
1535	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1536	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]      Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentStart)  {  return  COMMENT;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1537	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentStart)  {  return  COMMENT;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1538	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentEnd)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentEnd)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  >=  commmentEnd)  {  return  COMMENT;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1539	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [CE]  case,  default,  or  '}'  expected  [FE]            Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  r;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1540	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R;  }  [CE]  case,  default,  or  '}'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  r  =  in.read();  if(r  ==  DISABLED)  {  return  R;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1541	[BUG]  [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentEnd)  {  return  COMMENT;  }  [CE]  case,  default,  or  '}'  expected  [FE]                Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  >>  DISABLED)  {  if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentEnd)  {  return  COMMENT;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c    >>    DISABLED)    {    if(c!=  DISABLED)  {  final  int  commmentStart  =  in.read();  if(commmentStart  ==  commmentEnd)  {  return  COMMENT;  }	  	non-compiled	[CE]  case,  default,  or  '}'  expected	127	None	add
1542	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
1543	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  ==  DISABLED)  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
1544	[BUG]  [BUGGY]  if(c  <  '0'  ||  c  >  '9'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  '0'  ||  c  >  '9'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  '0'  ||  c  >  '9'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
1545	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  't'  ||  c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  'n')  {	  if(c    ==    't'    ||    c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    'n')    {    	non-compiled	[CE]  orphaned  case	126	None	replace
1546	[BUG]  [BUGGY]  if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  DISABLED)  {  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1547	[BUG]  [BUGGY]  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  DISABLED)  {  final  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1548	[BUG]  [BUGGY]  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [CE]  orphaned  case  [FE]            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	int  r  =  in.read();  if(r!=  DISABLED)  {  return  R  *  DISABLED;  }	  switch(c    &    DISABLED)    {    if(c    >    DISABLED)    {    final    int    r    =    in.read();    if(r!=    DISABLED)    {    return    R    *    DISABLED;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1549	[BUG]  [BUGGY]  Switch(in,  in.read()  +  c)  {  [CE]  ';'  expected  [FE]              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(in,  in.read()  +  c)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(in,  in.read()  +  c)  {	  Switch(in,    in.read())    {    	non-compiled	[CE]  ';'  expected	135	None	replace
1550	[BUG]  [BUGGY]  switch(in.read()  +  c  <  =  '0')  {  [CE]  illegal  start  of  expression  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read()  +  c  <  =  '0')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read()  +  c  <  =  '0')  {	  switch(in.read()    &    c    <    =    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1551	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
1552	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
1553	[BUG]  [BUGGY]  if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                            Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
1554	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  delimiter  ||  c  ==  DISABLED)  {  [CE]  orphaned  case  [FE]                              Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  delimiter  ||  c  ==  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  DISABLED  ||  c  ==  delimiter  ||  c  ==  DISABLED)  {	  if(c    ==    'n'    ||    c    ==    DISABLED    ||    c    ==    'r'    ||    c    ==    'n'    ||    c    ==    DISABLED)    {    	non-compiled	[CE]  orphaned  case	141	None	replace
1555	[BUG]  [BUGGY]  switch(c!=  DISABLED  ||  c  >=  DISABLED)  {  [CE]  incompatible  types  [FE]    Records  do  not  match  expected  result  (entry  8)    [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c!=  DISABLED  ||  c  >=  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c!=  DISABLED  ||  c  >=  DISABLED)  {	  switch(c    >>    DISABLED)    {    	non-compiled	[CE]  incompatible  types	128	None	replace
1556	[BUG]  [BUGGY]  while(in.read()  >  0)  {  int  r  =  in.read();  [CE]  orphaned  case  [FE]            (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  0)  {  int  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  0)  {  int  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
1557	[BUG]  [BUGGY]  while(in.read()  >  r)  {  r  =  in.read();  [CE]  orphaned  case  [FE]              (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  while(in.read()  >  r)  {  r  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	while(in.read()  >  r)  {  r  =  in.read();	  switch(in.read())    {    int    r    =    in.read();    	non-compiled	[CE]  orphaned  case	146	None	replace
1558	[BUG]  [BUGGY]  Switch(c  &  0xffff)  {  final  int  len  =  in.read();  [CE]  ';'  expected  [FE]        Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  Switch(c  &  0xffff)  {  final  int  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	Switch(c  &  0xffff)  {  final  int  len  =  in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  ';'  expected	152	None	replace
1559	[BUG]  [BUGGY]  switch(c  &  0xffff)  {  int  len  =  this.in.read();  [CE]  case,  default,  or  '}'  expected  [FE]          Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(c  &  0xffff)  {  int  len  =  this.in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(c  &  0xffff)  {  int  len  =  this.in.read();	  switch(c    &    0xffff)    {    int    len    =    in.read();    	non-compiled	[CE]  case,  default,  or  '}'  expected	152	None	replace
1560	[BUG]  [BUGGY]  final  char  len  =  in.read();  [CE]  orphaned  case  [FE]                                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  char  len  =  in.read();  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  char  len  =  in.read();	  final    int    len    =    in.read();    	non-compiled	[CE]  orphaned  case	122	None	replace
1561	[BUG]  [BUGGY]  switch(in.read(c),  delimiter  &&  escapeChar)  {  [CE]  ')'  expected  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  delimiter  &&  escapeChar)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  delimiter  &&  escapeChar)  {	  switch(in.read(c),    delimiter)    {    	non-compiled	[CE]  ')'  expected	194	None	replace
1562	[BUG]  [BUGGY]  switch(in.read(c),  delimiter,  DISABLED)  {  [CE]  ')'  expected  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read(c),  delimiter,  DISABLED)  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read(c),  delimiter,  DISABLED)  {	  switch(in.read(c),    delimiter)    {    	non-compiled	[CE]  ')'  expected	194	None	replace
1563	[BUG]  [BUGGY]  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  r  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
1564	[BUG]  [BUGGY]  final  int  R  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  final  int  R  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	final  int  R  =  in.read();  if(r!=  Integer.MIN_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
1565	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MAX_VALUE)  {  return  R;  }  [CE]  orphaned  case  [FE]                    (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MAX_VALUE)  {  return  R;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  ==  'n'  ||  c  ==  'r')  {  final  int  r  =  in.read();  if(r!=  Integer.MAX_VALUE)  {  return  R;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    final    int    r    =    in.read();    if(r!=    Integer.MIN_VALUE)    {    return    R;    }    	non-compiled	[CE]  orphaned  case	11	None	replace
1566	[BUG]  [BUGGY]  if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                  Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  '9'  ||  c  <  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	16	None	replace
1567	[BUG]  [BUGGY]  if(c  >  '9'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  '9'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  '9'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	16	None	replace
1568	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  return  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]                (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  DISABLED)  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	148	None	replace
1569	[BUG]  [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  DISABLED;  }  [CE]  case,  default,  or  '}'  expected  [FE]                  (entry  2)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  switch(in.read())  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  DISABLED;  }  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	switch(in.read())  {  if(c  ==  'n'  ||  c  ==  DISABLED)  {  return  DISABLED;  }	  switch(in.read())    {    if(c    ==    'n'    ||    c    ==    'r')    {    return    DISABLED;    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	148	None	replace
1570	[BUG]  [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [CE]  illegal  start  of  expression  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >=  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >=  'n'  ||  c  >  'r'  ||  c  >  'n'  ||  c  <  =  't')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    >    'n'    ||    c    <    =    't')    {    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1571	[BUG]  [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [CE]  illegal  start  of  expression  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  =  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  =  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  'r')  {	  if(c    <    =    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1572	[BUG]  [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  <  'n'  ||  c  >  'r'  ||  c  <  'n'  ||  c  >  't')  {	  if(c    <    'n'    ||    c    >    'r'    ||    c    ==    'n'    ||    c    ==    't')    {    	non-compiled	[CE]  orphaned  case	83	None	replace
1573	[BUG]  [BUGGY]  if(c  >  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                    Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  'n'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	124	None	replace
1574	[BUG]  [BUGGY]  if(c  >  '9'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [CE]  orphaned  case  [FE]                      Records  do  not  match  expected  result  (entry  8)      [CONTEXT]      int  readEscape()  throws  IOException  {  final  int  c  =  in.read();      [BUGGY]  if(c  >  '9'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {  [BUGGY]      case  'r':  return  CR;  case  'n':  return  LF;  case  't':  return  TAB;  case  'b':  return  BACKSPACE;  case  'f':  return  FF;  [CLASS]  Lexer  [METHOD]  readEscape  [RETURN_TYPE]  int  [VARIABLES]  char  DISABLED  commmentStart  delimiter  escape  quoteChar  ExtendedBufferedReader  in  CSVFormat  format  boolean  ignoreEmptyLines  ignoreSurroundingSpaces  int  c  	projects/Csv3/src/main/java/org/apache/commons/csv/Lexer.java	0.48038446141526137	90	90	3	replace	if(c  >  '9'  ||  c  >=  'r'  ||  c  >=  'n'  ||  c  ==  'r')  {	  if(c    ==    'n'    ||    c    >=    'r'    ||    c    >=    'n'    ||    c    ==    'r')    {    	non-compiled	[CE]  orphaned  case	124	None	replace
