bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!recordNumber.equals(name))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber  ==  null  ||!recordNumber.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!recordNumber.equals(name))  {	  if(mapping    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  if(name  ==  null  ||!recordNumber.equals(name))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||!recordNumber.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!recordNumber.equals(name))  {	  if(mapping    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  if(recordNumber!=  null  ||!recordNumber.equals(name))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber!=  null  ||!recordNumber.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||!recordNumber.equals(name))  {	  if(mapping    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null  ||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  name.length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.length()!=  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  name.length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.length()!=  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
10	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "record "))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "record "))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "record "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  comment))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  comment))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  comment))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "- "))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  if(name  ==  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||!header.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!header.equals(name))  {	  if(mapping    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  if(header  ==  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(header  ==  null  ||!header.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(header  ==  null  ||!header.equals(name))  {	  if(mapping    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber  ==  null  ||!header.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!header.equals(name))  {	  if(mapping    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  if(name!=  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null  ||!header.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||!header.equals(name))  {	  if(mapping    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  if(name  ==  null)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  if(name!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.equals( " "))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  name.equals( " "))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.equals( " "))  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping  ==  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping  ==  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping!=  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping!=  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
37	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping.get(name)!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
38	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  name  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name  ==  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.isEmpty())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping.isEmpty())  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.isEmpty())  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.get(name).length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping.get(name).length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.get(name).length()!=  0)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
41	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name)  ==  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.get(name)  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name)  ==  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  mapping.get(name)!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.get(name)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  mapping.get(name)  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.get(name)  ==  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name).length()!=  0)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
45	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)!=  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
46	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name)  >=  null)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.get(name)  >=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name)  >=  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
47	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.length()  -  1);  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  String  comment  =  name.substring(0,  name.length()  -  1);  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
48	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
49	[BUG]  [BUGGY]  String  comment  =  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  String  comment  =  name.toLowerCase();  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.toLowerCase();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.length()  -  2);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  String  comment  =  name.substring(0,  name.length()  -  2);  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  2);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  2);  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
52	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.'));  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.'));  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.lastIndexOf('.'));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
55	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
56	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
57	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
58	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
59	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
60	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( " "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( " "))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( " "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
61	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( " "))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( " "))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( " "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
62	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "- "))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
63	[BUG]  [BUGGY]  if(name  ==  null  ||  name!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  name!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name!=  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(mapping  ==  null  ||  comment  ==  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  comment  ==  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  comment  ==  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!recordName.equals(name))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(recordNumber  ==  null  ||!recordName.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!recordName.equals(name))  {	  if(mapping    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
70	[BUG]  [BUGGY]  if(mapping!=  null  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  name.length()  ==  0)  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.header!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  this.header!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.header!=  null)  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  recordNumber.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
73	[BUG]  [BUGGY]  if(record  ==  null  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(record  ==  null  ||  name.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record  ==  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
74	[BUG]  [BUGGY]  if(mapping  ==  null  ||  parentMap.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  parentMap.get(name)!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  parentMap.get(name)!=  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
75	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name).length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
76	[BUG]  [BUGGY]  if(header!=  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(header!=  null  ||!header.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(header!=  null  ||!header.equals(name))  {	  if(mapping    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
77	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.'));  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.'));  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.lastIndexOf('.'));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
78	[BUG]  [BUGGY]  final  String  comment  =  name.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  final  String  comment  =  name.trim().toLowerCase();  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim().toLowerCase();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  final  String  comment  =  name.trim();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  final  String  comment  =  name.trim();  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
80	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.containsKey(name))  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  this.mapping.containsKey(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.containsKey(name))  {	  if(mapping    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
81	[BUG]  [BUGGY]  if(mapping  ==  null  ||  comment!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  comment!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  comment!=  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.containsKey(name))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name  ==  null  ||  mapping.containsKey(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.containsKey(name))  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber!=  null)  {	  if(mapping    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
84	[BUG]  [BUGGY]  if(mapping!=  null  ||!recordNumber.equals(name))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||!recordNumber.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||!recordNumber.equals(name))  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.containsKey(name))  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  if(mapping!=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  &&  name.length()  >  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  name.length()  >  0)  {	  if(mapping!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
87	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.size()  ==  0)  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  mapping.size()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.size()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
88	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.recordNumber.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  this.recordNumber.length()  ==  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
89	[BUG]  [BUGGY]  if(mapping  ==  null  ||!recordNumber.contains(name))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||!recordNumber.contains(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||!recordNumber.contains(name))  {	  if(mapping    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
90	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name)!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  if(mapping!=  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||!header.equals(name))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||!header.equals(name))  {	  if(mapping    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
93	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
94	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  final  String  comment  =  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  final  String  comment  =  name.toLowerCase();  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.toLowerCase();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
96	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
97	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
98	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
99	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {  [CE]  illegal  start  of  type  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
100	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
101	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    public  String  get(final  String  name)  {    [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]    throw  new  IllegalStateException(     "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
