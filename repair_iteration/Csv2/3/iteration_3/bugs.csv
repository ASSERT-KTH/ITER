bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(name  ==  null  ||  this.header!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.header!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.header!=  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
2	[BUG]  [BUGGY]  if(this.header  ==  null  ||  mapping  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header  ==  null  ||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header  ==  null  ||  mapping  ==  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
3	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.header  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.header  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.header  ==  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
4	[BUG]  [BUGGY]  if(name  ==  null  ||  this.header  ==  null)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.header  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.header  ==  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
5	[BUG]  [BUGGY]  if(name!=  null  ||  this.header!=  null)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  this.header!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  this.header!=  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
6	[BUG]  [BUGGY]  if(this.header!=  null  ||  mapping  ==  null)  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header!=  null  ||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header!=  null  ||  mapping  ==  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
7	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
8	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
9	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
10	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.trim();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.trim();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
11	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.trim();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.trim();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
12	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  null  :  name.trim();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  null  :  name.trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  null  :  name.trim();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
13	[BUG]  [BUGGY]  final  String  comment  =  this.name.trim();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  this.name.trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  this.name.trim();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
14	[BUG]  [BUGGY]  if(header!=  null  &&!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(header!=  null  &&!header.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(header!=  null  &&!header.equals(name))  {	  if(header!=    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
15	[BUG]  [BUGGY]  if(this.mapping  ==  null  ||  this.mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.mapping  ==  null  ||  this.mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.mapping  ==  null  ||  this.mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
16	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.get(name)  ==  null)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
17	[BUG]  [BUGGY]  if(name  ==  null  ||  this.mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
18	[BUG]  [BUGGY]  if(this.mapping  ==  null  ||  mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.mapping  ==  null  ||  mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.mapping  ==  null  ||  mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
19	[BUG]  [BUGGY]  if(mapping!=  null  ||  this.mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  this.mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  this.mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
20	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name,  recordNumber)!=  null)  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name,  recordNumber)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name,  recordNumber)!=  null)  {	  if(mapping    ==    null    ||    mapping.get(name)    >=    null)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
21	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.')+  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.')+  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.lastIndexOf('.')+  1);	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
22	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  1));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  1));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  1));	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
23	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  0));  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  0));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  0));	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
24	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  -1));  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  -1));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.lastIndexOf('.',  -1));	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
25	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  recordNumber.lastIndexOf('.'));  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  recordNumber.lastIndexOf('.'));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  recordNumber.lastIndexOf('.'));	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
26	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  recordNumber))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  recordNumber))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  recordNumber))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
27	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  EMPTY_STRING_ARRAY))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  EMPTY_STRING_ARRAY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  EMPTY_STRING_ARRAY))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
28	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  name))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  name))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
29	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name,  recordNumber))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name,  recordNumber))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name,  recordNumber))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
30	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  record))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  record))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  record))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
31	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  recordName))  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  recordName))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  recordName))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordNumber  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber  ==  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
33	[BUG]  [BUGGY]  if(name  ==  null  ||  recordNumber!=  null)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordNumber!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordNumber!=  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
34	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.recordNumber!=  null)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.recordNumber!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.recordNumber!=  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
35	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordValues  ==  null)  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordValues  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordValues  ==  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
36	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  mapping  ==  null)  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  mapping  ==  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
37	[BUG]  [BUGGY]  final  String  comment  =  name.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim().toLowerCase(Locale.ENGLISH);	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
38	[BUG]  [BUGGY]  final  String  comment  =  name.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.trim().toLowerCase()  +  1;  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim().toLowerCase()  +  1;	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
39	[BUG]  [BUGGY]  final  String  comment  =  this.name.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  this.name.trim().toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  this.name.trim().toLowerCase();	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
40	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  null  :  name.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  null  :  name.trim().toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  null  :  name.trim().toLowerCase();	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
41	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  null  :  name.trim().toLowerCase();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  null  :  name.trim().toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  null  :  name.trim().toLowerCase();	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
42	[BUG]  [BUGGY]  final  String  comment  =  name.trim().toLowerCase(Locale.US);  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.trim().toLowerCase(Locale.US);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim().toLowerCase(Locale.US);	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
43	[BUG]  [BUGGY]  String  comment  =  name.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.toLowerCase(Locale.ENGLISH);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.toLowerCase(Locale.ENGLISH);	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
44	[BUG]  [BUGGY]  String  comment  =  this.name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  this.name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  this.name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
45	[BUG]  [BUGGY]  String  comment  =  name  ==  null?  null  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name  ==  null?  null  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name  ==  null?  null  :  name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
46	[BUG]  [BUGGY]  String  comment  =  name!=  null?  null  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name!=  null?  null  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name!=  null?  null  :  name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
47	[BUG]  [BUGGY]  String  comment  =  name.toLowerCase()  +  1;  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.toLowerCase()  +  1;  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.toLowerCase()  +  1;	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
48	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.get(name).length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.get(name).length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.get(name).length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
49	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).length()  >=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).length()  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name).length()  >=  0)  {	  if(mapping    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	44	None	replace
50	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.get(name).length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.get(name).length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.get(name).length()!=  0)  {	  if(mapping    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	44	None	replace
51	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)).length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)).length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)).length()!=  0)  {	  if(mapping    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	44	None	replace
52	[BUG]  [BUGGY]  if(name  ==  null  ||  map!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  map!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  map!=  null)  {	  if(name    ==    null    ||    mapping!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	36	None	replace
53	[BUG]  [BUGGY]  if(recordNumber!=  null  &&!recordNumber.equals(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  &&!recordNumber.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  &&!recordNumber.equals(name))  {	  if(recordNumber!=    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	3	None	replace
54	[BUG]  [BUGGY]  if(recordNumber  ==  null  &&!recordNumber.equals(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  &&!recordNumber.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  &&!recordNumber.equals(name))  {	  if(recordNumber!=    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	3	None	replace
55	[BUG]  [BUGGY]  if(name!=  null  ||!recordNumber.equals(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||!recordNumber.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||!recordNumber.equals(name))  {	  if(recordNumber!=    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	3	None	replace
56	[BUG]  [BUGGY]  if(this.recordNumber  ==  null  ||  this.recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.recordNumber  ==  null  ||  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.recordNumber  ==  null  ||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
57	[BUG]  [BUGGY]  if(name  ==  null  ||  this.recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
58	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.recordNumber!=  null  ||  this.recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.recordNumber!=  null  ||  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.recordNumber!=  null  ||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
59	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  this.recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
60	[BUG]  [BUGGY]  if(this.recordNumber!=  null  ||  this.recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.recordNumber!=  null  ||  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.recordNumber!=  null  ||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
61	[BUG]  [BUGGY]  if(this.recordNumber  ==  null  ||  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.recordNumber  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.recordNumber  ==  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
62	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
63	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
64	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
65	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
66	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
67	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES,  name))  {  [CE]  modifier  static  not  allowed  here  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
68	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.containsKey(name)||  name.length()  ==  0)  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	85	None	replace
69	[BUG]  [BUGGY]  if(mapping  ==  null  &&  mapping.containsKey(name))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  &&  mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  &&  mapping.containsKey(name))  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	85	None	replace
70	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( "record "))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( "record "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( "record "))  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	85	None	replace
71	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( "- "))  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( "- "))  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	85	None	replace
72	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.containsKey(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.containsKey(name))  {	  if(name    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	82	None	replace
73	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.length()  ==  0  ||  mapping.containsKey(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.length()  ==  0  ||  mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.length()  ==  0  ||  mapping.containsKey(name))  {	  if(name    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	82	None	replace
74	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.contains(name))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.contains(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.contains(name))  {	  if(name    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
75	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
76	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber()!=  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
77	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
78	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.length()  >=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
79	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
80	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
81	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  recordNumber.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
82	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
83	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
84	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
85	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  map.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  map.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  map.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
86	[BUG]  [BUGGY]  if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
87	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  <identifier>  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
88	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
89	[BUG]  [BUGGY]  if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
90	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name  +  1)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name  +  1)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name  +  1)  ==  null)  {	  if(mapping    ==    null    ||    mapping.get(name)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
91	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)  ==  null)  {	  if(mapping    ==    null    ||    mapping.get(name)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
92	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
93	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  mapping))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  mapping))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  mapping))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
94	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
95	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  comment))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  comment))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  comment))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
96	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
97	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  name.length()!=  0)  {	  if(mapping    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
98	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  mapping.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.length()!=  0)  {	  if(mapping    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  if(name  ==  null  ||  names.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  names.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  names.length()!=  0)  {	  if(mapping    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.length()  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.length()  >=  0)  {	  if(mapping    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
103	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
104	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
105	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES,  name))  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
106	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  ')'  expected	20	None	replace
107	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
108	[BUG]  [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
109	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
110	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
111	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
112	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.')+  1);  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.')+  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.lastIndexOf('.')+  1);	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
113	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.',  1));  [CE]  ')'  expected  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.',  1));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.lastIndexOf('.',  1));	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	52	None	replace
114	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.',  0));  [CE]  ')'  expected  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.',  0));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.lastIndexOf('.',  0));	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	52	None	replace
115	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  recordNumber.lastIndexOf('.'));  [CE]  ')'  expected  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  recordNumber.lastIndexOf('.'));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  recordNumber.lastIndexOf('.'));	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	52	None	replace
116	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.',  -1));  [CE]  ')'  expected  [FE]                                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.',  -1));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.lastIndexOf('.',  -1));	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	52	None	replace
117	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.size()!=  0)  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.size()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.size()!=  0)  {	  if(mapping    ==    null    ||    mapping.size()    ==    0)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
118	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.size()  ==  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.size()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.size()  ==  0)  {	  if(mapping    ==    null    ||    mapping.size()    ==    0)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
119	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.size()  >=  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.size()  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.size()  >=  0)  {	  if(mapping    ==    null    ||    mapping.size()    ==    0)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
120	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.size()  ==  1)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.size()  ==  1)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.size()  ==  1)  {	  if(mapping    ==    null    ||    mapping.size()    ==    0)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
121	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name)  ==  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name)  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name)  ==  0)  {	  if(mapping    ==    null    ||    mapping.size()    ==    0)    {    	non-compiled	[CE]  ')'  expected	87	None	replace
122	[BUG]  [BUGGY]  if(name  >=  null  ||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  >=  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  >=  null  ||  name.length()  ==  0)  {	  if(name!=    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
123	[BUG]  [BUGGY]  if(name  ==  null  ||  recordNumber.length()  ==  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordNumber.length()  ==  0)  {	  if(name!=    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
124	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()  >=  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  name.length()  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  name.length()  >=  0)  {	  if(name!=    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
125	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!recordNumber.contains(name))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||!recordNumber.contains(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!recordNumber.contains(name))  {	  if(mapping    ==    null    ||!recordNumber.contains(name))    {    	non-compiled	[CE]  ')'  expected	89	None	replace
126	[BUG]  [BUGGY]  if(name  ==  null  ||!recordNumber.contains(name))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||!recordNumber.contains(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!recordNumber.contains(name))  {	  if(mapping    ==    null    ||!recordNumber.contains(name))    {    	non-compiled	[CE]  ')'  expected	89	None	replace
127	[BUG]  [BUGGY]  if(recordNumber!=  null  ||!recordNumber.contains(name))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  ||!recordNumber.contains(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||!recordNumber.contains(name))  {	  if(mapping    ==    null    ||!recordNumber.contains(name))    {    	non-compiled	[CE]  ')'  expected	89	None	replace
128	[BUG]  [BUGGY]  if(mapping  ==  null  ||!recordNumber.containsKey(name))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||!recordNumber.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||!recordNumber.containsKey(name))  {	  if(mapping    ==    null    ||!recordNumber.contains(name))    {    	non-compiled	[CE]  ')'  expected	89	None	replace
129	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
130	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
131	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  mapping.length()  >  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  mapping.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  mapping.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
132	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  recordNumber.length()  >  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  recordNumber.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  recordNumber.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
133	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
134	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  map.length()  >  0)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  map.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  map.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
135	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >=  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
136	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	93	None	replace
137	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "   "))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "   "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
138	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "- "))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "- "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
139	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "null "))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "null "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "null "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
140	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( ": "))  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( ": "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( ": "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
141	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "/ "))  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "/ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "/ "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
142	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "   "))  {  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "   "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
143	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "n "))  {  [CE]  ')'  expected  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "n "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "n "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
144	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
145	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
146	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
147	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
148	[BUG]  [BUGGY]  if(marker  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(marker  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(marker  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
149	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
150	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "- "))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
151	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.equals( "- "))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  name.equals( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
152	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  comment.equals( "- "))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  comment.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  comment.equals( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
153	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.equals( "- "))  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.equals( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
154	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.equals( "- "))  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.equals( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
155	[BUG]  [BUGGY]  if(name!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
156	[BUG]  [BUGGY]  if(name  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
157	[BUG]  [BUGGY]  if(name  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  >=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
158	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
159	[BUG]  [BUGGY]  if(mapping  ==  null  ||  parentMap.containsKey(name)!=  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  parentMap.containsKey(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  parentMap.containsKey(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
160	[BUG]  [BUGGY]  if(mapping  ==  null  ||  parentMap.get(name)  ==  null)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  parentMap.get(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  parentMap.get(name)  ==  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
161	[BUG]  [BUGGY]  if(parentMap  ==  null  ||  parentMap.get(name)!=  null)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(parentMap  ==  null  ||  parentMap.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(parentMap  ==  null  ||  parentMap.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
162	[BUG]  [BUGGY]  if(mapping!=  null  ||  parentMap.get(name)!=  null)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  parentMap.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  parentMap.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
163	[BUG]  [BUGGY]  if(parentMap!=  null  ||  parentMap.get(name)!=  null)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(parentMap!=  null  ||  parentMap.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(parentMap!=  null  ||  parentMap.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
164	[BUG]  [BUGGY]  if(name!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	56	None	replace
165	[BUG]  [BUGGY]  if(name  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	56	None	replace
166	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	56	None	replace
167	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  recordNumber.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
168	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
169	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
170	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.length()  ==  0)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
171	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
172	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  null  ||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber!=  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    recordNumber.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
173	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  recordNumber.length()  ==  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    recordNumber.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
174	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  null  ||  recordNumber.length()  ==  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  null  ||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber!=  null  ||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    recordNumber.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
175	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    recordNumber.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
176	[BUG]  [BUGGY]  if(name  ==  null  ||!header.equals( " "))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||!header.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!header.equals( " "))  {	  if(name    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	28	None	replace
177	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
178	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
179	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
180	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
181	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT,  name))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
182	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
183	[BUG]  [BUGGY]  if(recordNumber  ==  null  &&!recordName.equals(name))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  &&!recordName.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  &&!recordName.equals(name))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  ')'  expected	69	None	replace
184	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!recordName.equals( " "))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||!recordName.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!recordName.equals( " "))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  ')'  expected	69	None	replace
185	[BUG]  [BUGGY]  if(recordName  ==  null  ||!recordNumber.equals(name))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordName  ==  null  ||!recordNumber.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordName  ==  null  ||!recordNumber.equals(name))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  ')'  expected	69	None	replace
186	[BUG]  [BUGGY]  if(recordNumber!=  null  ||!recordName.equals(name))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  ||!recordName.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||!recordName.equals(name))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
187	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!recordName.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||!recordName.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!recordName.equals( "- "))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
188	[BUG]  [BUGGY]  if(recordNumber!=  null  &&!recordName.equals(name))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  &&!recordName.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  &&!recordName.equals(name))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  ')'  expected	69	None	replace
189	[BUG]  [BUGGY]  if(name  ==  null  ||!header.equals(recordNumber))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||!header.equals(recordNumber))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!header.equals(recordNumber))  {	  if(recordNumber    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
190	[BUG]  [BUGGY]  if(recordNumber  ==  null  &&!header.equals(name))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  &&!header.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  &&!header.equals(name))  {	  if(recordNumber    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
191	[BUG]  [BUGGY]  if(name!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	18	None	replace
192	[BUG]  [BUGGY]  if(name  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
193	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
194	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
195	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
196	[BUG]  [BUGGY]  if(name  ==  null  ||!name.equals( " "))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||!name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!name.equals( " "))  {	  if(name    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
197	[BUG]  [BUGGY]  if(recordNumber  ==  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null)  {	  if(name    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
198	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "   "))  {  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "   "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
199	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "/ "))  {  [CE]  <identifier>  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "/ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "/ "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
200	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "_ "))  {  [CE]  <identifier>  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "_ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "_ "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
201	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( ": "))  {  [CE]  <identifier>  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( ": "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( ": "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
202	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "# "))  {  [CE]  <identifier>  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "# "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "# "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
203	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "null "))  {  [CE]  <identifier>  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "null "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "null "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
204	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()!=    0)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
205	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  recordNumber.length()!=  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  recordNumber.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  recordNumber.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
206	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
207	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	23	None	replace
208	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber()  ==  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	23	None	replace
209	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	23	None	replace
210	[BUG]  [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment    ==    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
211	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment    ==    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
212	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length());  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment    ==    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
213	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.get(name)  ==  null)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  mapping.get(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.get(name)  ==  null)  {	  if(mapping    ==    null    ||    name    ==    null)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
214	[BUG]  [BUGGY]  if(name  ==  null  ||  name  ==  null)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name  ==  null)  {	  if(mapping    ==    null    ||    name    ==    null)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
215	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.length()  ==  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.length()  ==  0)  {	  if(name    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
216	[BUG]  [BUGGY]  if(name  ==  null  ||  map.length()  ==  0)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  map.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  map.length()  ==  0)  {	  if(name    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
217	[BUG]  [BUGGY]  if(this.mapping  ==  null  ||  this.mapping.containsKey(name))  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.mapping  ==  null  ||  this.mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.mapping  ==  null  ||  this.mapping.containsKey(name))  {	  if(mapping    ==    null    ||    this.mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	80	None	replace
218	[BUG]  [BUGGY]  if(name  ==  null  ||  this.mapping.containsKey(name))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.mapping.containsKey(name))  {	  if(mapping    ==    null    ||    this.mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	80	None	replace
219	[BUG]  [BUGGY]  if(this.mapping!=  null  ||  this.mapping.containsKey(name))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.mapping!=  null  ||  this.mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.mapping!=  null  ||  this.mapping.containsKey(name))  {	  if(mapping    ==    null    ||    this.mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	80	None	replace
220	[BUG]  [BUGGY]  if(this.mapping  ==  null  ||  mapping.containsKey(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.mapping  ==  null  ||  mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.mapping  ==  null  ||  mapping.containsKey(name))  {	  if(mapping    ==    null    ||    this.mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	80	None	replace
221	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.get(name))  {	  if(mapping    ==    null    ||    this.mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	80	None	replace
222	[BUG]  [BUGGY]  if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	14	None	replace
223	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
224	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  ==  1  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.length()  ==  1  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.length()  ==  1  ||  name.length()  ==  0)  {	  if(name    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
225	[BUG]  [BUGGY]  if(name  ==  null  ||  names.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  names.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  names.length()  ==  0)  {	  if(name    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
226	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "-- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "-- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
227	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.startsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.startsWith( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  name.startsWith( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
228	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.startsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.startsWith( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.startsWith( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
229	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.startsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.startsWith( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.startsWith( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
230	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".0 "))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".0 "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".0 "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
231	[BUG]  [BUGGY]  if(name  ==  null  ||  name.equals( "   "))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.equals( "   "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
232	[BUG]  [BUGGY]  if(name  ==  null  ||  name.equals( "- "))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.equals( "- "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
233	[BUG]  [BUGGY]  if(name  ==  null  ||  name.equals( "/ "))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.equals( "/ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.equals( "/ "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
234	[BUG]  [BUGGY]  if(name  ==  null  ||  name.equals( "_ "))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.equals( "_ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.equals( "_ "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
235	[BUG]  [BUGGY]  if(name  ==  null  ||  name.equals( "null "))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.equals( "null "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.equals( "null "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
236	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  mapping))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  mapping))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  mapping))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
237	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
238	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  header))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  header))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  header))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
239	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "record   "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "record   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "record   "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "record   "))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
240	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.equals( "record "))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.equals( "record "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.equals( "record "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "record   "))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
241	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  comment.equals( "record   "))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  comment.equals( "record   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  comment.equals( "record   "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "record   "))    {    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
242	[BUG]  [BUGGY]  if(name  ==  null  ||  comment  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  comment  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  comment  ==  null)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
243	[BUG]  [BUGGY]  if(name  ==  null  ||  this.comment  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.comment  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.comment  ==  null)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
244	[BUG]  [BUGGY]  if(name  ==  null  ||  recordNumber  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordNumber  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordNumber  ==  0)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
245	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
246	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING,  name))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
247	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
248	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
249	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
250	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
251	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)).length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)).length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)).length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.get(name).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
252	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(0).length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(0).length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(0).length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.get(name).length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
253	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
254	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
255	[BUG]  [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
256	[BUG]  [BUGGY]  if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name.length()  ==  0)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
257	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
258	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
259	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  [CE]  modifier  static  not  allowed  here  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length());	  final    String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  modifier  static  not  allowed  here	51	None	replace
260	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  names.length());  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  names.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  names.length());	  final    String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
261	[BUG]  [BUGGY]  final  String  comment  =  this.name.substring(0,  name.length());  [CE]  illegal  start  of  type  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  this.name.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  this.name.substring(0,  name.length());	  final    String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
262	[BUG]  [BUGGY]  final  String  comment  =  names.substring(0,  name.length());  [CE]  illegal  start  of  type  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  names.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  names.substring(0,  name.length());	  final    String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
263	[BUG]  [BUGGY]  static  final  String  comment  =  name.substring(0,  name.length());  [CE]  illegal  start  of  type  [FE]                                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  static  final  String  comment  =  name.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	static  final  String  comment  =  name.substring(0,  name.length());	  final    String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
264	[BUG]  [BUGGY]  final  String  comment  =  this.name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  this.name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  this.name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
265	[BUG]  [BUGGY]  final  String  comment  =  name.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.toLowerCase(Locale.ENGLISH);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.toLowerCase(Locale.ENGLISH);	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
266	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  null  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  null  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  null  :  name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
267	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  null  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  null  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  null  :  name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
268	[BUG]  [BUGGY]  final  String  comment  =  name.toLowerCase()  +  1;  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.toLowerCase()  +  1;  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.toLowerCase()  +  1;	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  ')'  expected	95	None	replace
269	[BUG]  [BUGGY]  if(name  ==  null  ||  record.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  record.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  record.length()  ==  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
270	[BUG]  [BUGGY]  if(record  ==  null  ||  record.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record  ==  null  ||  record.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record  ==  null  ||  record.length()  ==  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
271	[BUG]  [BUGGY]  if(name  ==  null  ||  recordValues.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordValues.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordValues.length()  ==  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
272	[BUG]  [BUGGY]  if(name  ==  null  ||  recordName.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordName.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordName.length()  ==  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
273	[BUG]  [BUGGY]  if(name  ==  null  ||  comment!=  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  comment!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  comment!=  null)  {	  if(mapping    ==    null    ||    comment!=    null)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
274	[BUG]  [BUGGY]  if(name  ==  null  ||  this.comment!=  null)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.comment!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.comment!=  null)  {	  if(mapping    ==    null    ||    comment!=    null)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
275	[BUG]  [BUGGY]  if(name  ==  null  ||  recordNumber!=  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordNumber!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordNumber!=  0)  {	  if(mapping    ==    null    ||    comment!=    null)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
276	[BUG]  [BUGGY]  if(mapping!=  null  ||  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  name.length()!=  0)  {	  if(name    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
277	[BUG]  [BUGGY]  if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
278	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
279	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()  ==  0)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
280	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  [BUGGY]  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.length()  [BUGGY]  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.length()  [BUGGY]  0)  {	  if(name    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
281	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
282	[BUG]  [BUGGY]  if(name  ==  null  &&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  &&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  &&  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
283	[BUG]  [BUGGY]  if(name!=  null  ||  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
284	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
285	[BUG]  [BUGGY]  if(name!=  null  &&  mapping.length()  >  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  mapping.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  mapping.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
286	[BUG]  [BUGGY]  if(mapping!=  null  ||  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
287	[BUG]  [BUGGY]  if(name  ==  null  ||  name.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
288	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()));  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()));	  final    String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	48	None	replace
289	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  names.length()  -  1);  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  names.length()  -  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  names.length()  -  1);	  final    String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	48	None	replace
290	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  +  1);  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length()  +  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length()  +  1);	  final    String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	48	None	replace
291	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length();  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length();	  final    String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	48	None	replace
292	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
293	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
294	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
295	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
296	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
297	[BUG]  [BUGGY]  if(name  ==  null  ||  this.name!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.name!=  null)  {	  if(name    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
298	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.isEmpty())  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.isEmpty())  {	  if(name    ==    null    ||    mapping.isEmpty())    {    	non-compiled	[CE]  ')'  expected	39	None	replace
299	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.isEmpty())  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.isEmpty())  {	  if(name    ==    null    ||    mapping.isEmpty())    {    	non-compiled	[CE]  ')'  expected	39	None	replace
300	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.equals(mapping.get(name)))  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.equals(mapping.get(name)))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.equals(mapping.get(name)))  {	  if(name    ==    null    ||    mapping.isEmpty())    {    	non-compiled	[CE]  ')'  expected	39	None	replace
301	[BUG]  [BUGGY]  if(mapping!=  null  ||  name.isEmpty())  {  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  name.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  name.isEmpty())  {	  if(name    ==    null    ||    mapping.isEmpty())    {    	non-compiled	[CE]  ')'  expected	39	None	replace
302	[BUG]  [BUGGY]  if(name!=  null  &&!header.equals(name))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&!header.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&!header.equals(name))  {	  if(name!=    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
303	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.length()!=  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
304	[BUG]  [BUGGY]  if(name  ==  null  ||  recordNumber  ==  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  recordNumber  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  recordNumber  ==  null)  {	  if(name    ==    null    ||    mapping    ==    null)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
305	[BUG]  [BUGGY]  if(name  ==  null  ||  map.containsKey(name))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  map.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  map.containsKey(name))  {	  if(name    ==    null    ||    mapping    ==    null)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
306	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BASE))  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BASE))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BASE))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	16	None	replace
307	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping!=  null)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
308	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
309	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping  ==  null)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
310	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  this.name!=  null)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  this.name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  this.name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
311	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber!=  null)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
312	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name  ==  null)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
313	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS,  name))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS,  name))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	100	None	replace
314	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping!=  null)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
315	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
316	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	65	None	replace
317	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name  ==  null)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
318	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapper!=  null)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapper!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapper!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
319	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  header  ==  null)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  header  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  header  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
320	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)  ==  null)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)  ==  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	45	None	replace
321	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)  >=  null)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)  >=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)  >=  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	45	None	replace
322	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  recordNumber)!=  null)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  recordNumber)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  recordNumber)!=  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	45	None	replace
323	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  comment)!=  null)  {  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name,  comment)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name,  comment)!=  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	45	None	replace
324	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.equals(recordNumber))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.equals(recordNumber))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.equals(recordNumber))  {	  if(name    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
325	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.equals( "- "))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.equals( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.equals( "- "))  {	  if(name    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
326	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber.length()!=  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  recordNumber.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
327	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.length()!=  0)  {  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
328	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.length());  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.length());	  String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  ')'  expected	50	None	replace
329	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  recordNumber.length());  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  recordNumber.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  recordNumber.length());	  String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  ')'  expected	50	None	replace
330	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  names.length());  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  names.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  names.length());	  String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  ')'  expected	50	None	replace
331	[BUG]  [BUGGY]  String  comment  =  this.name.substring(0,  name.length());  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  this.name.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  this.name.substring(0,  name.length());	  String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  	50	None	replace
332	[BUG]  [BUGGY]  String  comment  =  names.substring(0,  name.length());  [CE]  [FE]                                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  names.substring(0,  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  names.substring(0,  name.length());	  String    comment    =    name.substring(0,    name.length()    -    2);    	non-compiled	[CE]  	50	None	replace
333	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.length()));  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.length()));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.length()));	  String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  	47	None	replace
334	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.length()  +  1);  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.length()  +  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.length()  +  1);	  String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	47	None	replace
335	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  names.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  names.length()  -  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  names.length()  -  1);	  String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
336	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
337	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY,  name))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
338	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
339	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
340	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapping!=  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapping!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapping!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
341	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  recordNumber!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  recordNumber!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  recordNumber!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
342	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapping  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapping  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
343	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  this.name!=  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  this.name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  this.name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
344	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapper!=  null)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapper!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  mapper!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
345	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.'),  name.length());  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.lastIndexOf('.'),  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.lastIndexOf('.'),  name.length());	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
346	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.indexOf('.'));  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.indexOf('.'));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.indexOf('.'));	  final    String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
347	[BUG]  [BUGGY]  if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
348	[BUG]  [BUGGY]  if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	94	None	replace
349	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "__ "))  {  [CE]  modifier  static  not  allowed  here  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "__ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equals( "__ "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "   "))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	61	None	replace
350	[BUG]  [BUGGY]  if(comment  ==  null  ||  name!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(comment  ==  null  ||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(comment  ==  null  ||  name!=  null)  {	  if(mapping    ==    null    ||    comment!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	81	None	replace
351	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	55	None	replace
352	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).startsWith( "__ "))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).startsWith( "__ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name).startsWith( "__ "))  {	  if(mapping    ==    null    ||    mapping.get(name).length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	75	None	replace
353	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).startsWith( "- "))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).startsWith( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name).startsWith( "- "))  {	  if(mapping    ==    null    ||    mapping.get(name).length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	75	None	replace
354	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
355	[BUG]  [BUGGY]  if(this.recordNumber  ==  null  ||  this.recordNumber!=  null)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.recordNumber  ==  null  ||  this.recordNumber!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.recordNumber  ==  null  ||  this.recordNumber!=  null)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	88	None	replace
356	[BUG]  [BUGGY]  if(mapping!=  null  ||  this.mapping.containsKey(name))  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  this.mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  this.mapping.containsKey(name))  {	  if(mapping    ==    null    ||    this.mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	80	None	replace
357	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( " "))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.containsKey(name)||  name.equals( " "))  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	85	None	replace
358	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.startsWith( "- "))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.containsKey(name)||  name.startsWith( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.containsKey(name)||  name.startsWith( "- "))  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	85	None	replace
359	[BUG]  [BUGGY]  if(name  ==  null  ||  name.equals( "* "))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.equals( "* "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.equals( "* "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
360	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
361	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name!=  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  ')'  expected	68	None	replace
362	[BUG]  [BUGGY]  final  int  comment  =  name.substring(0,  name.length()  -  1);  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  int  comment  =  name.substring(0,  name.length()  -  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  int  comment  =  name.substring(0,  name.length()  -  1);	  final    String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	48	None	replace
363	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_LIST))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_LIST))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_LIST))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
364	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMESPACE))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMESPACE))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMESPACE))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
365	[BUG]  [BUGGY]  if(header  ==  null  ||  this.header!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(header  ==  null  ||  this.header!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(header  ==  null  ||  this.header!=  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
366	[BUG]  [BUGGY]  if(this.header  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header  ==  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
367	[BUG]  [BUGGY]  if(this.header  ==  null  ||  this.mapping  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header  ==  null  ||  this.mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header  ==  null  ||  this.mapping  ==  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
368	[BUG]  [BUGGY]  if(recordNumber!=  null  ||!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  ||!header.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||!header.equals(name))  {	  if(recordNumber    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
369	[BUG]  [BUGGY]  if(recordNumber!=  null  &&!header.equals(name))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  &&!header.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  &&!header.equals(name))  {	  if(recordNumber    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
370	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!header.equals( " "))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||!header.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!header.equals( " "))  {	  if(recordNumber    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
371	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name  ==  null)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
372	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  map!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  map!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  map!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
373	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
374	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  modifier  static  not  allowed  here	95	None	replace
375	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  values[name.intValue()  ]  :  name.toLowerCase();  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  values[name.intValue()  ]  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  values[name.intValue()  ]  :  name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  modifier  static  not  allowed  here	95	None	replace
376	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.toLowerCase()  :  name.toLowerCase();  [CE]  modifier  static  not  allowed  here  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.toLowerCase()  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.toLowerCase()  :  name.toLowerCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  modifier  static  not  allowed  here	95	None	replace
377	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	54	None	replace
378	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name  +  1))  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name  +  1))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name  +  1))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	54	None	replace
379	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  name.length()  ==  0)  {	  if(name!=    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	5	None	replace
380	[BUG]  [BUGGY]  if(name!=  null  ||  names.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  names.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  names.length()  ==  0)  {	  if(name!=    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	5	None	replace
381	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	93	None	replace
382	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	92	None	replace
383	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equalsIgnoreCase( "- "))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equalsIgnoreCase( "- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.equalsIgnoreCase( "- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	26	None	replace
384	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name  +  1))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name  +  1))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name  +  1))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	13	None	replace
385	[BUG]  [BUGGY]  if(name  ==  null  ||  this.recordNumber  ==  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.recordNumber  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.recordNumber  ==  null)  {	  if(name    ==    null    ||    mapping    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
386	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	59	None	replace
387	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  map!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  map!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  map!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	59	None	replace
388	[BUG]  [BUGGY]  if(name!=  null  ||  mapping.isEmpty())  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  mapping.isEmpty())  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  mapping.isEmpty())  {	  if(name    ==    null    ||    mapping.isEmpty())    {    	non-compiled	[CE]  modifier  static  not  allowed  here	39	None	replace
389	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.trim().toLowerCase();  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.trim().toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.trim().toLowerCase();	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  modifier  static  not  allowed  here	78	None	replace
390	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.trim().toLowerCase();  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.trim().toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.trim().toLowerCase();	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  modifier  static  not  allowed  here	78	None	replace
391	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	23	None	replace
392	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	66	None	replace
393	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	66	None	replace
394	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordNumber!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber!=  0)  {	  if(mapping    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	8	None	replace
395	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
396	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
397	[BUG]  [BUGGY]  if(this.header!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
398	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||!recordNumber.equals( " "))  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||!recordNumber.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||!recordNumber.equals( " "))  {	  if(recordNumber    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  ')'  expected	1	None	replace
399	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.length()  ==  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.mapping.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
400	[BUG]  [BUGGY]  if(mapping  ==  null  &&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  &&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  &&  name.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  ')'  expected	86	None	replace
401	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber.intValue()!=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordNumber.intValue()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber.intValue()!=  0)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
402	[BUG]  [BUGGY]  if(parentMap  ==  null  ||  mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(parentMap  ==  null  ||  mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(parentMap  ==  null  ||  mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
403	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".- "))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
404	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".java "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".java "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".java "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
405	[BUG]  [BUGGY]  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
406	[BUG]  [BUGGY]  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name!=  null?  EMPTY_STRING_ARRAY  :  name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
407	[BUG]  [BUGGY]  String  comment  =  name  ==  null?  values[name.intValue()  ]  :  name.toLowerCase();  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name  ==  null?  values[name.intValue()  ]  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name  ==  null?  values[name.intValue()  ]  :  name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  ')'  expected	49	None	replace
408	[BUG]  [BUGGY]  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.toLowerCase()  :  name.toLowerCase();  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.toLowerCase()  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.toLowerCase()  :  name.toLowerCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  ')'  expected	49	None	replace
409	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name!=  null)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
410	[BUG]  [BUGGY]  if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
411	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name  >=  null)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name  >=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name  >=  null)  {	  if(name    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
412	[BUG]  [BUGGY]  if(record!=  null  ||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record!=  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record!=  null  ||  name.length()  ==  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
413	[BUG]  [BUGGY]  if(record!=  null  ||  record.length()  ==  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record!=  null  ||  record.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record!=  null  ||  record.length()  ==  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
414	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.length()!=  0)  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  recordNumber.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	27	None	replace
415	[BUG]  [BUGGY]  if(name  ==  null  ||  mapping.get(name).length()  ==  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  mapping.get(name).length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  mapping.get(name).length()  ==  0)  {	  if(name    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
416	[BUG]  [BUGGY]  if(name!=  null  ||  mapping.get(name).length()  ==  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  mapping.get(name).length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  mapping.get(name).length()  ==  0)  {	  if(name    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
417	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.equals( "   "))  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.equals( "   "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	60	None	replace
418	[BUG]  [BUGGY]  if(mapping  ==  null  ||  map.containsKey(name))  {  [CE]  modifier  static  not  allowed  here  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  map.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  map.containsKey(name))  {	  if(mapping!=    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	22	None	replace
419	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.equals( " "))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  name.equals( " "))  {	  if(mapping!=    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	22	None	replace
420	[BUG]  [BUGGY]  if(recordName  ==  null  ||!recordName.equals(name))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordName  ==  null  ||!recordName.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordName  ==  null  ||!recordName.equals(name))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	69	None	replace
421	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	17	None	replace
422	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.equals( " "))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.equals( " "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	17	None	replace
423	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.length()).trim();  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.length()).trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.length()).trim();	  String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	47	None	replace
424	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
425	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.equals( " "))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)||  name.equals( " "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
426	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordNumber  ==  null  ||  recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordNumber  ==  null  ||  recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordNumber  ==  null  ||  recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	72	None	replace
427	[BUG]  [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  modifier  static  not  allowed  here	96	None	replace
428	[BUG]  [BUGGY]  if(name  ==  null)  {  final  String  name  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  final  String  name  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {  final  String  name  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  modifier  static  not  allowed  here	96	None	replace
429	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  modifier  static  not  allowed  here  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  modifier  static  not  allowed  here	96	None	replace
430	[BUG]  [BUGGY]  if(name  ==  null  ||  this.mapping.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.mapping.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.mapping.length()  ==  0)  {	  if(name    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	9	None	replace
431	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.containsKey(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.mapping.containsKey(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.containsKey(name)!=  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	45	None	replace
432	[BUG]  [BUGGY]  if(mapping  ==  null  ||  map.containsKey(name)  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  map.containsKey(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  map.containsKey(name)  ==  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	45	None	replace
433	[BUG]  [BUGGY]  if(name!=  null  ||!name.equals( " "))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||!name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||!name.equals( " "))  {	  if(name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	33	None	replace
434	[BUG]  [BUGGY]  if(name!=  null  ||  name  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  name  ==  null)  {	  if(name    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	63	None	replace
435	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name!=  null)  {  [CE]  <identifier>  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
436	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.equals( " "))  {  [CE]  <identifier>  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.equals( " "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
437	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {  [CE]  <identifier>  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
438	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
439	[BUG]  [BUGGY]  if(name  ==  null  ||  description  ==  null)  {  [CE]  <identifier>  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  description  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  description  ==  null)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
440	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {  [CE]  <identifier>  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name!=  null)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
441	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()!=  0)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
442	[BUG]  [BUGGY]  if(this.name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  <identifier>  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.name!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
443	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.indexOf('.'));  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.indexOf('.'));  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.indexOf('.'));	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	52	None	replace
444	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.'),  name.length());  [CE]  ')'  expected  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  name.lastIndexOf('.'),  name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  name.lastIndexOf('.'),  name.length());	  String    comment    =    name.substring(0,    name.lastIndexOf('.'));    	non-compiled	[CE]  ')'  expected	52	None	replace
445	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
446	[BUG]  [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
447	[BUG]  [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  name  =  name.substring(0,  name.length()  -  1);	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	98	None	replace
448	[BUG]  [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  name  =  name.substring(0,  name.length()  -  1);  if(name!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
449	[BUG]  [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  name  =  name.substring(0,  name.length()  -  1);  if(name  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  name  =  name.substring(0,  name.length()  -  1);  if(name  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment    ==    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
450	[BUG]  [BUGGY]  if(name  ==  null)  {  final  String  name  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  final  String  name  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {  final  String  name  =  name.substring(0,  name.length()  -  1);  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment    ==    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
451	[BUG]  [BUGGY]  if(name  ==  null  ||!recordNumber.equals( " "))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||!recordNumber.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||!recordNumber.equals( " "))  {	  if(name    ==    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  ')'  expected	2	None	replace
452	[BUG]  [BUGGY]  if(header  ==  null  ||!header.equals( " "))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(header  ==  null  ||!header.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(header  ==  null  ||!header.equals( " "))  {	  if(header    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	29	None	replace
453	[BUG]  [BUGGY]  if(header  ==  null  ||!header.equals(this.recordNumber))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(header  ==  null  ||!header.equals(this.recordNumber))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(header  ==  null  ||!header.equals(this.recordNumber))  {	  if(header    ==    null    ||!header.equals(name))    {    	non-compiled	[CE]  ')'  expected	29	None	replace
454	[BUG]  [BUGGY]  if(mapping  ==  null  ||  names.containsKey(name))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  names.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  names.containsKey(name))  {	  if(name    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  ')'  expected	82	None	replace
455	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name!=  null)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
456	[BUG]  [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(markers  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	67	None	replace
457	[BUG]  [BUGGY]  if(mapping  ==  null  ||  parentMapping.get(name)!=  null)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  parentMapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  parentMapping.get(name)!=  null)  {	  if(mapping!=    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	42	None	replace
458	[BUG]  [BUGGY]  if(mapping!=  null  ||  this.mapping.get(name)  ==  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  this.mapping.get(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  this.mapping.get(name)  ==  null)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	90	None	replace
459	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name),  this.recordNumber)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name),  this.recordNumber)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.get(name),  this.recordNumber)  {	  if(mapping    ==    null    ||    this.mapping.get(name)!=    null)    {    	non-compiled	[CE]  ')'  expected	90	None	replace
460	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name  ==  null)  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	99	None	replace
461	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name  ==  null)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	99	None	replace
462	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name!=  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  ')'  expected	99	None	replace
463	[BUG]  [BUGGY]  final  String  comment  =  EMPTY_STRING_ARRAY.trim();  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  EMPTY_STRING_ARRAY.trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  EMPTY_STRING_ARRAY.trim();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  ')'  expected	79	None	replace
464	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.trim()  :  name.toLowerCase();  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.trim()  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.trim()  :  name.toLowerCase();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  ')'  expected	79	None	replace
465	[BUG]  [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.trim()  :  name.trim();  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.trim()  :  name.trim();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name!=  null?  EMPTY_STRING_ARRAY.trim()  :  name.trim();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  ')'  expected	79	None	replace
466	[BUG]  [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY.trim()  :  name.toLowerCase();  [CE]  ')'  expected  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY.trim()  :  name.toLowerCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name  ==  null?  EMPTY_STRING_ARRAY.trim()  :  name.toLowerCase();	  final    String    comment    =    name.trim();    	non-compiled	[CE]  ')'  expected	79	None	replace
467	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMESPACE))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMESPACE))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMESPACE))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
468	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_KEY))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_KEY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_KEY))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
469	[BUG]  [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_KEY))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	18	None	replace
470	[BUG]  [BUGGY]  if(name  ==  null  ||  this.recordNumber!=  null)  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.recordNumber!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.recordNumber!=  null)  {	  if(name    ==    null    ||    mapping!=    null)    {    	non-compiled	[CE]  ')'  expected	36	None	replace
471	[BUG]  [BUGGY]  if(name  ==  null  ||  this.mapping  ==  null)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.mapping  ==  null)  {	  if(name    ==    null    ||    mapping    ==    null)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
472	[BUG]  [BUGGY]  if(name  ==  null  ||  record  values  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  record  values  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  record  values  ==  null)  {	  if(name    ==    null    ||    mapping    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	35	None	replace
473	[BUG]  [BUGGY]  if(name!=  null  ||  mapping  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  mapping  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  mapping  ==  null)  {	  if(name    ==    null    ||    mapping    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	35	None	replace
474	[BUG]  [BUGGY]  if(this.recordNumber!=  null  &&  this.recordNumber.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.recordNumber!=  null  &&  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.recordNumber!=  null  &&  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    this.recordNumber.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
475	[BUG]  [BUGGY]  if(record  ==  null  ||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record  ==  null  ||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record  ==  null  ||  name.length()!=  0)  {	  if(record    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	73	None	replace
476	[BUG]  [BUGGY]  if(mapping!=  null  ||!recordNumber.contains(name))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||!recordNumber.contains(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||!recordNumber.contains(name))  {	  if(mapping    ==    null    ||!recordNumber.contains(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	89	None	replace
477	[BUG]  [BUGGY]  if(mapping  ==  null  ||!recordNumber.contains(name  +  '/'))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||!recordNumber.contains(name  +  '/'))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||!recordNumber.contains(name  +  '/'))  {	  if(mapping    ==    null    ||!recordNumber.contains(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	89	None	replace
478	[BUG]  [BUGGY]  if(mapping!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	100	None	replace
479	[BUG]  [BUGGY]  if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	100	None	replace
480	[BUG]  [BUGGY]  if(mapping!=  null  &&!recordNumber.equals(name))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&!recordNumber.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&!recordNumber.equals(name))  {	  if(mapping!=    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	84	None	replace
481	[BUG]  [BUGGY]  if(name  ==  null  ||  record  values!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  record  values!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  record  values!=  null)  {	  if(name    ==    null    ||    mapping!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	36	None	replace
482	[BUG]  [BUGGY]  if(name  ==  null  ||  this.mapping!=  null)  {  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  this.mapping!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  this.mapping!=  null)  {	  if(name    ==    null    ||    mapping!=    null)    {    	non-compiled	[CE]  	36	None	replace
483	[BUG]  [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [CE]  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
484	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [CE]  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
485	[BUG]  [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [CE]  [FE]                              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null)  {  final  String  comment  =  name.substring(0,  name.length()  -  1);  if(comment!=  null)  {  throw  new  IllegalStateException( "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name   ");  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
486	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  this.recordNumber.length()  ==  0)  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  this.recordNumber.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  this.recordNumber.length()  ==  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()    ==    0)    {    	non-compiled	[CE]  	23	None	replace
487	[BUG]  [BUGGY]  if(name!=  null  &&  name.equals( " "))  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  &&  name.equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  &&  name.equals( " "))  {	  if(name!=    null)    {    	non-compiled	[CE]  	33	None	replace
488	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordValues.length  ==  0)  {  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordValues.length  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordValues.length  ==  0)  {	  if(mapping    ==    null    ||    recordNumber.length()    ==    0)    {    	non-compiled	[CE]  	72	None	replace
489	[BUG]  [BUGGY]  final  String  comment  =  name.toUpperCase();  [CE]  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.toUpperCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.toUpperCase();	  final    String    comment    =    name.toLowerCase();    	non-compiled	[CE]  	95	None	replace
490	[BUG]  [BUGGY]  if(mapping  ==  null  ||  name.indexOf('.')  >=  0)  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  name.indexOf('.')  >=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  name.indexOf('.')  >=  0)  {	  if(name    ==    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  	82	None	replace
491	[BUG]  [BUGGY]  if(recordName!=  null  ||!recordName.equals(name))  {  [CE]  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordName!=  null  ||!recordName.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordName!=  null  ||!recordName.equals(name))  {	  if(recordNumber    ==    null    ||!recordName.equals(name))    {    	non-compiled	[CE]  	69	None	replace
492	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  comment.length()  >  0)  {  [CE]  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  comment.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  comment.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  	93	None	replace
493	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name!=  null)  {  [CE]  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  name!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)&&    name.length()    >    0)    {    	non-compiled	[CE]  	93	None	replace
494	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.length()!=  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
495	[BUG]  [BUGGY]  if(recordNumber  >=  null  &&!recordNumber.equals(name))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  >=  null  &&!recordNumber.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  >=  null  &&!recordNumber.equals(name))  {	  if(recordNumber!=    null    ||!recordNumber.equals(name))    {    	non-compiled	[CE]  ')'  expected	3	None	replace
496	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
497	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name.length()!=  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_BACKSLASH))    {    	non-compiled	[CE]  ')'  expected	66	None	replace
498	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "-- "))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "-- "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  comment.equals( "-- "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "-   "))    {    	non-compiled	[CE]  ')'  expected	26	None	replace
499	[BUG]  [BUGGY]  if(this.header!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	18	None	replace
500	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.get(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	59	None	replace
501	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	59	None	replace
502	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	55	None	replace
503	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  >  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	55	None	replace
504	[BUG]  [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null)  {  final  String  comment  =  name.substring(0,  name.length());  if(comment  ==  null)  {  return  EMPTY_STRING_ARRAY;  }	  if(name!=    null)    {    final    String    comment    =    name.substring(0,    name.length()    -    1);    if(comment    ==    null)    {    return    EMPTY_STRING_ARRAY;    }    	non-compiled	[CE]  modifier  static  not  allowed  here	97	None	replace
505	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment.length()!=  0)  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
506	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  ')'  expected	54	None	replace
507	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  comment))  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  comment))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  comment))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	54	None	replace
508	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name  + ") ")  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name  + ") ")  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name  + ") ")  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
509	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name)&&  this.header!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name)&&  this.header!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME,  name)&&  this.header!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME,    name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	54	None	replace
510	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordValues.get(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordValues.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordValues.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	74	None	replace
511	[BUG]  [BUGGY]  if(mapping  ==  null  ||  headerMap.get(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  headerMap.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  headerMap.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	74	None	replace
512	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.parentMap.get(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.parentMap.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.parentMap.get(name)!=  null)  {	  if(mapping    ==    null    ||    parentMap.get(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	74	None	replace
513	[BUG]  [BUGGY]  if(mapping  ==  null  ||  names.contains(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  names.contains(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  names.contains(name)!=  null)  {	  if(name    ==    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
514	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  this.recordNumber.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  this.recordNumber.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  this.recordNumber.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	27	None	replace
515	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.length()!=    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	27	None	replace
516	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.get(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.get(name)!=  null)  {	  if(mapping!=    null    ||    mapping.get(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	42	None	replace
517	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.get(name)  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.get(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.get(name)  ==  null)  {	  if(mapping!=    null    ||    mapping.get(name)    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	43	None	replace
518	[BUG]  [BUGGY]  if(mapping  ==  null  ||  map.get(name)  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  map.get(name)  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  map.get(name)  ==  null)  {	  if(mapping!=    null    ||    mapping.get(name)    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	43	None	replace
519	[BUG]  [BUGGY]  if(mapping!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	92	None	replace
520	[BUG]  [BUGGY]  if(map  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(map  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(map  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	92	None	replace
521	[BUG]  [BUGGY]  if(map!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(map!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(map!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
522	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
523	[BUG]  [BUGGY]  if(mapping  ==  null  &&  mapping.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  &&  mapping.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  &&  mapping.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
524	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.length()  >  0)  {	  if(mapping!=    null    &&    name.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
525	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.recordValues!=  null)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.recordValues!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.recordValues!=  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
526	[BUG]  [BUGGY]  if(mapping  ==  null  ||  recordValues!=  null)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  recordValues!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  recordValues!=  null)  {	  if(mapping    ==    null    ||    recordNumber!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
527	[BUG]  [BUGGY]  if(name  ==  null  ||  name.indexOf('.')  <  0)  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.indexOf('.')  <  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.indexOf('.')  <  0)  {	  if(name    ==    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
528	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).equals( " "))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name).equals( " "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name).equals( " "))  {	  if(mapping    ==    null    ||    mapping.get(name)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
529	[BUG]  [BUGGY]  if(mapping  ==  null  ||  names.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  names.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  names.length()  ==  0)  {	  if(mapping!=    null    ||    name.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
530	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
531	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name  + ") ")  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name  + ") ")  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name  + ") ")  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
532	[BUG]  [BUGGY]  if(record  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  name))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES,    name))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
533	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
534	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)&&  name.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)&&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
535	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
536	[BUG]  [BUGGY]  if(name!=  null  ||  mapping.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  mapping.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  mapping.length()  ==  0)  {	  if(name    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
537	[BUG]  [BUGGY]  if(map  ==  null  ||  name.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(map  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(map  ==  null  ||  name.length()  ==  0)  {	  if(name    ==    null    ||    mapping.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
538	[BUG]  [BUGGY]  if(mapping!=  null  &&!header.equals(name))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&!header.equals(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&!header.equals(name))  {	  if(mapping!=    null    ||!header.equals(name))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
539	[BUG]  [BUGGY]  if(mapping  >=  null  ||  mapping.containsKey(name))  {  [CE]  illegal  start  of  type  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  >=  null  ||  mapping.containsKey(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  >=  null  ||  mapping.containsKey(name))  {	  if(mapping!=    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
540	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.get(name))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.get(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.get(name))  {	  if(mapping!=    null    ||    mapping.containsKey(name))    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
541	[BUG]  [BUGGY]  if(this.header  ==  null  ||  this.mapping!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header  ==  null  ||  this.mapping!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header  ==  null  ||  this.mapping!=  null)  {	  if(mapping    ==    null    ||    this.header!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
542	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment  ==  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment  ==  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
543	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.get(name)!=  null)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.get(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  mapping.get(name)!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
544	[BUG]  [BUGGY]  String  comment  =  name.toUpperCase();  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.toUpperCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.toUpperCase();	  String    comment    =    name.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
545	[BUG]  [BUGGY]  if(this.header!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.header!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.header!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
546	[BUG]  [BUGGY]  if(parent!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  type  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(parent!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(parent!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
547	[BUG]  [BUGGY]  if(name  ==  null  ||  name.indexOf('.')!=  0)  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  name.indexOf('.')!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  name.indexOf('.')!=  0)  {	  if(name    ==    null    ||    name.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
548	[BUG]  [BUGGY]  final  String  comment  =  name.trim().toLowerCase()  + ": ";  [CE]  illegal  start  of  type  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.trim().toLowerCase()  + ": ";  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim().toLowerCase()  + ": ";	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
549	[BUG]  [BUGGY]  final  String  comment  =  name.trim().toUpperCase();  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  final  String  comment  =  name.trim().toUpperCase();  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	final  String  comment  =  name.trim().toUpperCase();	  final    String    comment    =    name.trim().toLowerCase();    	non-compiled	[CE]  modifier  static  not  allowed  here	78	None	replace
550	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name)!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name)!=  null)  {	  if(mapping    ==    null    ||    mapping.containsKey(name)!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	45	None	replace
551	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "._ "))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "._ "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( "._ "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	62	None	replace
552	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".prototype. "))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".prototype. "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)||  name.startsWith( ".prototype. "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.startsWith(   "-   "))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	62	None	replace
553	[BUG]  [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name,  comment))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  mapping.containsKey(name,  comment))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  mapping.containsKey(name,  comment))  {	  if(mapping    ==    null    ||    mapping.containsKey(name,    comment))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	25	None	replace
554	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.comment!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.comment!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.comment!=  null)  {	  if(mapping    ==    null    ||    comment!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	81	None	replace
555	[BUG]  [BUGGY]  if(mapping!=  null  ||  comment  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  comment  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  comment  ==  null)  {	  if(mapping    ==    null    ||    comment!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
556	[BUG]  [BUGGY]  if(this.name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(this.name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(this.name  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
557	[BUG]  [BUGGY]  if(record  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
558	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	10	None	replace
559	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	68	None	replace
560	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_STRING))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	68	None	replace
561	[BUG]  [BUGGY]  if(name!=  null  ||  name!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  name!=  null)  {	  if(name    ==    null    ||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	63	None	replace
562	[BUG]  [BUGGY]  if(record!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(record!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(record!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(name!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	11	None	replace
563	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  comment.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	12	None	replace
564	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	12	None	replace
565	[BUG]  [BUGGY]  String  comment  =  name.substring(0,  this.name.length());  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  String  comment  =  name.substring(0,  this.name.length());  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	String  comment  =  name.substring(0,  this.name.length());	  String    comment    =    name.substring(0,    name.length()    -    1);    	non-compiled	[CE]  ')'  expected	47	None	replace
566	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.comment  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.comment  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.comment  ==  null)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
567	[BUG]  [BUGGY]  if(mapping  ==  null  ||  comment  ==  null  ||  name.length()  ==  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  comment  ==  null  ||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  comment  ==  null  ||  name.length()  ==  0)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
568	[BUG]  [BUGGY]  if(mapping  ==  null  ||  comment  ==  null  ||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  comment  ==  null  ||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  comment  ==  null  ||  name.length()!=  0)  {	  if(mapping    ==    null    ||    comment    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
569	[BUG]  [BUGGY]  if(mapping  ==  null  ||  header  ==  null)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  header  ==  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  header  ==  null)  {	  if(mapping    ==    null    ||    name    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
570	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.recordNumber  ==  name)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.recordNumber  ==  name)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.recordNumber  ==  name)  {	  if(mapping    ==    null    ||    name    ==    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
571	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
572	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)&&  name.length()  >  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)&&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_VALUES))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	101	None	replace
573	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)&&  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	21	None	replace
574	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name.length()    ==    0)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	21	None	replace
575	[BUG]  [BUGGY]  if(mapping!=  null  &&  mapping.get(name))  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  mapping.get(name))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  mapping.get(name))  {	  if(mapping!=    null    &&    mapping.containsKey(name))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	85	None	replace
576	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [CE]  modifier  static  not  allowed  here  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	17	None	replace
577	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.length()!=  0)  {  [CE]  modifier  static  not  allowed  here  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_ARRAY))    {    	non-compiled	[CE]  modifier  static  not  allowed  here	17	None	replace
578	[BUG]  [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  map!=  null)  {  [CE]  modifier  static  not  allowed  here  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  map!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  map!=  null)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||    name!=    null)    {    	non-compiled	[CE]  modifier  static  not  allowed  here	99	None	replace
579	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.equals( "   "))  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  comment.equals( "   "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
580	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  comment.equals( "   "))  {  [CE]  ')'  expected  [FE]                      java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  comment.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)&&  comment.equals( "   "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
581	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "  <  unknown> "))  {  [CE]  ')'  expected  [FE]                        java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "  <  unknown> "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.equals( "  <  unknown> "))  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME)||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	60	None	replace
582	[BUG]  [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.equals( "record   "))  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.equals( "record   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  mapping.containsKey(name)&&  name.equals( "record   "))  {	  if(mapping    ==    null    ||    mapping.containsKey(name)||    name.equals(   "record   "))    {    	non-compiled	[CE]  ')'  expected	24	None	replace
583	[BUG]  [BUGGY]  if(mapping!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	94	None	replace
584	[BUG]  [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  name.length()  ==  0)  {	  if(mapping!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	94	None	replace
585	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name.length()!=  0)  {  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name.length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)||  name.length()!=  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
586	[BUG]  [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)&&  name.length()  >  0)  {  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)&&  name.length()  >  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT)&&  name.length()  >  0)  {	  if(mapping    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_FROM_OBJECT))    {    	non-compiled	[CE]  ')'  expected	67	None	replace
587	[BUG]  [BUGGY]  if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber!=  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
588	[BUG]  [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(recordNumber  ==  null  ||  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)||  name!=  null)  {	  if(recordNumber    ==    null    ||    isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))    {    	non-compiled	[CE]  ')'  expected	19	None	replace
589	[BUG]  [BUGGY]  if(mapping  ==  null  ||  comment.equals( "   "))  {  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  comment.equals( "   "))  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  comment.equals( "   "))  {	  if(mapping    ==    null    ||    name.equals(   "   "))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
590	[BUG]  [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name).length()!=  0)  {  [CE]  ')'  expected  [FE]                          java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(mapping  ==  null  ||  this.mapping.get(name).length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(mapping  ==  null  ||  this.mapping.get(name).length()!=  0)  {	  if(name    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
591	[BUG]  [BUGGY]  if(name!=  null  ||  mapping.get(name).length()!=  0)  {  [CE]  ')'  expected  [FE]                            java.lang.Exception:  Unexpected  exception      [CONTEXT]      public  String  get(final  String  name)  {      [BUGGY]  if(name!=  null  ||  mapping.get(name).length()!=  0)  {  [BUGGY]      throw  new  IllegalStateException(       "No  header  mapping  was  specified,  the  record  values  can't  be  accessed  by  name     ");  }  final  Integer  index  =  mapping.get(name);  return  index  !=  null  ?  values[index.intValue()]  :  null;  }  [CLASS]  CSVRecord  [METHOD]  get  [RETURN_TYPE]  String  String  name  [VARIABLES]  Integer  index  String[]  EMPTY_STRING_ARRAY  values  String  comment  name  boolean  Map  mapping  long  recordNumber  serialVersionUID  	projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java	0.5773502691896258	80	80	1	replace	if(name!=  null  ||  mapping.get(name).length()!=  0)  {	  if(name    ==    null    ||    mapping.get(name).length()!=    0)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
