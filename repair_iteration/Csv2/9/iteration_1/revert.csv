projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comment,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID();
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(values!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(values!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?values:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values==null?values:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap();
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(this.values,0,this.values,1,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,2,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,recordNumber,0);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(this.values,0,values,1,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,comment,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comment,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,3,values,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,values,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,0,recordNumber+1);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,0,recordNumber-1);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(this.values,0,values,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(this.values,0,this.values,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,0,recordNumber+1,values.length);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comment,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,values,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,3,values,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comments,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,comment,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comment,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,0,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,recordNumber,values,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comment,recordNumber);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,0,recordNumber);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(values!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54for(inti=0;i<values.length;i++){if(comment.equalsIgnoreCase(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(values!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY+recordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54for(inti=0;i<values.length;i++){if(!comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(values!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,recordNumber,mapping);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,EMPTY_STRING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,comment,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,comment,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,0);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,recordNumber,EMPTY_STRING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,EMPTY_STRING_ARRAY,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber+1;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber-1;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber>0?recordNumber:0;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber>0?recordNumber:1;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber<0?1:recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber+1L;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(mapping!=null){this.serialVersionUID=mapping.getSerialVersionUID();}else{this.serialVersionUID=mapping.getSerialVersionUID();}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(mapping!=null){this.serialVersionUID=mapping.getSerialVersionUID();}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID(),recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID(recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(mapping!=null){this.serialVersionUID=mapping.getSerialVersionUID();}else{this.serialVersionUID=map.getSerialVersionUID();}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID()+1;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comments,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values==null?EMPTY_STRING_ARRAY:values;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?EMPTY_STRING_ARRAY:values;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?EMPTY_STRING_ARRAY:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values==null?EMPTY_STRING_ARRAY:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?EMPTY_STRING_ARRAY:values[0];
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comments,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,3,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,4,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap(recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newLinkedHashMap();
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap(),recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap(mapping);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap(recordNumber,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap(0);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?keys:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(values!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnRecordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comment,0,recordNumber+1);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comment,0,recordNumber-1);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,0,values.length);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(this.comment,0,values,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(this.values,0,this.comment,0,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comment,1,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,recordNumber,EMPTY_STRING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(recordNumber!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(recordNumber==null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(recordNumber!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(recordNumber==null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=Maps.newHashMap(this.serialVersionUID);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?value:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?values:EMPTY_STRING_ARRAY+1;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber};
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comment,0,recordNumber+1,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID()+recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getImplicitSerialVersionUID();
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID(null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,EMPTY_STRING_ARRAY,values,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,2,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,8,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,comment,recordNumber,EMPTY_STRING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,recordNumber,0);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,recordNumber,MISSING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,recordNumber,EMPTY_STRING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,recordNumber,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,recordNumber+1);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,1,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(recordNumber!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(recordNumber!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])){returnrecordNumber;}}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,recordNumber,1,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,recordNumber,values,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,recordNumber,0,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,recordNumber,2,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,recordNumber,3,comment);recordNumber=recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,EMPTY_STRING_ARRAY,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,EMPTY_STRING_ARRAY);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,8,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber>0?recordNumber:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.recordNumber=recordNumber<0?EMPTY_STRING_ARRAY:recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.isSerialVersionUID()?null:mapping.getSerialVersionUID();
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping!=null?mapping.getSerialVersionUID():EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping!=null?mapping.getSerialVersionUID():recordNumber;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersionUID(comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=values!=null?values:EMPTY_STRING_ARRAY,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,comment,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.values=value!=null?values:EMPTY_STRING_ARRAY;
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,0,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,1,values,recordNumber,null);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.values,4,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<attributes.length;i++){if(comment.equals(values[i])){comment=EMPTY_STRING_ARRAY;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.comment,2,recordNumber);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54System.arraycopy(values,0,this.recordNumber,values,recordNumber,comment);
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54if(comment!=null){for(inti=0;i<values.length;i++){if(comment.equals(values[i])||comment.equals(values[i])){returnrecordNumber;}
projects/Csv2/src/main/java/org/apache/commons/csv/CSVRecord.java54this.serialVersionUID=mapping.getSerialVersion();
