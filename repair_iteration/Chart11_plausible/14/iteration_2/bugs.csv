bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  PathIterator  iterator1  =  getPathIterator(seg2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  PathIterator  iterator1  =  getPathIterator(seg2);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	PathIterator  iterator1  =  getPathIterator(seg2);	      PathIterator    iterator1    =    getPathIterator(seg1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  int  d2  =  iterator2.currentSegment(d2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  int  d2  =  iterator2.currentSegment(d2);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	int  d2  =  iterator2.currentSegment(d2);	      int    d2    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  int  d2  =  iterator2.currentSegment(d1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  int  d2  =  iterator2.currentSegment(d1);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	int  d2  =  iterator2.currentSegment(d1);	      int    d2    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  float  SQRT2  =  iterator1.currentSegment(d1,  seg2);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  float  SQRT2  =  iterator1.currentSegment(d1,  seg2);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	float  SQRT2  =  iterator1.currentSegment(d1,  seg2);	      float    SQRT2    =    iterator1.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
5	[BUG]  [BUGGY]  float  d1  =  iterator1.currentSegment(d1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  float  d1  =  iterator1.currentSegment(d1);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	float  d1  =  iterator1.currentSegment(d1);	      float    d1    =    iterator1.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  double  d1  =  iterator1.currentSegment(seg1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  double  d1  =  iterator1.currentSegment(seg1);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	double  d1  =  iterator1.currentSegment(seg1);	      float    d1    =    iterator1.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]  double  d1  =  iterator1.currentSegment(seg2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  double  d1  =  iterator1.currentSegment(seg2);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	double  d1  =  iterator1.currentSegment(seg2);	      float    d1    =    iterator1.currentSegment(seg2);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(!Arrays.equals(seg1,  d2)&&!seg1.equals(seg2))  {  [CE]  no  suitable  method  found  for  equals(int,double[])  [FE]        AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  if(!Arrays.equals(seg1,  d2)&&!seg1.equals(seg2))  {  [BUGGY]    return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	if(!Arrays.equals(seg1,  d2)&&!seg1.equals(seg2))  {	  if(!Arrays.equals(d1,    d2)&&!seg1.equals(seg2))    {    	non-compiled	[CE]  no  suitable  method  found  for  equals(int,double[])	10	None	replace
9	[BUG]  [BUGGY]  double  d2  =  iterator1.currentSegment(seg1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  double  d2  =  iterator1.currentSegment(seg1);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	double  d2  =  iterator1.currentSegment(seg1);	      float    d2    =    iterator1.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  float  d2  =  iterator1.currentSegment(d2);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  float  d2  =  iterator1.currentSegment(d2);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	float  d2  =  iterator1.currentSegment(d2);	      float    d2    =    iterator1.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  float  d2  =  iterator2.currentSegment(seg1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  float  d2  =  iterator2.currentSegment(seg1);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	float  d2  =  iterator2.currentSegment(seg1);	      float    d2    =    iterator1.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  if(!Arrays.equals(seg1,  d2)&&!seg2.equals(seg1))  {  [CE]  no  suitable  method  found  for  equals(int,double[])  [FE]        AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  if(!Arrays.equals(seg1,  d2)&&!seg2.equals(seg1))  {  [BUGGY]    return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	if(!Arrays.equals(seg1,  d2)&&!seg2.equals(seg1))  {	  if(!Arrays.equals(d1,    d2)&&!seg1.equals(seg2))    {    	non-compiled	[CE]  no  suitable  method  found  for  equals(int,double[])	10	None	replace
13	[BUG]  [BUGGY]  float  SQRT2  =  iterator1.currentSegment(d2,  seg2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  float  SQRT2  =  iterator1.currentSegment(d2,  seg2);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	float  SQRT2  =  iterator1.currentSegment(d2,  seg2);	      float    SQRT2    =    iterator1.currentSegment(seg2);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  int  d1  =  iterator2.currentSegment(d1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  int  d1  =  iterator2.currentSegment(d1);  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	int  d1  =  iterator2.currentSegment(d1);	      int    d2    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  if(!Arrays.equals(seg1,  seg2)&&!seg1.equals(seg2))  {  [CE]  no  suitable  method  found  for  equals(int,int)  [FE]        AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  if(!Arrays.equals(seg1,  seg2)&&!seg1.equals(seg2))  {  [BUGGY]    return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	if(!Arrays.equals(seg1,  seg2)&&!seg1.equals(seg2))  {	  if(!Arrays.equals(d1,    d2)&&!seg1.equals(seg2))    {    	non-compiled	[CE]  no  suitable  method  found  for  equals(int,int)	10	None	replace
16	[BUG]  [BUGGY]  PathIterator  iterator1  =  p1.iterator();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }    [BUGGY]  PathIterator  iterator1  =  p1.iterator();  [BUGGY]    if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	288	288	1	replace	PathIterator  iterator1  =  p1.iterator();	      PathIterator    iterator1    =    p1.getPathIterator();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
