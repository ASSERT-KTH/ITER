bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  insigma.add(sigmaArray[i]);  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma.add(sigmaArray[i]);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma.add(sigmaArray[i]);	      insigma.add(inputSigma);    	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  insigma.add(sigmaArray);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma.add(sigmaArray);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma.add(sigmaArray);	      insigma.add(inputSigma);    	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  sigmaArray[i][0]  =  Math.log(inputSigma[i])/  2.0;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigmaArray[i][0]  =  Math.log(inputSigma[i])/  2.0;  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigmaArray[i][0]  =  Math.log(inputSigma[i])/  2.0;	      sigmaArray[i][0]    =    Math.log(inputSigma[i])/    2;    	non-compiled	[CE]  	1	None	replace
4	[BUG]  [BUGGY]  sigma  =  insigmaArray[0];  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  insigmaArray[0];  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  insigmaArray[0];	  sigma    =    insigmaArray[insigma];    	non-compiled	[CE]  	5	None	replace
5	[BUG]  [BUGGY]  sigma  =  insigmaArray[i];  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  insigmaArray[i];  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  insigmaArray[i];	  sigma    =    insigmaArray[insigma];    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  insigmaArray[i]  =  Math.max(inputSigma[i],  1);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i]  =  Math.max(inputSigma[i],  1);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i]  =  Math.max(inputSigma[i],  1);	      insigmaArray[i]    =    Math.max(inputSigma[i],    0);    	non-compiled	[CE]  	7	None	replace
7	[BUG]  [BUGGY]  insigma  =  insigmaArray.initialize(lambda);  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  insigmaArray.initialize(lambda);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  insigmaArray.initialize(lambda);	      insigma    =    insigma.initialize(lambda);    	non-compiled	[CE]  	10	None	replace
8	[BUG]  [BUGGY]  insigma  =  guess.initialize(lambda);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  guess.initialize(lambda);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  guess.initialize(lambda);	      insigma    =    insigma.initialize(lambda);    	non-compiled	[CE]  	10	None	replace
9	[BUG]  [BUGGY]  sigma  =  insigmaArray[i].length;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  insigmaArray[i].length;  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  insigmaArray[i].length;	  sigma    =    insigmaArray[insigma].length;    	non-compiled	[CE]  	4	None	replace
10	[BUG]  [BUGGY]  sigma  =  insigmaArray[0].length;  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  insigmaArray[0].length;  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  insigmaArray[0].length;	  sigma    =    insigmaArray[insigma].length;    	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  insigma  =  guess.initialize();  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  guess.initialize();  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  guess.initialize();	      insigma    =    insigma.initialize();    	non-compiled	[CE]  	11	None	replace
12	[BUG]  [BUGGY]  insigma  =  insigmaArray.initialize();  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  insigmaArray.initialize();  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  insigmaArray.initialize();	      insigma    =    insigma.initialize();    	non-compiled	[CE]  	11	None	replace
13	[BUG]  [BUGGY]  sigma  =  insigmaArray;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  insigmaArray;  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  insigmaArray;	  sigma    =    insigma;    	non-compiled	[CE]  	9	None	replace
14	[BUG]  [BUGGY]  sigma  =  new  RealMatrix(sigmaArray,  false);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  new  RealMatrix(sigmaArray,  false);  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  new  RealMatrix(sigmaArray,  false);	  sigma    =    insigma;    	non-compiled	[CE]  	9	None	replace
15	[BUG]  [BUGGY]  insigmaArray[i]  =  Math.max(inputSigma[i],  range);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i]  =  Math.max(inputSigma[i],  range);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i]  =  Math.max(inputSigma[i],  range);	      insigmaArray[i]    =    Math.max(inputSigma[i],    max);    	non-compiled	[CE]  	8	None	replace
16	[BUG]  [BUGGY]  insigmaArray[i]  =  Math.max(inputSigma[i],  sigmaArray[i]);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i]  =  Math.max(inputSigma[i],  sigmaArray[i]);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i]  =  Math.max(inputSigma[i],  sigmaArray[i]);	      insigmaArray[i]    =    Math.max(inputSigma[i],    max);    	non-compiled	[CE]  	8	None	replace
17	[BUG]  [BUGGY]  insigmaArray[i][0]  =  Math.max(inputSigma[i],  range);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i][0]  =  Math.max(inputSigma[i],  range);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i][0]  =  Math.max(inputSigma[i],  range);	      insigmaArray[i][0]    =    Math.max(inputSigma[i],    max);    	non-compiled	[CE]  	2	None	replace
18	[BUG]  [BUGGY]  insigmaArray[i][0]  =  Math.max(inputSigma[i],  sigmaArray[i]);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i][0]  =  Math.max(inputSigma[i],  sigmaArray[i]);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i][0]  =  Math.max(inputSigma[i],  sigmaArray[i]);	      insigmaArray[i][0]    =    Math.max(inputSigma[i],    max);    	non-compiled	[CE]  	2	None	replace
19	[BUG]  [BUGGY]  insigma  =  guess.initialize(lambda,  lambda);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  guess.initialize(lambda,  lambda);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  guess.initialize(lambda,  lambda);	      insigma    =    insigma.initialize(lambda,    guess);    	non-compiled	[CE]  	12	None	replace
20	[BUG]  [BUGGY]  insigma  =  guess.initialize(lambda,  insigma);  [CE]  [FE]              java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  guess.initialize(lambda,  insigma);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  guess.initialize(lambda,  insigma);	      insigma    =    insigma.initialize(lambda,    guess);    	non-compiled	[CE]  	12	None	replace
21	[BUG]  [BUGGY]  sigmaArray[i][0]  =  Math.log(inputSigma[i])/  1;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigmaArray[i][0]  =  Math.log(inputSigma[i])/  1;  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigmaArray[i][0]  =  Math.log(inputSigma[i])/  1;	      sigmaArray[i][0]    =    Math.log(inputSigma[i])/    2;    	non-compiled	[CE]  	1	None	replace
22	[BUG]  [BUGGY]  insigma.add(inputSigmaArray);  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma.add(inputSigmaArray);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma.add(inputSigmaArray);	      insigma.add(inputSigma);    	non-compiled	[CE]  	6	None	replace
23	[BUG]  [BUGGY]  insigma  =  sigmaArray.initialize();  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  sigmaArray.initialize();  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  sigmaArray.initialize();	      insigma    =    insigma.initialize();    	non-compiled	[CE]  	11	None	replace
24	[BUG]  [BUGGY]  insigmaArray[i]  =  Math.min(inputSigma[i],  sigmaArray[i]);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i]  =  Math.min(inputSigma[i],  sigmaArray[i]);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i]  =  Math.min(inputSigma[i],  sigmaArray[i]);	      insigmaArray[i]    =    Math.max(inputSigma[i],    max);    	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  sigma  =  sigmaArray[insigma];  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  sigmaArray[insigma];  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  sigmaArray[insigma];	  sigma    =    insigmaArray[insigma];    	non-compiled	[CE]  	5	None	replace
26	[BUG]  [BUGGY]  sigma  =  sigmaArray[insigma].length;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigma  =  sigmaArray[insigma].length;  [BUGGY]      stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigma  =  sigmaArray[insigma].length;	  sigma    =    insigmaArray[insigma].length;    	non-compiled	[CE]  	4	None	replace
27	[BUG]  [BUGGY]  insigmaArray[i]  =  Math.max(sigmaArray[i],  max);  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigmaArray[i]  =  Math.max(sigmaArray[i],  max);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigmaArray[i]  =  Math.max(sigmaArray[i],  max);	      insigmaArray[i]    =    Math.max(inputSigma[i],    max);    	non-compiled	[CE]  	8	None	replace
28	[BUG]  [BUGGY]  sigmaArray[i][0]  =  Math.floor(inputSigma[i])/  2;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  sigmaArray[i][0]  =  Math.floor(inputSigma[i])/  2;  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	sigmaArray[i][0]  =  Math.floor(inputSigma[i])/  2;	      sigmaArray[i][0]    =    Math.log(inputSigma[i])/    2;    	non-compiled	[CE]  	1	None	replace
29	[BUG]  [BUGGY]  insigma  =  lambda.initialize(insigma);  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  lambda.initialize(insigma);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  lambda.initialize(insigma);	      insigma    =    insigma.initialize(lambda);    	non-compiled	[CE]  	10	None	replace
30	[BUG]  [BUGGY]  insigma  =  insigma.initialize(lambda,  lambda);  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);    [BUGGY]  insigma  =  insigma.initialize(lambda,  lambda);  [BUGGY]    sigma  =  max(insigma);  //  overall  standard  deviation    //  initialize  termination  criteria  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  mu  =  lambda  /  2;  //  number  of  parents/points  for  recombination  logMu2  =  Math.log(mu  +  0.5);  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	579	581	1	replace	insigma  =  insigma.initialize(lambda,  lambda);	      insigma    =    insigma.initialize(lambda);    	non-compiled	[CE]  	10	None	replace
