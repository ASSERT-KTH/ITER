projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364if(dimension==1){thrownewIllegalArgumentException("");}
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364if(dimension==1){thrownewIllegalArgumentException("");}else{checkParameters();}
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364iterations=0;
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364iterations=1;
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.min(maxIterations,dimension);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension*Math.max(dimension));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=fitfun.value(dimension);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=getMaximumFitness();
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364validate(guess,dimension);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364validate(guess);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,guess);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=getMinimumFitness();
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension-1);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension*2);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,dimension*Math.max(maxIterations));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.min(maxIterations,dimension*Math.max(dimension));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=fitfun.value(dimension-1);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364luate();
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364luate(dimension);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,maxIterations);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,maxIterations*Math.max(dimension));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=getMaximumFitness()+dimension;
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364if(dimension!=1){thrownewIllegalArgumentException("");}
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension*Math.max(maxIterations));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.min(maxIterations,dimension*Math.max(maxIterations));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.min(dimension,dimension*Math.max(maxIterations));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364validate(guess,guess);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364checkParameters();
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=getMaximumFitness()/dimension;
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=getMaximumFitness()*dimension;
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=fitfun.value(dimension*1);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension*1);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364validate(dimension);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(maxIterations,dimension/2);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364luate(guess);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,maxIterations*2);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,guess);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364bestValue=fitfun.value(dimension-2);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364luate(dimension,maxIterations);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.min(dimension,maxIterations*Math.max(dimension));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,maxIterations-1);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364maxIterations=Math.max(dimension,maxIterations*Math.max(maxIterations));
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364validate(guess,dimension-1);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364validate(dimension,guess);
projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java364if(dimension!=1){validate(guess);}else{checkParameters();}
