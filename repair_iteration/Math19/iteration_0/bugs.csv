bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] this(0); [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] public CMAESOptimizer() { [BUGGY] this(0); [BUGGY] } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] <init> [RETURN_TYPE] CMAESOptimizer()  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics isActiveCMA isMinimize isRepairMode double[] fitnessHistory inputSigma RealMatrix B BD C D diagC diagD pc ps weights xmean double DEFAULT_STOPFITNESS cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize index iterations lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	
2	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] public CMAESOptimizer() { [BUGGY] [BUGGY] this(0); } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] <init> [RETURN_TYPE] CMAESOptimizer()  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics isActiveCMA isMinimize isRepairMode double[] fitnessHistory inputSigma RealMatrix B BD C D diagC diagD pc ps weights xmean double DEFAULT_STOPFITNESS cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize index iterations lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	add	
3	[BUG] [BUGGY] } [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] public CMAESOptimizer() { this(0); [BUGGY] } [BUGGY]  [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] <init> [RETURN_TYPE] CMAESOptimizer()  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics isActiveCMA isMinimize isRepairMode double[] fitnessHistory inputSigma RealMatrix B BD C D diagC diagD pc ps weights xmean double DEFAULT_STOPFITNESS cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize index iterations lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	
4	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] public CMAESOptimizer() { this(0); [BUGGY] [BUGGY] } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] <init> [RETURN_TYPE] CMAESOptimizer()  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics isActiveCMA isMinimize isRepairMode double[] fitnessHistory inputSigma RealMatrix B BD C D diagC diagD pc ps weights xmean double DEFAULT_STOPFITNESS cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize index iterations lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	add	
5	[BUG] [BUGGY] this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS, DEFAULT_ISACTIVECMA, DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT, DEFAULT_RANDOMGENERATOR, false); [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] public CMAESOptimizer(int lambda) { [BUGGY] this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA, DEFAULT_DIAGONALONLY,       DEFAULT_CHECKFEASABLECOUNT, DEFAULT_RANDOMGENERATOR, false); [BUGGY] DEFAULT_ISACTIVECMA, DEFAULT_DIAGONALONLY, DEFAULT_CHECKFEASABLECOUNT, DEFAULT_RANDOMGENERATOR, false); } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] <init> [RETURN_TYPE] CMAESOptimizer(int)  int lambda [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics isActiveCMA isMinimize isRepairMode double[] fitnessHistory inputSigma RealMatrix B BD C D diagC diagD pc ps weights xmean double DEFAULT_STOPFITNESS cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize index iterations lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	
6	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] public CMAESOptimizer(int lambda) { [BUGGY] [BUGGY] this(lambda, null, DEFAULT_MAXITERATIONS, DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA, DEFAULT_DIAGONALONLY,       DEFAULT_CHECKFEASABLECOUNT, DEFAULT_RANDOMGENERATOR, false); DEFAULT_ISACTIVECMA, DEFAULT_DIAGONALONLY, DEFAULT_CHECKFEASABLECOUNT, DEFAULT_RANDOMGENERATOR, false); } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] <init> [RETURN_TYPE] CMAESOptimizer(int)  int lambda [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics isActiveCMA isMinimize isRepairMode double[] fitnessHistory inputSigma RealMatrix B BD C D diagC diagD pc ps weights xmean double DEFAULT_STOPFITNESS cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize index iterations lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	add	
8	[BUG] [BUGGY] lambda = 4 + (int) (3. * Math.log(dimension)); [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] private void initializeCMA(double[] guess) { if (lambda <= 0) { [BUGGY] lambda = 4 + (int) (3. * Math.log(dimension)); [BUGGY] }  double[][] sigmaArray = new double[guess.length][1]; for (int i = 0; i < guess.length; i++) { final double range =(boundaries == null) ? 1.0 : boundaries[1][i] - boundaries[0][i]; sigmaArray[i][0] = ((inputSigma == null) ? 0.3 : inputSigma[i]) / range; } RealMatrix insigma = new Array2DRowRealMatrix(sigmaArray, false); sigma = max(insigma); // overall standard deviation  [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] initializeCMA [RETURN_TYPE] void  double[] guess [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD insigma pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps range sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sumw sumwq value valueRange w worstFitness double[][] boundaries sigmaArray List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	
9	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] private void initializeCMA(double[] guess) { if (lambda <= 0) { [BUGGY] [BUGGY] lambda = 4 + (int) (3. * Math.log(dimension)); }  double[][] sigmaArray = new double[guess.length][1]; for (int i = 0; i < guess.length; i++) { final double range =(boundaries == null) ? 1.0 : boundaries[1][i] - boundaries[0][i]; sigmaArray[i][0] = ((inputSigma == null) ? 0.3 : inputSigma[i]) / range; } RealMatrix insigma = new Array2DRowRealMatrix(sigmaArray, false); sigma = max(insigma); // overall standard deviation  [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] initializeCMA [RETURN_TYPE] void  double[] guess [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD insigma pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps range sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sumw sumwq value valueRange w worstFitness double[][] boundaries sigmaArray List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	add	
10	[BUG] [BUGGY] boundaries = new double[2][]; [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (hasInfiniteBounds) {   throw new MathUnsupportedOperationException(); } else {  [BUGGY] boundaries = new double[2][]; [BUGGY] boundaries[0] = lB; boundaries[1] = uB;  } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	
11	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (hasInfiniteBounds) {   throw new MathUnsupportedOperationException(); } else {  [BUGGY] [BUGGY] boundaries = new double[2][]; boundaries[0] = lB; boundaries[1] = uB;  } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	add	
12	[BUG] [BUGGY] boundaries[0] = lB; [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (hasInfiniteBounds) {   throw new MathUnsupportedOperationException(); } else {  boundaries = new double[2][]; [BUGGY] boundaries[0] = lB; [BUGGY] boundaries[1] = uB;  } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	
13	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (hasInfiniteBounds) {   throw new MathUnsupportedOperationException(); } else {  boundaries = new double[2][]; [BUGGY] [BUGGY] boundaries[0] = lB; boundaries[1] = uB;  } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	add	
14	[BUG] [BUGGY] boundaries[1] = uB; [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (hasInfiniteBounds) {   throw new MathUnsupportedOperationException(); } else {  boundaries = new double[2][]; boundaries[0] = lB; [BUGGY] boundaries[1] = uB; [BUGGY]   } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	
15	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (hasInfiniteBounds) {   throw new MathUnsupportedOperationException(); } else {  boundaries = new double[2][]; boundaries[0] = lB; [BUGGY] [BUGGY] boundaries[1] = uB;  } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	add	
16	[BUG] [BUGGY] hasFiniteBounds = true; [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] private void checkParameters() { final double[] init = getStartPoint(); final double[] lB = getLowerBound(); final double[] uB = getUpperBound();  boolean hasFiniteBounds = false; for (int i = 0; i < lB.length; i++) { if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { [BUGGY] hasFiniteBounds = true; [BUGGY] break; } }  boolean hasInfiniteBounds = false; if (hasFiniteBounds) { for (int i = 0; i < lB.length; i++) { if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) { hasInfiniteBounds = true; [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	
17	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] private void checkParameters() { final double[] init = getStartPoint(); final double[] lB = getLowerBound(); final double[] uB = getUpperBound();  boolean hasFiniteBounds = false; for (int i = 0; i < lB.length; i++) { if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { [BUGGY] [BUGGY] hasFiniteBounds = true; break; } }  boolean hasInfiniteBounds = false; if (hasFiniteBounds) { for (int i = 0; i < lB.length; i++) { if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) { hasInfiniteBounds = true; [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	add	
18	[BUG] [BUGGY] break; [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { hasFiniteBounds = true; [BUGGY] break; [BUGGY] } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	
19	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { hasFiniteBounds = true; [BUGGY] [BUGGY] break; } [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	
20	[BUG] [BUGGY] for (int i = 0; i < lB.length; i++) { [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] for (int i = 0; i < lB.length; i++) { if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { hasFiniteBounds = true; break; } }  boolean hasInfiniteBounds = false; if (hasFiniteBounds) { [BUGGY] for (int i = 0; i < lB.length; i++) { [BUGGY] if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) { hasInfiniteBounds = true; break; } } if (hasInfiniteBounds) {   [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	
21	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception testBoundaryRangeTooLarge [CONTEXT] for (int i = 0; i < lB.length; i++) { if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { hasFiniteBounds = true; break; } }  boolean hasInfiniteBounds = false; if (hasFiniteBounds) { [BUGGY] [BUGGY] for (int i = 0; i < lB.length; i++) { if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) { hasInfiniteBounds = true; break; } } if (hasInfiniteBounds) {   [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	add	
