bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    sigmaArray[i][0]  =  Math.max(sigma[i],  guess[i]);  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =  Math.max(sigma[i],  guess[i]);  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =  Math.max(sigma[i],  guess[i]);		non-compiled	[CE]  	48	None	add
2	[BUG]  [BUGGY]    sigmaArray[i][0]  =  Math.log(dimension,  guess[i]);  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =  Math.log(dimension,  guess[i]);  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =  Math.log(dimension,  guess[i]);		non-compiled	[CE]  	48	None	add
3	[BUG]  [BUGGY]    sigmaArray[i][0]  =  Math.log(dimension,  guess[i])/  2;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =  Math.log(dimension,  guess[i])/  2;  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =  Math.log(dimension,  guess[i])/  2;		non-compiled	[CE]  	48	None	add
4	[BUG]  [BUGGY]  final  double  range  =(limitaries  ==  null)?  1.0  :  boundaries[1][i]  -  guess[0][i];  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]  final  double  range  =(limitaries  ==  null)?  1.0  :  boundaries[1][i]  -  guess[0][i];  [BUGGY]  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	final  double  range  =(limitaries  ==  null)?  1.0  :  boundaries[1][i]  -  guess[0][i];	final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  	non-compiled	[CE]  	47	None	replace
5	[BUG]  [BUGGY]  final  double  range  =(limiters  ==  null)?  1.0  :  boundaries[1][i]  -  guess[0][i];  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]  final  double  range  =(limiters  ==  null)?  1.0  :  boundaries[1][i]  -  guess[0][i];  [BUGGY]  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	final  double  range  =(limiters  ==  null)?  1.0  :  boundaries[1][i]  -  guess[0][i];	final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  	non-compiled	[CE]  	47	None	replace
6	[BUG]  [BUGGY]  final  double  range  =(limitaries  ==  null)?  1.0  :  boundaries[0][i]  -  guess[0][i];  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]  final  double  range  =(limitaries  ==  null)?  1.0  :  boundaries[0][i]  -  guess[0][i];  [BUGGY]  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	final  double  range  =(limitaries  ==  null)?  1.0  :  boundaries[0][i]  -  guess[0][i];	final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  	non-compiled	[CE]  	47	None	replace
7	[BUG]  [BUGGY]    sigmaArray[i][0]  =((  inputSigma  ==  null)?  1.0  :  inputSigma[i])/  guess;  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =((  inputSigma  ==  null)?  1.0  :  inputSigma[i])/  guess;  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =((  inputSigma  ==  null)?  1.0  :  inputSigma[i])/  guess;		non-compiled	[CE]  	48	None	add
8	[BUG]  [BUGGY]    sigmaArray[i][0]  =((  inputSigma  ==  null)?  0.3  :  inputSigma[i])/  guess;  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =((  inputSigma  ==  null)?  0.3  :  inputSigma[i])/  guess;  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =((  inputSigma  ==  null)?  0.3  :  inputSigma[i])/  guess;		non-compiled	[CE]  	48	None	add
9	[BUG]  [BUGGY]    sigmaArray[i][0]  =((  inputSigma  ==  null)?  0.0  :  inputSigma[i])/  guess;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =((  inputSigma  ==  null)?  0.0  :  inputSigma[i])/  guess;  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =((  inputSigma  ==  null)?  0.0  :  inputSigma[i])/  guess;		non-compiled	[CE]  	48	None	add
10	[BUG]  [BUGGY]    sigmaArray[i][0]  =  ((  inputSigma  ==  null)?  1.0  :  inputSigma[i]);  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  [BUGGY]    sigmaArray[i][0]  =  ((  inputSigma  ==  null)?  1.0  :  inputSigma[i]);  [BUGGY]  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  stopTolUpX  =  1e3  *  max(insigma);  stopTolX  =  1e-11  *  max(insigma);  stopTolFun  =  1e-12;  stopTolHistFun  =  1e-13;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	575	575	1	replace	    sigmaArray[i][0]  =  ((  inputSigma  ==  null)?  1.0  :  inputSigma[i]);		non-compiled	[CE]  	48	None	add
