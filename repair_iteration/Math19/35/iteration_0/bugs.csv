bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
71	[BUG] [BUGGY] double sumwq = 0; [FE] java.lang.Exception: Unexpected exception [CONTEXT] stopTolUpX = 1e3 * max(insigma); stopTolX = 1e-11 * max(insigma); stopTolFun = 1e-12; stopTolHistFun = 1e-13;  mu = lambda / 2; // number of parents/points for recombination logMu2 = Math.log(mu + 0.5); weights = log(sequence(1, mu, 1)).scalarMultiply(-1.).scalarAdd(logMu2); double sumw = 0; [BUGGY] double sumwq = 0; [BUGGY] for (int i = 0; i < mu; i++) { double w = weights.getEntry(i, 0); sumw += w; sumwq += w * w; } weights = weights.scalarMultiply(1. / sumw); mueff = sumw * sumw / sumwq; // variance-effectiveness of sum w_i x_i  cc = (4. + mueff / dimension) / [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] initializeCMA [RETURN_TYPE] void  double[] guess [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD insigma pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps range sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sumw sumwq value valueRange w worstFitness double[][] boundaries sigmaArray List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	592	592	1	replace	
72	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception [CONTEXT] stopTolUpX = 1e3 * max(insigma); stopTolX = 1e-11 * max(insigma); stopTolFun = 1e-12; stopTolHistFun = 1e-13;  mu = lambda / 2; // number of parents/points for recombination logMu2 = Math.log(mu + 0.5); weights = log(sequence(1, mu, 1)).scalarMultiply(-1.).scalarAdd(logMu2); double sumw = 0; [BUGGY] [BUGGY] double sumwq = 0; for (int i = 0; i < mu; i++) { double w = weights.getEntry(i, 0); sumw += w; sumwq += w * w; } weights = weights.scalarMultiply(1. / sumw); mueff = sumw * sumw / sumwq; // variance-effectiveness of sum w_i x_i  cc = (4. + mueff / dimension) / [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] initializeCMA [RETURN_TYPE] void  double[] guess [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD insigma pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps range sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX sumw sumwq value valueRange w worstFitness double[][] boundaries sigmaArray List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.2672612419124244	592	592	1	add	
