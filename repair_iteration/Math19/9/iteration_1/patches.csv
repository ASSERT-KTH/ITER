bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  hasFiniteBounds  =  null;  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  hasFiniteBounds  =  null;  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	hasFiniteBounds  =  null;	  hasFiniteBounds    =    true;    	non-compiled	[CE]  	5	None	replace
2	[BUG]  [BUGGY]  if(hasFiniteBounds  ==  true)  {  break;  }  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  if(hasFiniteBounds  ==  true)  {  break;  }  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(hasFiniteBounds  ==  true)  {  break;  }	  if(hasFiniteBounds    ==    false)    {    break;    }    	non-compiled	[CE]  	7	None	replace
3	[BUG]  [BUGGY]  hasFiniteBounds  =!Double.isNaN(lB[i])||!Double.isInfinite(uB[i]));  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  hasFiniteBounds  =!Double.isNaN(lB[i])||!Double.isInfinite(uB[i]));  [BUGGY]    break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	hasFiniteBounds  =!Double.isNaN(lB[i])||!Double.isInfinite(uB[i]));	      hasFiniteBounds    =!Double.isInfinite(lB[i])||!Double.isInfinite(uB[i]));    	non-compiled	[CE]  	10	None	replace
4	[BUG]  [BUGGY]  if(hasFiniteBounds)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  if(hasFiniteBounds)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(hasFiniteBounds)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  haveFiniteBounds  =  false;  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  haveFiniteBounds  =  false;  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	haveFiniteBounds  =  false;	  hasFiniteBounds    =    true;    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  if(!hasFiniteBounds)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  if(!hasFiniteBounds)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!hasFiniteBounds)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;	      hasFiniteBounds    =!Double.isInfinite(lB[i])||!Double.isInfinite(uB[i]))    {    hasFiniteBounds    =    true;    	non-compiled	[CE]  	8	None	replace
8	[BUG]  [BUGGY]  hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  [CE]  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  [BUGGY]    break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;	      hasFiniteBounds    =!Double.isInfinite(lB[i])||!Double.isInfinite(uB[i]))    {    hasFiniteBounds    =    false;    	non-compiled	[CE]  	9	None	replace
9	[BUG]  [BUGGY]  if(hasFiniteBounds  ||  hasInfiniteBounds)  {  break;  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  if(hasFiniteBounds  ||  hasInfiniteBounds)  {  break;  }  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(hasFiniteBounds  ||  hasInfiniteBounds)  {  break;  }	  if(hasFiniteBounds)    {    break;    }    	non-compiled	[CE]  	11	None	replace
10	[BUG]  [BUGGY]  hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]));  [CE]  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]));  [BUGGY]    break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	hasFiniteBounds  =!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]));	      hasFiniteBounds    =!Double.isInfinite(lB[i])||!Double.isInfinite(uB[i]));    	non-compiled	[CE]  	10	None	replace
11	[BUG]  [BUGGY]  if(hasInfiniteBounds)  {  break;  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;    [BUGGY]  if(hasInfiniteBounds)  {  break;  }  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(hasInfiniteBounds)  {  break;  }	  if(hasFiniteBounds)    {    break;    }    	non-compiled	[CE]  	11	None	replace
