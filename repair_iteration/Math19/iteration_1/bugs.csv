bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  }  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  }		non-compiled	[CE]  illegal  start  of  expression	19	None	add
2	[BUG]  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  }  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	19	None	add
3	[BUG]  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  haveFiniteBounds  =  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  haveFiniteBounds  =  false;  }  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  haveFiniteBounds  =  false;  }		non-compiled	[CE]  illegal  start  of  expression	19	None	add
4	[BUG]  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  haveFiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  haveFiniteBounds  =  true;  }  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    if(hasFiniteBounds)  {  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  haveFiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	19	None	add
5	[BUG]  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    if(hasFiniteBounds)  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  }  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    if(hasFiniteBounds)  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  false;  }		non-compiled	[CE]  illegal  start  of  expression	19	None	add
11	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.max(lambda,  guess);  [CE]  no  suitable  method  found  for  max(int,double[])  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.max(lambda,  guess);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.max(lambda,  guess);		non-compiled	[CE]  no  suitable  method  found  for  max(int,double[])	9	None	add
12	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.max(lambda,  false);  [CE]  no  suitable  method  found  for  max(int,boolean)  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.max(lambda,  false);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.max(lambda,  false);		non-compiled	[CE]  no  suitable  method  found  for  max(int,boolean)	9	None	add
13	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.max(guess.length,  lambda);  [CE]  incompatible  types  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.max(guess.length,  lambda);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.max(guess.length,  lambda);		non-compiled	[CE]  incompatible  types	9	None	add
14	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.max(lambda);  [CE]  no  suitable  method  found  for  max(int)  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.max(lambda);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.max(lambda);		non-compiled	[CE]  no  suitable  method  found  for  max(int)	9	None	add
15	[BUG]  [BUGGY]    double[][]  bounds  =  Math.max(lambda,  false);  [CE]  no  suitable  method  found  for  max(int,boolean)  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  bounds  =  Math.max(lambda,  false);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  bounds  =  Math.max(lambda,  false);		non-compiled	[CE]  no  suitable  method  found  for  max(int,boolean)	9	None	add
22	[BUG]  [BUGGY]  borders[0]  =  lB;  [CE]  cannot  find  symbol  borders  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]  borders[0]  =  lB;  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	borders[0]  =  lB;	boundaries[0]  =  lB;  	non-compiled	[CE]  cannot  find  symbol  borders	12	None	replace
23	[BUG]  [BUGGY]  boundaries[0]  =  pcCol;  [CE]  cannot  find  symbol  pcCol  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]  boundaries[0]  =  pcCol;  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	boundaries[0]  =  pcCol;	boundaries[0]  =  lB;  	non-compiled	[CE]  cannot  find  symbol  pcCol	12	None	replace
31	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(hasFiniteBounds)  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(hasFiniteBounds)  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
32	[BUG]  [BUGGY]  if(hasFiniteBounds)  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(hasFiniteBounds)  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(hasFiniteBounds)  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
32	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!hasFiniteBounds)  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!hasFiniteBounds)  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
33	[BUG]  [BUGGY]  if(!hasFiniteBounds)  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!hasFiniteBounds)  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!hasFiniteBounds)  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
33	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
34	[BUG]  [BUGGY]  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(uB[i])||  Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
34	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
35	[BUG]  [BUGGY]  if(!Double.isInfinite(uB[i]))  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
41	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(hasInfiniteBounds)  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(hasInfiniteBounds)  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
42	[BUG]  [BUGGY]    if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [CE]  cannot  find  symbol  hasInfiniteBounds  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }		non-compiled	[CE]  cannot  find  symbol  hasInfiniteBounds	17	None	add
43	[BUG]  [BUGGY]    if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  [CE]  cannot  find  symbol  hasInfiniteBounds  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }		non-compiled	[CE]  cannot  find  symbol  hasInfiniteBounds	17	None	add
44	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(hasInfiniteBounds)  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(hasInfiniteBounds)  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
45	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(hasInfiniteBounds)  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(hasInfiniteBounds)  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
51	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		non-compiled	[CE]  'else'  without  'if'	13	None	add
52	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		non-compiled	[CE]  'else'  without  'if'	13	None	add
53	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  'else'  without  'if'	13	None	add
54	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  'else'  without  'if'	13	None	add
55	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  boundaries[2][]  =  lB;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  boundaries[2][]  =  lB;  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  boundaries[2][]  =  lB;  }		non-compiled	[CE]  illegal  start  of  expression	13	None	add
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  >>  lB.length;  i++)  {  [CE]  incompatible  types  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]  for(int  i  =  0;  i  >>  lB.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	for(int  i  =  0;  i  >>  lB.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  incompatible  types	20	None	replace
65	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    [BUGGY]  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	  	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  illegal  start  of  type	20	None	replace
71	[BUG]  [BUGGY]  this.isRepairMode();  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  this.isRepairMode();  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	this.isRepairMode();	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  this.statisticsSigmaHistory.size();  i++)  {  setImpl(i,  null);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  this.statisticsSigmaHistory.size();  i++)  {  setImpl(i,  null);  }  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  this.statisticsSigmaHistory.size();  i++)  {  setImpl(i,  null);  }	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  this.datasets.size();  i++)  {  setImpl(i,  null);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  if(isRepairMode)  {  for(int  i  =  0;  i  <  this.datasets.size();  i++)  {  setImpl(i,  null);  }  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	if(isRepairMode)  {  for(int  i  =  0;  i  <  this.datasets.size();  i++)  {  setImpl(i,  null);  }	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  this.statisticsMeanHistory  =  getStatisticsMean();  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  this.statisticsMeanHistory  =  getStatisticsMean();  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	this.statisticsMeanHistory  =  getStatisticsMean();	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
75	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
81	[BUG]  [BUGGY]  lambda  =  4  +(int)(3.  *  Math.log(guess));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  4  +(int)(3.  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  4  +(int)(3.  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	8	None	replace
82	[BUG]  [BUGGY]  lambda  =  4  *(2.5  *  Math.log(dimension));  [CE]  possible  loss  of  precision  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  4  *(2.5  *  Math.log(dimension));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  4  *(2.5  *  Math.log(dimension));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
83	[BUG]  [BUGGY]  lambda  =  1  +(int)3.  *  Math.log(dimension));  [CE]  ';'  expected  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  1  +(int)3.  *  Math.log(dimension));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  1  +(int)3.  *  Math.log(dimension));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  ';'  expected	8	None	replace
84	[BUG]  [BUGGY]  lambda  =  4  +(int)(3).  *  Math.log(guess));  [CE]  <identifier>  expected  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  4  +(int)(3).  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  4  +(int)(3).  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  <identifier>  expected	8	None	replace
92	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]  this(4);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	add	this(4);	this(0);  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	1	1
93	[BUG]  [BUGGY]  this(4);  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]  this(4);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	this(4);	this(0);  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	1	1	replace
94	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]  this(5);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	add	this(5);	this(0);  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	1	1
95	[BUG]  [BUGGY]  this(5);  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]  this(5);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	this(5);	this(0);  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	1	1	replace
95	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	add	  	this(0);  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	1	1
96	[BUG]  [BUGGY]    [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	  	this(0);  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	1	1	replace
103	[BUG]  [BUGGY]  hasFiniteBounds  =  false;  lB[i]  =  uB[i].infinite();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  hasFiniteBounds  =  false;  lB[i]  =  uB[i].infinite();  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	hasFiniteBounds  =  false;  lB[i]  =  uB[i].infinite();	hasFiniteBounds  =  true;  	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
104	[BUG]  [BUGGY]  hasFiniteBounds  =  false;  lB[i]  =  getLowerBound();  [CE]  incompatible  types  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  hasFiniteBounds  =  false;  lB[i]  =  getLowerBound();  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	hasFiniteBounds  =  false;  lB[i]  =  getLowerBound();	hasFiniteBounds  =  true;  	non-compiled	[CE]  incompatible  types	16	None	replace
111	[BUG]  [BUGGY]    lB.length  =  lB.length;  hasFiniteBounds  =  true;  break;  [CE]  cannot  assign  a  value  to  final  variable  length  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    lB.length  =  lB.length;  hasFiniteBounds  =  true;  break;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    lB.length  =  lB.length;  hasFiniteBounds  =  true;  break;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	21	None	add
112	[BUG]  [BUGGY]    lB.length  =  lB.length;  [CE]  cannot  assign  a  value  to  final  variable  length  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    lB.length  =  lB.length;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    lB.length  =  lB.length;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	21	None	add
113	[BUG]  [BUGGY]    double[][]  uB  =  lB.substring(0,  i);  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    double[][]  uB  =  lB.substring(0,  i);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    double[][]  uB  =  lB.substring(0,  i);		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	21	None	add
114	[BUG]  [BUGGY]    lB.length  =  lB.length;  hasFiniteBounds  =  true;  [CE]  cannot  assign  a  value  to  final  variable  length  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    lB.length  =  lB.length;  hasFiniteBounds  =  true;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    lB.length  =  lB.length;  hasFiniteBounds  =  true;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	21	None	add
115	[BUG]  [BUGGY]    double[][]  uB  =  lB.substring(0,  i)+  1;  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    double[][]  uB  =  lB.substring(0,  i)+  1;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    double[][]  uB  =  lB.substring(0,  i)+  1;		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	21	None	add
121	[BUG]  [BUGGY]    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,double,RandomGenerator,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  false);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,double,RandomGenerator,boolean)	6	None	add
122	[BUG]  [BUGGY]    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  true);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,double,RandomGenerator,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  true);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  true);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,double,RandomGenerator,boolean)	6	None	add
123	[BUG]  [BUGGY]    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  false);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,boolean)	6	None	add
124	[BUG]  [BUGGY]    this(lambda,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,int,double,RandomGenerator,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    this(lambda,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  false);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    this(lambda,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,int,double,RandomGenerator,boolean)	6	None	add
125	[BUG]  [BUGGY]    this(lambda,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,int,RandomGenerator,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    this(lambda,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  false);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    this(lambda,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  false);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,int,RandomGenerator,boolean)	6	None	add
131	[BUG]  [BUGGY]    super();  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    super();  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    super();		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	2	None	add
132	[BUG]  [BUGGY]    this(DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(double,RandomGenerator)  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(double,RandomGenerator)	2	None	add
133	[BUG]  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_RANDOMGENERATOR);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(boolean,RandomGenerator)  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_RANDOMGENERATOR);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_ISACTIVECMA,  DEFAULT_RANDOMGENERATOR);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(boolean,RandomGenerator)	2	None	add
134	[BUG]  [BUGGY]    this(DEFAULT_STOPFITNESS);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(double)  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_STOPFITNESS);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_STOPFITNESS);		non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(double)	2	None	add
135	[BUG]  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_LOAD_FACTOR);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_LOAD_FACTOR);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_ISACTIVECMA,  DEFAULT_LOAD_FACTOR);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	2	None	add
141	[BUG]  [BUGGY]    setStatistics(DEFAULT_STOPFITNESS);  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStatistics(DEFAULT_STOPFITNESS);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStatistics(DEFAULT_STOPFITNESS);		non-compiled	[CE]  cannot  find  symbol	4	None	add
142	[BUG]  [BUGGY]    setStatistics(DEFAULT_ISACTIVECMA);  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStatistics(DEFAULT_ISACTIVECMA);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStatistics(DEFAULT_ISACTIVECMA);		non-compiled	[CE]  cannot  find  symbol	4	None	add
143	[BUG]  [BUGGY]    setStatistics(DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR);  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStatistics(DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStatistics(DEFAULT_STOPFITNESS,  DEFAULT_RANDOMGENERATOR);		non-compiled	[CE]  cannot  find  symbol	4	None	add
144	[BUG]  [BUGGY]    setStatistics(DEFAULT_ISACTIVECMA,  false);  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStatistics(DEFAULT_ISACTIVECMA,  false);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStatistics(DEFAULT_ISACTIVECMA,  false);		non-compiled	[CE]  cannot  find  symbol	4	None	add
151	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
152	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
153	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(!hasInfiniteBounds)  {  if(!hasFiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
154	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
155	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
162	[BUG]  [BUGGY]  borders  =  new  double[2][];  [CE]  cannot  find  symbol  borders  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  borders  =  new  double[2][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	borders  =  new  double[2][];	boundaries  =  new  double[2][];  	non-compiled	[CE]  cannot  find  symbol  borders	10	None	replace
164	[BUG]  [BUGGY]  bounds  =  new  double[2][];  [CE]  cannot  find  symbol  bounds  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  bounds  =  new  double[2][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	bounds  =  new  double[2][];	boundaries  =  new  double[2][];  	non-compiled	[CE]  cannot  find  symbol  bounds	10	None	replace
172	[BUG]  [BUGGY]  boundaries[1]  =  b;  [CE]  cannot  find  symbol  b  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]  boundaries[1]  =  b;  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	boundaries[1]  =  b;	boundaries[1]  =  uB;  	non-compiled	[CE]  cannot  find  symbol  b	14	None	replace
173	[BUG]  [BUGGY]  boundaries[1]  =  cs;  [CE]  incompatible  types  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]  boundaries[1]  =  cs;  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	boundaries[1]  =  cs;	boundaries[1]  =  uB;  	non-compiled	[CE]  incompatible  types	14	None	replace
181	[BUG]  [BUGGY]    double[][]  lB  =  hasInfiniteBounds;  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  hasInfiniteBounds;  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  hasInfiniteBounds;		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
182	[BUG]  [BUGGY]    double[][]  lB  =  getFixedBounds();  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  getFixedBounds();  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  getFixedBounds();		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
183	[BUG]  [BUGGY]    double[][]  lB  =  hasInfiniteBounds?  DEFAULT_ISACTIVECMA  :  null;  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  hasInfiniteBounds?  DEFAULT_ISACTIVECMA  :  null;  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  hasInfiniteBounds?  DEFAULT_ISACTIVECMA  :  null;		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
184	[BUG]  [BUGGY]    double[][]  lB  =  hasInfiniteBounds?  DEFAULT_STOPFITNESS  :  null;  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  hasInfiniteBounds?  DEFAULT_STOPFITNESS  :  null;  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  hasInfiniteBounds?  DEFAULT_STOPFITNESS  :  null;		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
185	[BUG]  [BUGGY]    double[][]  lB  =  new  double[2][];  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  new  double[2][];  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  new  double[2][];		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
191	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,boolean,int,int,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  false);  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  false);	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,boolean,int,int,boolean)	5	None	replace
192	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,double,int,int,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  false);  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  false);	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,double,int,int,boolean)	5	None	replace
193	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
194	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_  [CE]  ')'  expected  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  ')'  expected	5	None	replace
1	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
2	[BUG]  [BUGGY]  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
4	[BUG]  [BUGGY]  if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
4	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i])&&!Double.isInfinite(lB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!Double.isInfinite(uB[i])&&!Double.isInfinite(lB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
5	[BUG]  [BUGGY]  if(!Double.isInfinite(uB[i])&&!Double.isInfinite(lB[i]))  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(uB[i])&&!Double.isInfinite(lB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(uB[i])&&!Double.isInfinite(lB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
23	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  for(RealMatrix  B  :  getDeepestCommonParameters())  {  boundaries[0]  =  lB;  borders[1]  =  uB;  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(hasInfiniteBounds)  {  for(RealMatrix  B  :  getDeepestCommonParameters())  {  boundaries[0]  =  lB;  borders[1]  =  uB;  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(hasInfiniteBounds)  {  for(RealMatrix  B  :  getDeepestCommonParameters())  {  boundaries[0]  =  lB;  borders[1]  =  uB;  }		non-compiled	[CE]  'else'  without  'if'	13	None	add
24	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  for(RealMatrix  B  :  getDeepestCommonParameters())  {  boundaries[0]  =  lB;  boundary[1]  =  uB;  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    if(hasInfiniteBounds)  {  for(RealMatrix  B  :  getDeepestCommonParameters())  {  boundaries[0]  =  lB;  boundary[1]  =  uB;  }  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    if(hasInfiniteBounds)  {  for(RealMatrix  B  :  getDeepestCommonParameters())  {  boundaries[0]  =  lB;  boundary[1]  =  uB;  }		non-compiled	[CE]  'else'  without  'if'	13	None	add
25	[BUG]  [BUGGY]    Arrays.sort(bounds);  [CE]  cannot  find  symbol  bounds  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    Arrays.sort(bounds);  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    Arrays.sort(bounds);		non-compiled	[CE]  cannot  find  symbol  bounds	13	None	add
41	[BUG]  [BUGGY]    setFixedOptimizer(new  DoubleInputStreamReader());  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setFixedOptimizer(new  DoubleInputStreamReader());  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setFixedOptimizer(new  DoubleInputStreamReader());		non-compiled	[CE]  cannot  find  symbol	4	None	add
42	[BUG]  [BUGGY]    setFieldOptimizer(DEFAULT_FIELD_NAME);  [CE]  cannot  find  symbol  DEFAULT_FIELD_NAME  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setFieldOptimizer(DEFAULT_FIELD_NAME);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setFieldOptimizer(DEFAULT_FIELD_NAME);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_NAME	4	None	add
43	[BUG]  [BUGGY]    setFields();  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setFields();  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setFields();		non-compiled	[CE]  cannot  find  symbol	4	None	add
44	[BUG]  [BUGGY]    setFieldOptimizer(DEFAULT_FIELD_NAMES);  [CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setFieldOptimizer(DEFAULT_FIELD_NAMES);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setFieldOptimizer(DEFAULT_FIELD_NAMES);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_FIELD_NAMES	4	None	add
45	[BUG]  [BUGGY]    setFieldOptimizer(getCrc());  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setFieldOptimizer(getCrc());  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setFieldOptimizer(getCrc());		non-compiled	[CE]  cannot  find  symbol	4	None	add
61	[BUG]  [BUGGY]    lB[i]  =  lB[i];  [CE]  cannot  find  symbol  i  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    lB[i]  =  lB[i];  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    lB[i]  =  lB[i];		non-compiled	[CE]  cannot  find  symbol  i	21	None	add
62	[BUG]  [BUGGY]    Arrays.sort(lB,  0);  [CE]  no  suitable  method  found  for  sort(double[],int)  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    Arrays.sort(lB,  0);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    Arrays.sort(lB,  0);		non-compiled	[CE]  no  suitable  method  found  for  sort(double[],int)	21	None	add
63	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    Arrays.sort(lB);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	add	    Arrays.sort(lB);		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	21	1
64	[BUG]  [BUGGY]    Arrays.sort(lB);  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    Arrays.sort(lB);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    Arrays.sort(lB);		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	21	1	add
65	[BUG]  [BUGGY]    Arrays.sort(lB,  uB);  [CE]  no  suitable  method  found  for  sort(double[],double[])  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    Arrays.sort(lB,  uB);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    Arrays.sort(lB,  uB);		non-compiled	[CE]  no  suitable  method  found  for  sort(double[],double[])	21	None	add
81	[BUG]  [BUGGY]  this(DEFAULT_ISACTIVECMA);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(boolean)  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]  this(DEFAULT_ISACTIVECMA);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	this(DEFAULT_ISACTIVECMA);	this(0);  	non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(boolean)	1	None	replace
82	[BUG]  [BUGGY]  this(DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(boolean,int)  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]  this(DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	this(DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY);	this(0);  	non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(boolean,int)	1	None	replace
101	[BUG]  [BUGGY]    double[][]  boundaries  =  getBounds();  [CE]  cannot  find  symbol  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  boundaries  =  getBounds();  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  boundaries  =  getBounds();		non-compiled	[CE]  cannot  find  symbol	11	None	add
103	[BUG]  [BUGGY]    double[][]  boundaries  =  getField().getBounds();  [CE]  cannot  find  symbol  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  boundaries  =  getField().getBounds();  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  boundaries  =  getField().getBounds();		non-compiled	[CE]  cannot  find  symbol	11	None	add
105	[BUG]  [BUGGY]    double[][]  lB  =  getFieldValues();  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  getFieldValues();  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  getFieldValues();		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
124	[BUG]  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_RANDOMGONALONLY);  [CE]  cannot  find  symbol  DEFAULT_RANDOMGONALONLY  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_RANDOMGONALONLY);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_ISACTIVECMA,  DEFAULT_RANDOMGONALONLY);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_RANDOMGONALONLY	2	None	add
125	[BUG]  [BUGGY]    Preconditions.checkNotNull(getCmDimensions());  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    Preconditions.checkNotNull(getCmDimensions());  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    Preconditions.checkNotNull(getCmDimensions());		non-compiled	[CE]  cannot  find  symbol	2	None	add
162	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.exp(getBounds());  [CE]  cannot  find  symbol  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.exp(getBounds());  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.exp(getBounds());		non-compiled	[CE]  cannot  find  symbol	9	None	add
163	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.abs(lambda);  [CE]  incompatible  types  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.abs(lambda);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.abs(lambda);		non-compiled	[CE]  incompatible  types	9	None	add
164	[BUG]  [BUGGY]    double[]  boundaries  =  Math.max(lambda,  false);  [CE]  no  suitable  method  found  for  max(int,boolean)  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[]  boundaries  =  Math.max(lambda,  false);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[]  boundaries  =  Math.max(lambda,  false);		non-compiled	[CE]  no  suitable  method  found  for  max(int,boolean)	9	None	add
165	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.max(lambda,  0);  [CE]  incompatible  types  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.max(lambda,  0);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.max(lambda,  0);		non-compiled	[CE]  incompatible  types	9	None	add
182	[BUG]  [BUGGY]  borders[1]  =  lB;  [CE]  cannot  find  symbol  borders  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]  borders[1]  =  lB;  [BUGGY]    }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	borders[1]  =  lB;	boundaries[1]  =  uB;  	non-compiled	[CE]  cannot  find  symbol  borders	14	None	replace
222	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]  for(int  i  =  0;  i  <  uB.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	add	for(int  i  =  0;  i  <  uB.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	20	1
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  uB.length;  i++)  {  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]  for(int  i  =  0;  i  <  uB.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	for(int  i  =  0;  i  <  uB.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	20	1	replace
242	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(lB  ==  uB)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(!hasInfiniteBounds)  {  if(lB  ==  uB)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(!hasInfiniteBounds)  {  if(lB  ==  uB)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
245	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  return;  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  return;  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(!hasInfiniteBounds)  {  if(!hasInfiniteBounds)  {  return;  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
261	[BUG]  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {		non-compiled	[CE]  illegal  start  of  expression	17	None	add
262	[BUG]  [BUGGY]    if(init  ==  lB[i])  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(init  ==  lB[i])  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(init  ==  lB[i])  {  if(!Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {		non-compiled	[CE]  illegal  start  of  expression	17	None	add
263	[BUG]  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
264	[BUG]  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
265	[BUG]  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  haveInfiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  haveInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(init  ==  lB[i])  {  if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  haveInfiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
282	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  lambda,  false);  [CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,boolean,int,int,int,boolean)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  lambda,  false);  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  lambda,  false);	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  no  suitable  constructor  found  for  CMAESOptimizer(int,<null>,int,RandomGenerator,boolean,int,int,int,boolean)	5	None	replace
283	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  lambda,  false);  [CE]  cannot  find  symbol  DEFAULT_ISAGONALONLY  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  lambda,  false);  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  lambda,  false);	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_ISAGONALONLY	5	None	replace
284	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOM  [CE]  ')'  expected  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOM  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOM	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  ')'  expected	5	None	replace
302	[BUG]  [BUGGY]  lambda  =  256  +(int)(.  *  Math.log(guess));  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  256  +(int)(.  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  256  +(int)(.  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
303	[BUG]  [BUGGY]  lambda  =  lm  +(int)(.  *  Math.log(guess.length));  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  lm  +(int)(.  *  Math.log(guess.length));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  lm  +(int)(.  *  Math.log(guess.length));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
304	[BUG]  [BUGGY]  lambda  =  0  +(int)(.  *  Math.log(guess));  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  0  +(int)(.  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  0  +(int)(.  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
323	[BUG]  [BUGGY]  borders  =  new  double[1][];  [CE]  cannot  find  symbol  borders  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  borders  =  new  double[1][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	borders  =  new  double[1][];	boundaries  =  new  double[2][];  	non-compiled	[CE]  cannot  find  symbol  borders	10	None	replace
324	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  boundaries  =  new  double[4][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	add	boundaries  =  new  double[4][];	boundaries  =  new  double[2][];  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	10	1
325	[BUG]  [BUGGY]  boundaries  =  new  double[4][];  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  boundaries  =  new  double[4][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	boundaries  =  new  double[4][];	boundaries  =  new  double[2][];  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	10	1	replace
343	[BUG]  [BUGGY]  hasInfiniteBounds  =  false;  [CE]  cannot  find  symbol  hasInfiniteBounds  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  hasInfiniteBounds  =  false;  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	hasInfiniteBounds  =  false;	hasFiniteBounds  =  true;  	non-compiled	[CE]  cannot  find  symbol  hasInfiniteBounds	16	None	replace
361	[BUG]  [BUGGY]    lB[i]  =  lB[i];  hasInfiniteBounds  =  false;  [CE]  cannot  find  symbol  hasInfiniteBounds  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    lB[i]  =  lB[i];  hasInfiniteBounds  =  false;  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    lB[i]  =  lB[i];  hasInfiniteBounds  =  false;		non-compiled	[CE]  cannot  find  symbol  hasInfiniteBounds	19	None	add
365	[BUG]  [BUGGY]    if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  hasFiniteBounds  =  true;  hasFiniteBounds  =  false;  Arrays.sort(this.data);  }  [CE]  cannot  find  symbol  data  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  hasFiniteBounds  =  true;  hasFiniteBounds  =  false;  Arrays.sort(this.data);  }  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    if(!Double.isInfinite(uB[i])||  Double.isInfinite(lB[i]))  {  hasFiniteBounds  =  true;  hasFiniteBounds  =  false;  Arrays.sort(this.data);  }		non-compiled	[CE]  cannot  find  symbol  data	19	None	add
381	[BUG]  [BUGGY]    super();  [CE]  call  to  this  must  be  first  statement  in  constructor  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    super();  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    super();		non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	6	None	add
382	[BUG]  [BUGGY]    super(lambda);  [CE]  no  suitable  constructor  found  for  BaseAbstractMultivariateSimpleBoundsOptimizer(int)  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    super(lambda);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    super(lambda);		non-compiled	[CE]  no  suitable  constructor  found  for  BaseAbstractMultivariateSimpleBoundsOptimizer(int)	6	None	add
383	[BUG]  [BUGGY]    Preconditions.checkArgument(lambda!=  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    Preconditions.checkArgument(lambda!=  0);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    Preconditions.checkArgument(lambda!=  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
384	[BUG]  [BUGGY]    Preconditions.checkArgument(lambda  >=  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    Preconditions.checkArgument(lambda  >=  0);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    Preconditions.checkArgument(lambda  >=  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
385	[BUG]  [BUGGY]    Preconditions.checkArgument(lambda  ==  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    Preconditions.checkArgument(lambda  ==  0);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    Preconditions.checkArgument(lambda  ==  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
1	[BUG]  [BUGGY]    Arrays.sort(lB,  uB);  [CE]  no  suitable  method  found  for  sort(double[],double[])  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    Arrays.sort(lB,  uB);  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    Arrays.sort(lB,  uB);		non-compiled	[CE]  no  suitable  method  found  for  sort(double[],double[])	11	None	add
3	[BUG]  [BUGGY]    double[][]  lB  =  getFixedBounds();  hasInfiniteBounds  =  false;  [CE]  variable  lB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    double[][]  lB  =  getFixedBounds();  hasInfiniteBounds  =  false;  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    double[][]  lB  =  getFixedBounds();  hasInfiniteBounds  =  false;		non-compiled	[CE]  variable  lB  is  already  defined  in  method  checkParameters()	11	None	add
4	[BUG]  [BUGGY]    Arrays.sort(lB,  uB);  hasInfiniteBounds  =  false;  [CE]  no  suitable  method  found  for  sort(double[],double[])  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]    Arrays.sort(lB,  uB);  hasInfiniteBounds  =  false;  [BUGGY]  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	    Arrays.sort(lB,  uB);  hasInfiniteBounds  =  false;		non-compiled	[CE]  no  suitable  method  found  for  sort(double[],double[])	11	None	add
31	[BUG]  [BUGGY]    double[][]  uB  =  lB.toString();  hasInfiniteBounds  =  false;  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    double[][]  uB  =  lB.toString();  hasInfiniteBounds  =  false;  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    double[][]  uB  =  lB.toString();  hasInfiniteBounds  =  false;		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	19	None	add
32	[BUG]  [BUGGY]    checkFiniteBounds(lB[i],  uB[i]);  [CE]  cannot  find  symbol  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    checkFiniteBounds(lB[i],  uB[i]);  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    checkFiniteBounds(lB[i],  uB[i]);		non-compiled	[CE]  cannot  find  symbol	19	None	add
33	[BUG]  [BUGGY]    checkFiniteBounds(lB,  uB);  [CE]  cannot  find  symbol  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    checkFiniteBounds(lB,  uB);  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    checkFiniteBounds(lB,  uB);		non-compiled	[CE]  cannot  find  symbol	19	None	add
34	[BUG]  [BUGGY]    checkFixedBounds(lB,  uB);  hasInfiniteBounds  =  false;  [CE]  cannot  find  symbol  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    checkFixedBounds(lB,  uB);  hasInfiniteBounds  =  false;  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    checkFixedBounds(lB,  uB);  hasInfiniteBounds  =  false;		non-compiled	[CE]  cannot  find  symbol	19	None	add
35	[BUG]  [BUGGY]    double[][]  uB  =  lB.toString();  hasFiniteBounds  =  false;  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]    double[][]  uB  =  lB.toString();  hasFiniteBounds  =  false;  [BUGGY]  break;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	    double[][]  uB  =  lB.toString();  hasFiniteBounds  =  false;		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	19	None	add
91	[BUG]  [BUGGY]    setStandardDeviation(DateTimeZone.getDefault());  [CE]  cannot  find  symbol  DateTimeZone  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStandardDeviation(DateTimeZone.getDefault());  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStandardDeviation(DateTimeZone.getDefault());		non-compiled	[CE]  cannot  find  symbol  DateTimeZone	4	None	add
92	[BUG]  [BUGGY]    setStandardCreation(createStandardCreation());  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStandardCreation(createStandardCreation());  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStandardCreation(createStandardCreation());		non-compiled	[CE]  cannot  find  symbol	4	None	add
93	[BUG]  [BUGGY]    return  new  CMAESOptimizer(this,  false);  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    return  new  CMAESOptimizer(this,  false);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    return  new  CMAESOptimizer(this,  false);		non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	4	None	add
94	[BUG]  [BUGGY]    return  new  CMAESOptimizer(this,  true);  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    return  new  CMAESOptimizer(this,  true);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    return  new  CMAESOptimizer(this,  true);		non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	4	None	add
95	[BUG]  [BUGGY]    setStandardCreation(getCreator());  [CE]  cannot  find  symbol  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    setStandardCreation(getCreator());  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	    setStandardCreation(getCreator());		non-compiled	[CE]  cannot  find  symbol	4	None	add
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  oB.length;  i++)  {  [CE]  cannot  find  symbol  oB  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]  for(int  i  =  0;  i  <  oB.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	for(int  i  =  0;  i  <  oB.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  cannot  find  symbol  oB	20	None	replace
152	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLE  [CE]  ')'  expected  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLE  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLE	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  ')'  expected	5	None	replace
154	[BUG]  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFE  [CE]  ')'  expected  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFE  [BUGGY]  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_RANDOMGENERATOR,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFE	this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,    DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  	non-compiled	[CE]  ')'  expected	5	None	replace
183	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  boundaries  =  new  double[3][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	add	boundaries  =  new  double[3][];	boundaries  =  new  double[2][];  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	10	1
184	[BUG]  [BUGGY]  boundaries  =  new  double[3][];  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {    [BUGGY]  boundaries  =  new  double[3][];  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	535	535	1	replace	boundaries  =  new  double[3][];	boundaries  =  new  double[2][];  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	10	1	replace
212	[BUG]  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_LOAD_FACTOR,  false);  [CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_LOAD_FACTOR,  false);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_ISACTIVECMA,  DEFAULT_LOAD_FACTOR,  false);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_LOAD_FACTOR	2	None	add
215	[BUG]  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_NAMELERATIONS);  [CE]  cannot  find  symbol  DEFAULT_NAMELERATIONS  [CONTEXT]  public  CMAESOptimizer()  {  [BUGGY]    this(DEFAULT_ISACTIVECMA,  DEFAULT_NAMELERATIONS);  [BUGGY]  this(0);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	246	246	1	replace	    this(DEFAULT_ISACTIVECMA,  DEFAULT_NAMELERATIONS);		non-compiled	[CE]  cannot  find  symbol  DEFAULT_NAMELERATIONS	2	None	add
243	[BUG]  [BUGGY]  hasFIniteBounds  =  false;  [CE]  cannot  find  symbol  hasFIniteBounds  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  hasFIniteBounds  =  false;  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	hasFIniteBounds  =  false;	hasFiniteBounds  =  true;  	non-compiled	[CE]  cannot  find  symbol  hasFIniteBounds	16	None	replace
244	[BUG]  [BUGGY]  !hasFiniteBounds  =  true;  [CE]  unexpected  type  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  !hasFiniteBounds  =  true;  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	!hasFiniteBounds  =  true;	hasFiniteBounds  =  true;  	non-compiled	[CE]  unexpected  type	16	None	replace
272	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  if(!isActive())  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  'else'  without  'if'  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(hasInfiniteBounds)  {  if(!isActive())  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(hasInfiniteBounds)  {  if(!isActive())  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  'else'  without  'if'	15	None	add
273	[BUG]  [BUGGY]    if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  no  suitable  constructor  found  for  MathUnsupportedOperationException(String)  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(!hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  no  suitable  constructor  found  for  MathUnsupportedOperationException(String)	15	None	add
274	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	add	    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	15	1
275	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	15	1	add
275	[BUG]  [BUGGY]    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  no  suitable  constructor  found  for  MathUnsupportedOperationException(String)  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  [BUGGY]    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	537	537	1	replace	    if(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }		non-compiled	[CE]  no  suitable  constructor  found  for  MathUnsupportedOperationException(String)	15	None	add
302	[BUG]  [BUGGY]    uUtil.checkParams(bounds[0],  uB,  false);  [CE]  cannot  find  symbol  bounds  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    uUtil.checkParams(bounds[0],  uB,  false);  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    uUtil.checkParams(bounds[0],  uB,  false);		non-compiled	[CE]  cannot  find  symbol  bounds	13	None	add
303	[BUG]  [BUGGY]    uUtil.checkParams(bounds[0],  uB);  [CE]  cannot  find  symbol  bounds  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    uUtil.checkParams(bounds[0],  uB);  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    uUtil.checkParams(bounds[0],  uB);		non-compiled	[CE]  cannot  find  symbol  bounds	13	None	add
304	[BUG]  [BUGGY]    uB  =  Math.pow(10,  uB,  0,  boundaries.length);  [CE]  cannot  assign  a  value  to  final  variable  uB  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    uB  =  Math.pow(10,  uB,  0,  boundaries.length);  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    uB  =  Math.pow(10,  uB,  0,  boundaries.length);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  uB	13	None	add
305	[BUG]  [BUGGY]    uB  =  Math.pow(10,  uB,  0,  boundaries[0]);  [CE]  cannot  assign  a  value  to  final  variable  uB  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]    uB  =  Math.pow(10,  uB,  0,  boundaries[0]);  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	    uB  =  Math.pow(10,  uB,  0,  boundaries[0]);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  uB	13	None	add
331	[BUG]  [BUGGY]    double[][]  uB  =  Double.valueOf(lB[i]);  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    double[][]  uB  =  Double.valueOf(lB[i]);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    double[][]  uB  =  Double.valueOf(lB[i]);		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	21	None	add
332	[BUG]  [BUGGY]    double[][]  uB  =  getFixedUtilities().toArray(new  Double[lB.length]);  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    double[][]  uB  =  getFixedUtilities().toArray(new  Double[lB.length]);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    double[][]  uB  =  getFixedUtilities().toArray(new  Double[lB.length]);		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	21	None	add
333	[BUG]  [BUGGY]    double[][]  uB  =  getFixedUtilities();  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    double[][]  uB  =  getFixedUtilities();  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    double[][]  uB  =  getFixedUtilities();		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	21	None	add
334	[BUG]  [BUGGY]    double  uB  =  Double.valueOf(lB[i]);  [CE]  variable  uB  is  already  defined  in  method  checkParameters()  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    double  uB  =  Double.valueOf(lB[i]);  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    double  uB  =  Double.valueOf(lB[i]);		non-compiled	[CE]  variable  uB  is  already  defined  in  method  checkParameters()	21	None	add
335	[BUG]  [BUGGY]    lB[i]  =  lB[i]  -  1];  [CE]  ';'  expected  [CONTEXT]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  [BUGGY]    lB[i]  =  lB[i]  -  1];  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  break;  }  }  if  (hasInfiniteBounds)  {    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	521	521	1	replace	    lB[i]  =  lB[i]  -  1];		non-compiled	[CE]  ';'  expected	21	None	add
361	[BUG]  [BUGGY]  peg(Calendar.getInstance());  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  peg(Calendar.getInstance());  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	peg(Calendar.getInstance());	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
364	[BUG]  [BUGGY]  peg(Calendar.getInput());  [CE]  illegal  start  of  expression  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  peg(Calendar.getInput());  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	247	247	1	replace	peg(Calendar.getInput());	}  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
392	[BUG]  [BUGGY]    Preconditions.checkArgument(lambda  <  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    Preconditions.checkArgument(lambda  <  0);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    Preconditions.checkArgument(lambda  <  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
394	[BUG]  [BUGGY]    Preconditions.checkNotNull(lambda);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  CMAESOptimizer(int  lambda)  {  [BUGGY]    Preconditions.checkNotNull(lambda);  [BUGGY]  this(lambda,  null,  DEFAULT_MAXITERATIONS,  DEFAULT_STOPFITNESS,    DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,        DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  DEFAULT_ISACTIVECMA,  DEFAULT_DIAGONALONLY,  DEFAULT_CHECKFEASABLECOUNT,  DEFAULT_RANDOMGENERATOR,  false);  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer(int)  int  lambda  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	253	255	1	replace	    Preconditions.checkNotNull(lambda);		non-compiled	[CE]  cannot  find  symbol  Preconditions	6	None	add
421	[BUG]  [BUGGY]    setDefinedBounds(guess);  [CE]  cannot  find  symbol  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    setDefinedBounds(guess);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    setDefinedBounds(guess);		non-compiled	[CE]  cannot  find  symbol	9	None	add
422	[BUG]  [BUGGY]    double[][]  boundaries  =  Math.max(math.length,  guess);  [CE]  cannot  find  symbol  math  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    double[][]  boundaries  =  Math.max(math.length,  guess);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    double[][]  boundaries  =  Math.max(math.length,  guess);		non-compiled	[CE]  cannot  find  symbol  math	9	None	add
423	[BUG]  [BUGGY]    setDefinedBounds(guess,  false);  [CE]  cannot  find  symbol  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    setDefinedBounds(guess,  false);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    setDefinedBounds(guess,  false);		non-compiled	[CE]  cannot  find  symbol	9	None	add
424	[BUG]  [BUGGY]    Arrays.fill(g2,  guess);  [CE]  cannot  find  symbol  g2  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    Arrays.fill(g2,  guess);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    Arrays.fill(g2,  guess);		non-compiled	[CE]  cannot  find  symbol  g2	9	None	add
425	[BUG]  [BUGGY]    Arrays.sort(label);  [CE]  cannot  find  symbol  label  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]    Arrays.sort(label);  [BUGGY]  lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	    Arrays.sort(label);		non-compiled	[CE]  cannot  find  symbol  label	9	None	add
451	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	add	if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1
452	[BUG]  [BUGGY]  if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }	break;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  testBoundaryRangeTooLarge	18	1	replace
454	[BUG]  [BUGGY]  if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }  else  {  Statistics.Math.abs[i]  =  Math.abs(lB[i]);  }  [CE]  package  Statistics  does  not  exist  [CONTEXT]  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  hasFiniteBounds  =  true;  [BUGGY]  if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }  else  {  Statistics.Math.abs[i]  =  Math.abs(lB[i]);  }  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	515	515	1	replace	if(!Double.isInfinite(lB[i])&&!Double.isInfinite(uB[i]))  {  break;  }  else  {  Statistics.Math.abs[i]  =  Math.abs(lB[i]);  }	break;  	non-compiled	[CE]  package  Statistics  does  not  exist	18	None	replace
511	[BUG]  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(hasInfiniteBounds)  {  hasInfiniteBounds  =  true;  }  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(hasInfiniteBounds)  {  hasInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(hasInfiniteBounds)  {  hasInfiniteBounds  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	17	None	add
512	[BUG]  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(!Double.isInfinite(uB[i]))  {  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(!Double.isInfinite(uB[i]))  {  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(!Double.isInfinite(uB[i]))  {		non-compiled	[CE]  illegal  start  of  expression	17	None	add
513	[BUG]  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  if(!Double.isInfinite(lB[i]))  {  [CE]  illegal  start  of  expression  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  if(!Double.isInfinite(lB[i]))  {  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  if(!Double.isInfinite(lB[i]))  {		non-compiled	[CE]  illegal  start  of  expression	17	None	add
514	[BUG]  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [CE]  cannot  find  symbol  hasInfiniteBounds  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  }		non-compiled	[CE]  cannot  find  symbol  hasInfiniteBounds	17	None	add
515	[BUG]  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(hasInfiniteBounds)  {  hasInfiniteBounds  =  true  [CE]  ';'  expected  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(hasInfiniteBounds)  {  hasInfiniteBounds  =  true  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    if(Double.isInfinite(lB[i])||  Double.isInfinite(uB[i]))  {  Arrays.sort(lB[i]);  if(hasInfiniteBounds)  {  hasInfiniteBounds  =  true		non-compiled	[CE]  ';'  expected	17	None	add
544	[BUG]  [BUGGY]  boundaries[0]  =  i;  [CE]  cannot  find  symbol  i  [CONTEXT]  if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  [BUGGY]  boundaries[0]  =  i;  [BUGGY]  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	boundaries[0]  =  i;	boundaries[0]  =  lB;  	non-compiled	[CE]  cannot  find  symbol  i	12	None	replace
571	[BUG]  [BUGGY]  lambda  =  4  +(int)(0.5  *  Math.log(guess));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  4  +(int)(0.5  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  4  +(int)(0.5  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	8	None	replace
572	[BUG]  [BUGGY]  lambda  =  3  +(int)  (3.  *  Math.log(guess));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  3  +(int)  (3.  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  3  +(int)  (3.  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	8	None	replace
573	[BUG]  [BUGGY]  lambda  =  4  +(int)(2.5  *  Math.log(guess));  [CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;  [CONTEXT]  private  void  initializeCMA(double[]  guess)  {  if  (lambda  <=  0)  {  [BUGGY]  lambda  =  4  +(int)(2.5  *  Math.log(guess));  [BUGGY]  }  double[][]  sigmaArray  =  new  double[guess.length][1];  for  (int  i  =  0;  i  <  guess.length;  i++)  {  final  double  range  =(boundaries  ==  null)  ?  1.0  :  boundaries[1][i]  -  boundaries[0][i];  sigmaArray[i][0]  =  ((inputSigma  ==  null)  ?  0.3  :  inputSigma[i])  /  range;  }  RealMatrix  insigma  =  new  Array2DRowRealMatrix(sigmaArray,  false);  sigma  =  max(insigma);  //  overall  standard  deviation  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  initializeCMA  [RETURN_TYPE]  void  double[]  guess  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  insigma  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  range  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  sumw  sumwq  value  valueRange  w  worstFitness  double[][]  boundaries  sigmaArray  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.7071067811865475	570	570	1	replace	lambda  =  4  +(int)(2.5  *  Math.log(guess));	lambda  =  4  +  (int)  (3.  *  Math.log(dimension));  	non-compiled	[CE]  method  log  in  class  Math  cannot  be  applied  to  given  types;	8	None	replace
