bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
16	[BUG] [BUGGY] hasFiniteBounds = true; [FE] java.lang.Exception: Unexpected exception [CONTEXT] private void checkParameters() { final double[] init = getStartPoint(); final double[] lB = getLowerBound(); final double[] uB = getUpperBound();  boolean hasFiniteBounds = false; for (int i = 0; i < lB.length; i++) { if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { [BUGGY] hasFiniteBounds = true; [BUGGY] break; } }  boolean hasInfiniteBounds = false; if (hasFiniteBounds) { for (int i = 0; i < lB.length; i++) { if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) { hasInfiniteBounds = true; [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	
17	[BUG] [BUGGY] [FE] java.lang.Exception: Unexpected exception [CONTEXT] private void checkParameters() { final double[] init = getStartPoint(); final double[] lB = getLowerBound(); final double[] uB = getUpperBound();  boolean hasFiniteBounds = false; for (int i = 0; i < lB.length; i++) { if (!Double.isInfinite(lB[i]) || !Double.isInfinite(uB[i])) { [BUGGY] [BUGGY] hasFiniteBounds = true; break; } }  boolean hasInfiniteBounds = false; if (hasFiniteBounds) { for (int i = 0; i < lB.length; i++) { if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) { hasInfiniteBounds = true; [CLASS] CMAESOptimizer DoubleIndex FitnessFunction [METHOD] checkParameters [RETURN_TYPE] void  [VARIABLES] boolean DEFAULT_ISACTIVECMA generateStatistics hasFiniteBounds hasInfiniteBounds hsig isActiveCMA isMinimize isRepairMode double[] fitness fitnessHistory guess init inputSigma lB pcCol sqrtDiagC uB RealMatrix B BD C D arx arxk arz bestArx bestArz diagC diagD pc ps weights xmean xold zmean double DEFAULT_STOPFITNESS bestFitness bestValue cc ccov1 ccov1Sep ccovmu ccovmuSep chiN cs damps historyBest historyWorst logMu2 mueff normps sigma stopFitness stopTolFun stopTolHistFun stopTolUpX stopTolX value valueRange worstFitness double[][] boundaries List statisticsDHistory statisticsFitnessHistory statisticsMeanHistory statisticsSigmaHistory int DEFAULT_CHECKFEASABLECOUNT DEFAULT_DIAGONALONLY DEFAULT_MAXITERATIONS checkFeasableCount diagonalOnly dimension historySize i index iterations k lambda maxIterations mu RandomGenerator DEFAULT_RANDOMGENERATOR random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	add	
