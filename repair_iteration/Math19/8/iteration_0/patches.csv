bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    ((  Double)lB[i]).doubleValue()  ==  0;  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    ((  Double)lB[i]).doubleValue()  ==  0;  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    ((  Double)lB[i]).doubleValue()  ==  0;		non-compiled	[CE]  	17	None	add
2	[BUG]  [BUGGY]    ((  Double)lB[i]).doubleValue()  <  =  0;  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    ((  Double)lB[i]).doubleValue()  <  =  0;  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    ((  Double)lB[i]).doubleValue()  <  =  0;		non-compiled	[CE]  	17	None	add
3	[BUG]  [BUGGY]    ((  Double)lB[i]).doubleValue()!=  0;  [CE]  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    ((  Double)lB[i]).doubleValue()!=  0;  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    ((  Double)lB[i]).doubleValue()!=  0;		non-compiled	[CE]  	17	None	add
4	[BUG]  [BUGGY]  hasFiniteBounds  =  false;  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  hasFiniteBounds  =  false;  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	hasFiniteBounds  =  false;	hasFiniteBounds  =  true;  	non-compiled	[CE]  	16	None	replace
5	[BUG]  [BUGGY]  haveFiniteBounds  =  false;  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]  haveFiniteBounds  =  false;  [BUGGY]  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	haveFiniteBounds  =  false;	hasFiniteBounds  =  true;  	non-compiled	[CE]  	16	None	replace
6	[BUG]  [BUGGY]    lB[i]  =  uB[i].getUpperBound();  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    lB[i]  =  uB[i].getUpperBound();  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    lB[i]  =  uB[i].getUpperBound();		non-compiled	[CE]  	17	None	add
7	[BUG]  [BUGGY]    uB[i]  =  uB[i].getUpperBound();  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    uB[i]  =  uB[i].getUpperBound();  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    uB[i]  =  uB[i].getUpperBound();		non-compiled	[CE]  	17	None	add
8	[BUG]  [BUGGY]    ((  Double)lB[i]).doubleValue();  [CE]  [FE]        java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    ((  Double)lB[i]).doubleValue();  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    ((  Double)lB[i]).doubleValue();		non-compiled	[CE]  	17	None	add
9	[BUG]  [BUGGY]    uB[i]  =  lB[i].getUpperBound();  [CE]  [FE]    java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    uB[i]  =  lB[i].getUpperBound();  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    uB[i]  =  lB[i].getUpperBound();		non-compiled	[CE]  	17	None	add
10	[BUG]  [BUGGY]    lB[i]  =  uB[i].getHeight();  [CE]  [FE]      java.lang.Exception:  Unexpected  exception  [CONTEXT]  private  void  checkParameters()  {  final  double[]  init  =  getStartPoint();  final  double[]  lB  =  getLowerBound();  final  double[]  uB  =  getUpperBound();  boolean  hasFiniteBounds  =  false;  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (!Double.isInfinite(lB[i])  ||  !Double.isInfinite(uB[i]))  {  [BUGGY]    lB[i]  =  uB[i].getHeight();  [BUGGY]  hasFiniteBounds  =  true;  break;  }  }  boolean  hasInfiniteBounds  =  false;  if  (hasFiniteBounds)  {  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(lB[i])  ||  Double.isInfinite(uB[i]))  {  hasInfiniteBounds  =  true;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4082482904638631	514	514	1	replace	    lB[i]  =  uB[i].getHeight();		non-compiled	[CE]  	17	None	add
