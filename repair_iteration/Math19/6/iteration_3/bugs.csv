bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeThan  <  Math.max(0,  Math.min(2,  boundaries.length)));  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.max(0,  Math.min(2,  boundaries.length)));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  <  Math.max(0,  Math.min(2,  boundaries.length)));	  safeThan    <    Math.max(0,    Math.min(1,    boundaries.length)));    	non-compiled	[CE]  ')'  expected	13	None	replace
2	[BUG]  [BUGGY]  safeThan  <  Math.max(0,  Math.min(1,  boundaries.length  -  1)));  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.max(0,  Math.min(1,  boundaries.length  -  1)));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  <  Math.max(0,  Math.min(1,  boundaries.length  -  1)));	  safeThan    <    Math.max(0,    Math.min(1,    boundaries.length)));    	non-compiled	[CE]  ')'  expected	13	None	replace
3	[BUG]  [BUGGY]  double  uB  =  getFitness();  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  uB  =  getFitness();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	double  uB  =  getFitness();	  double    uB    =    getFiniteBounds();    	non-compiled	[CE]  ')'  expected	26	None	replace
4	[BUG]  [BUGGY]  double  uB  =  getFiteBounds();  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  uB  =  getFiteBounds();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	double  uB  =  getFiteBounds();	  double    uB    =    getFiniteBounds();    	non-compiled	[CE]  ')'  expected	26	None	replace
5	[BUG]  [BUGGY]  HashMap  <  String,Object>  boundaries  =  new  LinkedHashMap  <  String,Object>();  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  HashMap  <  String,Object>  boundaries  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	HashMap  <  String,Object>  boundaries  =  new  LinkedHashMap  <  String,Object>();	  HashMap    <    String,Object>    boundaries    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  ')'  expected	19	None	replace
6	[BUG]  [BUGGY]  int  lB  =  getInputSigma().length  +  2;  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  getInputSigma().length  +  2;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  lB  =  getInputSigma().length  +  2;	  int    lB    =    getInputSigma().length    +    1;    	non-compiled	[CE]  ')'  expected	12	None	replace
7	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(lB,  boundaries[0]);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(lB,  boundaries[0]);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFiniteBounds(lB,  boundaries[0]);	  int    uB    =    getFiniteBounds(lB,    boundaries);    	non-compiled	[CE]  ')'  expected	2	None	replace
8	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(lB,  0,  boundaries);  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(lB,  0,  boundaries);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFiniteBounds(lB,  0,  boundaries);	  int    uB    =    getFiniteBounds(lB,    boundaries);    	non-compiled	[CE]  ')'  expected	2	None	replace
9	[BUG]  [BUGGY]  safeGet(lB,  boundaries[0])+  1);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeGet(lB,  boundaries[0])+  1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeGet(lB,  boundaries[0])+  1);	  safeGet(lB,    boundaries[0]));    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  int  lB  =  Math.min(limits.length,  2);  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  Math.min(limits.length,  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  lB  =  Math.min(limits.length,  2);	  int    lB    =    Math.min(lB.length,    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
11	[BUG]  [BUGGY]  int  uB  =  getFitness()  +  1;  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFitness()  +  1;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFitness()  +  1;	  int    uB    =    getFitness();    	non-compiled	[CE]  ')'  expected	7	None	replace
12	[BUG]  [BUGGY]  int  uB  =  getFitness()  *  2;  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFitness()  *  2;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFitness()  *  2;	  int    uB    =    getFitness();    	non-compiled	[CE]  ')'  expected	7	None	replace
13	[BUG]  [BUGGY]  safeGet(lB,  boundaries[1]);  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeGet(lB,  boundaries[1]);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeGet(lB,  boundaries[1]);	  safeGet(lB,    boundaries[0]);    	non-compiled	[CE]  ')'  expected	8	None	replace
14	[BUG]  [BUGGY]  safeGet(lB,  boundaries[0],  boundaries[1]  =  0);  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeGet(lB,  boundaries[0],  boundaries[1]  =  0);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeGet(lB,  boundaries[0],  boundaries[1]  =  0);	  safeGet(lB,    boundaries[0],    boundaries[1]    =    uB);    	non-compiled	[CE]  ')'  expected	22	None	replace
15	[BUG]  [BUGGY]  safeGet(lB,  boundaries[0],  boundaries[1]  =  uB,  true);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeGet(lB,  boundaries[0],  boundaries[1]  =  uB,  true);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeGet(lB,  boundaries[0],  boundaries[1]  =  uB,  true);	  safeGet(lB,    boundaries[0],    boundaries[1]    =    uB);    	non-compiled	[CE]  ')'  expected	22	None	replace
16	[BUG]  [BUGGY]  lB  =  Math.min(2,  lB.length);  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  lB  =  Math.min(2,  lB.length);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	lB  =  Math.min(2,  lB.length);	  lB    =    Math.min(1,    lB.length);    	non-compiled	[CE]  ')'  expected	28	None	replace
17	[BUG]  [BUGGY]  lB  =  Math.min(1,  lB.length  +  1);  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  lB  =  Math.min(1,  lB.length  +  1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	lB  =  Math.min(1,  lB.length  +  1);	  lB    =    Math.min(1,    lB.length);    	non-compiled	[CE]  ')'  expected	28	None	replace
18	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(lB,  2);  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(lB,  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFiniteBounds(lB,  2);	  int    uB    =    getFiniteBounds(lB,    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
19	[BUG]  [BUGGY]  int  uB  =  getFiniteBounds(0,  1);  [CE]  ')'  expected  [FE]                    java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiniteBounds(0,  1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFiniteBounds(0,  1);	  int    uB    =    getFiniteBounds(lB,    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
20	[BUG]  [BUGGY]  safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException();  }	  if(hasFiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  ')'  expected	5	None	replace
21	[BUG]  [BUGGY]  int  lB  =  Math.min(lB.length,  lB.length  -  2);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  Math.min(lB.length,  lB.length  -  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  lB  =  Math.min(lB.length,  lB.length  -  2);	  int    lB    =    Math.min(lB.length,    lB.length    -    1);    	non-compiled	[CE]  ')'  expected	16	None	replace
22	[BUG]  [BUGGY]  ptrts[0]  =  lB;  boundaries[1]  =  uB;  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  ptrts[0]  =  lB;  boundaries[1]  =  uB;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	ptrts[0]  =  lB;  boundaries[1]  =  uB;	  pătrts[0]    =    lB;    boundaries[1]    =    uB;    	non-compiled	[CE]  ')'  expected	25	None	replace
23	[BUG]  [BUGGY]  boundaries[1]  =  0;  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  boundaries[1]  =  0;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	boundaries[1]  =  0;	  boundaries[1]    =    uB;    	non-compiled	[CE]  ')'  expected	10	None	replace
24	[BUG]  [BUGGY]  int  lB  =  Math.min(0,  lB.length  -  1);  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  Math.min(0,  lB.length  -  1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  lB  =  Math.min(0,  lB.length  -  1);	  int    lB    =    Math.min(0,    lB.length);    	non-compiled	[CE]  ')'  expected	15	None	replace
25	[BUG]  [BUGGY]  int  lB  =  Math.min(1,  lB.length);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  Math.min(1,  lB.length);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  lB  =  Math.min(1,  lB.length);	  int    lB    =    Math.min(0,    lB.length);    	non-compiled	[CE]  ')'  expected	15	None	replace
26	[BUG]  [BUGGY]  boundaries[0]  =  uB.length  +  1;  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  boundaries[0]  =  uB.length  +  1;  [BUGGY]      boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	boundaries[0]  =  uB.length  +  1;	  boundaries[0]    =    uB.length;    	non-compiled	[CE]  ')'  expected	4	None	replace
27	[BUG]  [BUGGY]  safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeFitness(hasInfiniteBounds)  {  throw  new  MathUnsupportedOperationException( " ");  }	  if(hasFiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  	20	None	replace
28	[BUG]  [BUGGY]  int  uB  =  getInfiniteBounds()  +  1;  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getInfiniteBounds()  +  1;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getInfiniteBounds()  +  1;	  int    uB    =    getInfiniteBounds();    	non-compiled	[CE]  ')'  expected	6	None	replace
29	[BUG]  [BUGGY]  int  uB  =  getFixedBounds(lB,  boundaries);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFixedBounds(lB,  boundaries);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFixedBounds(lB,  boundaries);	  int    uB    =    getFixedBounds(lB);    	non-compiled	[CE]  ')'  expected	23	None	replace
30	[BUG]  [BUGGY]  int  uB  =  getFixedBounds(lB,  1);  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFixedBounds(lB,  1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFixedBounds(lB,  1);	  int    uB    =    getFixedBounds(lB);    	non-compiled	[CE]  ')'  expected	23	None	replace
31	[BUG]  [BUGGY]  lB  =  Math.min(0,  lB.length  -  2);  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  lB  =  Math.min(0,  lB.length  -  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	lB  =  Math.min(0,  lB.length  -  2);	  lB    =    Math.min(0,    lB.length    -    1);    	non-compiled	[CE]  ')'  expected	1	None	replace
32	[BUG]  [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  boundaries[0]  =  lB;  boundaries[1]  =  uB;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	boundaries[0]  =  lB;  boundaries[1]  =  uB;	  Bezirks[0]    =    lB;    boundaries[1]    =    uB;    	non-compiled	[CE]  ')'  expected	24	None	replace
33	[BUG]  [BUGGY]  lB  =  Math.min(1,  lB.length  -  1);  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  lB  =  Math.min(1,  lB.length  -  1);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	lB  =  Math.min(1,  lB.length  -  1);	  lB    =    Math.min(1,    lB.length);    	non-compiled	[CE]  ')'  expected	28	None	replace
34	[BUG]  [BUGGY]  safeThan  =  Math.max(0,  Math.min(2,  boundaries.length)));  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  =  Math.max(0,  Math.min(2,  boundaries.length)));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  =  Math.max(0,  Math.min(2,  boundaries.length)));	  safeThan    <    Math.max(0,    Math.min(1,    boundaries.length)));    	non-compiled	[CE]  ')'  expected	13	None	replace
35	[BUG]  [BUGGY]  safeThan  =  Math.max(0,  Math.min(1,  boundaries.length)));  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  =  Math.max(0,  Math.min(1,  boundaries.length)));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  =  Math.max(0,  Math.min(1,  boundaries.length)));	  safeThan    <    Math.max(0,    Math.min(1,    boundaries.length)));    	non-compiled	[CE]  ')'  expected	13	None	replace
36	[BUG]  [BUGGY]  int  uB  =  getFitness(lB);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFitness(lB);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFitness(lB);	  int    uB    =    getFitness();    	non-compiled	[CE]  ')'  expected	7	None	replace
37	[BUG]  [BUGGY]  ptrts[0]  =  lB;  boundaries[1]  =  lB;  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  ptrts[0]  =  lB;  boundaries[1]  =  lB;  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	ptrts[0]  =  lB;  boundaries[1]  =  lB;	  pătrts[0]    =    lB;    boundaries[1]    =    uB;    	non-compiled	[CE]  ')'  expected	25	None	replace
38	[BUG]  [BUGGY]  if(hasInfiniteBounds)  {  throw  new  MatrixUnsupportedOperationException();  }  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  if(hasInfiniteBounds)  {  throw  new  MatrixUnsupportedOperationException();  }  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	if(hasInfiniteBounds)  {  throw  new  MatrixUnsupportedOperationException();  }	  if(hasFiniteBounds)    {    throw    new    MathUnsupportedOperationException();    }    	non-compiled	[CE]  ')'  expected	5	None	replace
39	[BUG]  [BUGGY]  safeThan  <  Math.min(0,  lB.length));  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.min(0,  lB.length));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  <  Math.min(0,  lB.length));	  if(hasFiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  ')'  expected	20	None	replace
40	[BUG]  [BUGGY]  safeThan  <  Math.max(0,  lB.length));  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.max(0,  lB.length));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  <  Math.max(0,  lB.length));	  if(hasFiniteBounds)    {    throw    new    MathUnsupportedOperationException(   "   ");    }    	non-compiled	[CE]  ')'  expected	20	None	replace
41	[BUG]  [BUGGY]  int  lB  =  Math.min(uB.length,  2);  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  lB  =  Math.min(uB.length,  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  lB  =  Math.min(uB.length,  2);	  int    lB    =    Math.min(lB.length,    2);    	non-compiled	[CE]  ')'  expected	18	None	replace
42	[BUG]  [BUGGY]  int  uB  =  getFixedBounds(lB,  0);  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFixedBounds(lB,  0);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFixedBounds(lB,  0);	  int    uB    =    getFixedBounds(lB);    	non-compiled	[CE]  ')'  expected	23	None	replace
43	[BUG]  [BUGGY]  double  uB  =  getLowerBounds();  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  uB  =  getLowerBounds();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	double  uB  =  getLowerBounds();	  double    uB    =    getFiniteBounds();    	non-compiled	[CE]  ')'  expected	26	None	replace
44	[BUG]  [BUGGY]  int  uB  =  getFiteBounds(lB,  2);  [CE]  ')'  expected  [FE]                  java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  int  uB  =  getFiteBounds(lB,  2);  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	int  uB  =  getFiteBounds(lB,  2);	  int    uB    =    getFiniteBounds(lB,    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
45	[BUG]  [BUGGY]  double  uB  =  getInfiniteBounds();  [CE]  ')'  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  double  uB  =  getInfiniteBounds();  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	double  uB  =  getInfiniteBounds();	  int    uB    =    getInfiniteBounds();    	non-compiled	[CE]  ')'  expected	6	None	replace
46	[BUG]  [BUGGY]  safeThan  <  Math.max(0,  Math.min(1,  lB.length)));  [CE]  ')'  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  safeThan  <  Math.max(0,  Math.min(1,  lB.length)));  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	safeThan  <  Math.max(0,  Math.min(1,  lB.length)));	  safeThan    <    Math.max(0,    Math.min(1,    boundaries.length)));    	non-compiled	[CE]  ')'  expected	13	None	replace
47	[BUG]  [BUGGY]  if(hasInfiniteBounds)  {  ptrts[0]  =  lB;  boundaries[1]  =  uB;  }  [CE]  ')'  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      if  (hasInfiniteBounds)  {    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];      [BUGGY]  if(hasInfiniteBounds)  {  ptrts[0]  =  lB;  boundaries[1]  =  uB;  }  [BUGGY]      boundaries[0]  =  lB;  boundaries[1]  =  uB;  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math19/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5	536	536	1	replace	if(hasInfiniteBounds)  {  ptrts[0]  =  lB;  boundaries[1]  =  uB;  }	  pătrts[0]    =    lB;    boundaries[1]    =    uB;    	non-compiled	[CE]  ')'  expected	25	None	replace
