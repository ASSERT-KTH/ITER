bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  gcd  =  denominator.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  denominator.numerator();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  denominator.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	94	None	replace
2	[BUG]  [BUGGY]  gcd  =  numerator.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  numerator.numerator();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  numerator.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	94	None	replace
3	[BUG]  [BUGGY]  gcd  =  num.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.numerator();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	94	None	replace
4	[BUG]  [BUGGY]  BigInteger  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  num  =  num.multiply(gcd);	  num    =    num.multiply(gcd);    BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	73	None	replace
5	[BUG]  [BUGGY]  BigInteger  num  =  gcd.multiply(num);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  num  =  gcd.multiply(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  num  =  gcd.multiply(num);	  num    =    num.multiply(gcd);    BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	73	None	replace
6	[BUG]  [BUGGY]  BigInteger  num  =  numerator.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  num  =  numerator.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  num  =  numerator.multiply(gcd);	  num    =    num.multiply(gcd);    BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	73	None	replace
7	[BUG]  [BUGGY]  gcd  =  des.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  des.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  des.negate();	  gcd    =    numerator.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	50	None	replace
8	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  den  =  numerator.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd);  den  =  numerator.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd);  den  =  numerator.divide(gcd);	  num    =    denominator.divide(gcd);    den    =    numerator.divide(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	5	None	replace
9	[BUG]  [BUGGY]  num  =  gcd.divide(denominator);  den  =  numerator.divide(gcd);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(denominator);  den  =  numerator.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(denominator);  den  =  numerator.divide(gcd);	  num    =    denominator.divide(gcd);    den    =    numerator.divide(gcd);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	5	None	replace
10	[BUG]  [BUGGY]  num  =  gcd.divide(den);  den  =  numerator.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(den);  den  =  numerator.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(den);  den  =  numerator.divide(gcd);	  num    =    denominator.divide(gcd);    den    =    numerator.divide(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	5	None	replace
11	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  den  =  Den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    Den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	61	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  gcd.divide(gcd);	  num    =    gcd.negate();    	compilable	  [FE]  AssertionError  	34	11	replace
13	[BUG]  [BUGGY]  num  =  gcd.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(gcd);	  num    =    gcd.negate();    	compilable	  [FE]  AssertionError  	34	11	replace
14	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    4,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
15	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    4,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
16	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  den);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  den);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    4,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num        =        num.negate();        num    =    num.negate();    num  =  num.negate();  num  =  num.negate();	  	compilable	  [FE]  AssertionError  	6	2	add
18	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  num.negate();  num  =  num.negate();	  	compilable	  [FE]  AssertionError  	6	2	add
19	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.egate();  num  =  num.negate();  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.egate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  num.egate();  num  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
20	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  int  num  =  num.negate();  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  int  num  =  num.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    int  num  =  num.negate();  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	6	None	add
21	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.megate();  num  =  num.negate();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.megate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  num.megate();  num  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
22	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.Negate();  num  =  num.negate();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.Negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  num.Negate();  num  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
23	[BUG]  [BUGGY]  num  =  num.doubleValue();  den  =  den.divide(gcd);  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.doubleValue();  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.doubleValue();  den  =  den.divide(gcd);	  num    =    gcd.divide(num);    den    =    den.divide(gcd);    	non-compiled	[CE]  incompatible  types	28	None	replace
24	[BUG]  [BUGGY]  num  =  gcd.hashCode();  den  =  den.divide(gcd);  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.hashCode();  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.hashCode();  den  =  den.divide(gcd);	  num    =    gcd.divide(num);    den    =    den.divide(gcd);    	non-compiled	[CE]  incompatible  types	28	None	replace
25	[BUG]  [BUGGY]  gcd  =  BigInteger.getBigInteger(0);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  BigInteger.getBigInteger(0);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  BigInteger.getBigInteger(0);	  gcd    =    BigInteger.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	79	None	replace
26	[BUG]  [BUGGY]  gcd  =  BigInteger.getBigInteger(1);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  BigInteger.getBigInteger(1);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  BigInteger.getBigInteger(1);	  gcd    =    BigInteger.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	79	None	replace
27	[BUG]  [BUGGY]  BigInteger  den  =  gcd.divide(den);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  gcd.divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  gcd.divide(den);	  BigInteger    den    =    gcd.divide(numerator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	14	None	replace
28	[BUG]  [BUGGY]  BigInteger  den  =  gcd.divide(numerator,  denominator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  gcd.divide(numerator,  denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  gcd.divide(numerator,  denominator);	  BigInteger    den    =    gcd.divide(numerator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	14	None	replace
29	[BUG]  [BUGGY]  BigInteger  den  =  gcd.divide(denominator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  gcd.divide(denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  gcd.divide(denominator);	  BigInteger    den    =    gcd.divide(numerator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	14	None	replace
30	[BUG]  [BUGGY]  num  =  denominator.multiply(gcd,  numerator);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.multiply(gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.multiply(gcd,  numerator);	  num    =    denominator.multiply(gcd);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	39	None	replace
31	[BUG]  [BUGGY]  num  =  denominator.multiply(gcd,  gcd);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.multiply(gcd,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.multiply(gcd,  gcd);	  num    =    denominator.multiply(gcd);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	39	None	replace
32	[BUG]  [BUGGY]  gcd  =  numerator.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  numerator.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  numerator.divide(gcd);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	3	None	replace
33	[BUG]  [BUGGY]  gcd  =  denominator.divide(gcd,  numerator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  denominator.divide(gcd,  numerator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  denominator.divide(gcd,  numerator);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	3	None	replace
34	[BUG]  [BUGGY]  BigInteger  den  =  denominator.divide(gcd,  numerator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  denominator.divide(gcd,  numerator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  denominator.divide(gcd,  numerator);	  BigInteger    den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	replace
35	[BUG]  [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  num);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  numerator.divide(gcd,  num);	  BigInteger    den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	replace
36	[BUG]  [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  0);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  0);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  numerator.divide(gcd,  0);	  BigInteger    den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	replace
37	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  num);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  num);	  num    =    numerator.divide(gcd,    num);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	54	None	replace
38	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  gcd,  denominator);	  num    =    numerator.divide(gcd,    num);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	54	None	replace
39	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  num,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  num,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  num,  denominator);	  num    =    numerator.divide(gcd,    num);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	54	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  gcd.divide(num);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	compilable	  [FE]  AssertionError  	19	10	replace
41	[BUG]  [BUGGY]  num  =  gcd.divide(num);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	compilable	  [FE]  AssertionError  	19	10	replace
42	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
43	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
44	[BUG]  [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.parse(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(numerator);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
45	[BUG]  [BUGGY]  num  =  num.doubleValue();  den  =  den.doubleValue();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.doubleValue();  den  =  den.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.doubleValue();  den  =  den.doubleValue();	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  incompatible  types	57	None	replace
46	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gcd.getValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gcd.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	81	None	replace
47	[BUG]  [BUGGY]  gcd  =  num.getValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.getValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	81	None	replace
48	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  numerator);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd,  numerator);	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	23	None	replace
49	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd));  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd));	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd));    	non-compiled	[CE]  ';'  expected	25	None	replace
50	[BUG]  [BUGGY]  BigInteger  den  =  numerator.divide(num);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  numerator.divide(num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  numerator.divide(num);	  BigInteger    den    =    num.divide(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	71	None	replace
51	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    2,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
52	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    2,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
53	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  den);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  den);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    2,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
54	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator);  den  =  den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  numerator);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  numerator);  den  =  den.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	32	None	replace
55	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  num);  den  =  den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  num);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  num);  den  =  den.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	32	None	replace
56	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator,  den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator,  den);	  num    =    num.divide(gcd,    denominator);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	32	None	replace
57	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  den  =  den.divide(gcd,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator);  den  =  den.divide(gcd,  numerator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator);  den  =  den.divide(gcd,  numerator);	  num    =    num.divide(gcd,    denominator);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	32	None	replace
58	[BUG]  [BUGGY]  gcd  =  gcd.divide(n);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.divide(n);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.divide(n);	  gcd    =    n.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	72	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  num.multiply(gcd);  den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
60	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  num.divide(gcd);  den  =  den.multiply(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
62	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  den  =  den.multiply(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
64	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
65	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.enegate();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.enegate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.enegate();	  num    =    num.negate();    num    =    num.enegate();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
66	[BUG]  [BUGGY]  num  =  numerator.negate();  num  =  num.enegate();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate();  num  =  num.enegate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate();  num  =  num.enegate();	  num    =    num.negate();    num    =    num.enegate();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
67	[BUG]  [BUGGY]  num  =  n.negate();  num  =  num.enegate();  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  n.negate();  num  =  num.enegate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  n.negate();  num  =  num.enegate();	  num    =    num.negate();    num    =    num.enegate();    	non-compiled	[CE]  cannot  find  symbol  n	9	None	replace
68	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
69	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
70	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  bigInteger.ZERO);  [CE]  cannot  find  symbol  bigInteger  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  bigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  bigInteger.ZERO);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  cannot  find  symbol  bigInteger	76	None	replace
71	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  den);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  den);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
72	[BUG]  [BUGGY]  gcd  =  num.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.divide(den);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
73	[BUG]  [BUGGY]  gcd  =  gcd.divide(num);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.divide(num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.divide(num);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
74	[BUG]  [BUGGY]  gcd  =  gcd.divide(numerator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.divide(numerator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.divide(numerator);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
75	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  num  =  num.Divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
76	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.Divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
77	[BUG]  [BUGGY]  num  =  gcd.multiply(num)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num)+  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num)+  1;	  num    =    num.multiply(gcd)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	80	None	replace
78	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd)+  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd)+  1;	  num    =    num.multiply(gcd)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	80	None	replace
79	[BUG]  [BUGGY]  num  =  num.multiply(gcd)+  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd)+  2;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd)+  2;	  num    =    num.multiply(gcd)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	80	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	22	11	add
81	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	22	11	add
82	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
83	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  n.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  n  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  n.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  n.multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  n	22	None	add
84	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
85	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  numerator(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  numerator(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  numerator(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
86	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(0);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(0);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gcd.getBigInteger(0);	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	40	None	replace
87	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  numerator.getBigInteger();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  numerator.getBigInteger();	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	40	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	56	12	add
89	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	56	12	add
90	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  Den  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	56	None	add
91	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  der.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	56	None	add
92	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  der  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	56	None	add
93	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  des.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  des.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  des	56	None	add
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	95	2	add
95	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	95	2	add
96	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  Den	95	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	95	2	add
98	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	95	2	add
99	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  der	95	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num    =    gcd.divide(num);    den    =    den.divide(gcd);    num  =  gcd.divide(num);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	27	12	add
101	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.divide(num);    den    =    den.divide(gcd);    num  =  gcd.divide(num);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	27	12	add
102	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.divide(num);    den    =    den.divide(gcd);    num  =  gcd.divide(num);  Den  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	27	None	add
103	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.divide(num);    den    =    den.divide(gcd);    num  =  gcd.divide(num);  den  =  der.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	27	None	add
104	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.divide(num);    den    =    den.divide(gcd);    num  =  gcd.divide(num);  der  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	27	None	add
105	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  Den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  den.divide(gcd);  num  =  gcd.divide(num);  den  =  Den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.divide(num);    den    =    den.divide(gcd);    num  =  gcd.divide(num);  den  =  Den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	27	None	add
106	[BUG]  [BUGGY]  denominator  =  gcd.negate();  [CE]  variable  denominator  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  denominator  =  gcd.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	denominator  =  gcd.negate();	  gcd    =    denominator.negate();    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	83	None	replace
107	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	59	None	replace
108	[BUG]  [BUGGY]  num  =  gcd.divide(num);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	59	None	replace
109	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  den.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  den.divide(gcd);  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	compilable	  [FE]  AssertionError  	59	11	replace
110	[BUG]  [BUGGY]  num  =  den.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  den.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  den.divide(gcd);  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	compilable	  [FE]  AssertionError  	59	11	replace
111	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	87	11	add
112	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	87	11	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	87	11	add
114	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.multiply(gcd);	  	compilable	  [FE]  AssertionError  	87	11	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	87	12	add
116	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	87	12	add
117	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  Den  =  den.multiply(gcd);  [CE]  cannot  find  symbol  Den  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  Den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  Den  =  den.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	87	None	add
118	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.multiply(gcd);  [CE]  cannot  find  symbol  Den  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  Den  =  den.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	87	None	add
119	[BUG]  [BUGGY]  BigInteger  den  =  denominator.divide(gcd,  num);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  denominator.divide(gcd,  num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  denominator.divide(gcd,  num);	  BigInteger    den    =    num.divide(gcd,    numerator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	48	None	replace
120	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.egate();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.egate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.egate();	  num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
121	[BUG]  [BUGGY]  num  =  numerator.negate();  num  =  num.egate();  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate();  num  =  num.egate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate();  num  =  num.egate();	  num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
122	[BUG]  [BUGGY]  num  =  n.negate();  num  =  num.egate();  [CE]  cannot  find  symbol  n  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  n.negate();  num  =  num.egate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  n.negate();  num  =  num.egate();	  num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
123	[BUG]  [BUGGY]  num  =  denominator.divide(gcd);  den  =  des.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd);  den  =  des.divide(gcd);	  num    =    numerator.divide(gcd);    den    =    des.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	69	None	replace
124	[BUG]  [BUGGY]  num  =  gcd.divide(numerator);  den  =  des.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(numerator);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(numerator);  den  =  des.divide(gcd);	  num    =    numerator.divide(gcd);    den    =    des.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	69	None	replace
125	[BUG]  [BUGGY]  num  =  des.divide(gcd);  den  =  numerator.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  des.divide(gcd);  den  =  numerator.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  des.divide(gcd);  den  =  numerator.divide(gcd);	  num    =    numerator.divide(gcd);    den    =    des.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	69	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd);	  	compilable	  [FE]  AssertionError  	64	11	add
127	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd);	  	compilable	  [FE]  AssertionError  	64	11	add
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(gcd);	  	compilable	  [FE]  AssertionError  	64	11	add
129	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd).divide(gcd);	  	compilable	  [FE]  AssertionError  	64	11	add
130	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd).divide(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiide(gcd).divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
131	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd;  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd).divide(gcd;	  	non-compiled	[CE]  ')'  expected	64	None	add
132	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  n.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [CE]  cannot  find  symbol  n  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  n.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  n.divide(gcd);  num  =  num.divide(gcd).divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  n	64	None	add
133	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    numerator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	78	None	replace
134	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    numerator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	78	None	replace
135	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    numerator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	78	None	replace
136	[BUG]  [BUGGY]  gcd  =  gen.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gen.divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gen.divide(den);	  gcd    =    gen.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
137	[BUG]  [BUGGY]  gcd  =  gcd.divide(gen);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.divide(gen);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.divide(gen);	  gcd    =    gen.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
138	[BUG]  [BUGGY]  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  der  =  den.divide(gcd);	  if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  cannot  find  symbol  der	96	None	replace
139	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	75	None	replace
140	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  den);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  den);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	75	None	replace
141	[BUG]  [BUGGY]  num  =  numerator.divide(numerator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(numerator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(numerator,  gcd);	  num    =    num.divide(numerator,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	89	None	replace
142	[BUG]  [BUGGY]  num  =  denominator.divide(numerator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(numerator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(numerator,  gcd);	  num    =    num.divide(numerator,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	89	None	replace
143	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  gcd);	  num    =    denominator.divide(gcd,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	62	None	replace
144	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  gcd,  den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  gcd,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  gcd,  den);	  num    =    denominator.divide(gcd,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	62	None	replace
145	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  gcd,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  gcd,  numerator);	  num    =    denominator.divide(gcd,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	62	None	replace
146	[BUG]  [BUGGY]  BigInteger  den  =  denominator.divide(gcd,  0);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  denominator.divide(gcd,  0);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  denominator.divide(gcd,  0);	  BigInteger    den    =    denominator.divide(gcd);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	12	None	replace
147	[BUG]  [BUGGY]  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  Den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	58	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	15	11	add
149	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	15	11	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	15	11	add
151	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	15	11	add
152	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.parse(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
153	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.category(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.category(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.category(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
154	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
155	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.doubleValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gcd.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gcd.doubleValue();	  gcd    =    gcd.doubleValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	93	None	replace
156	[BUG]  [BUGGY]  gcd  =  num.doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.doubleValue();	  gcd    =    gcd.doubleValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	93	None	replace
157	[BUG]  [BUGGY]  gcd  =  numerator.doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  numerator.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  numerator.doubleValue();	  gcd    =    gcd.doubleValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	93	None	replace
158	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.dote(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  num  =  num.dote(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  num  =  num.dote(gcd);	          num    =    num.divide(gcd);    num    =    num.dote(gcd);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
159	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.dote(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.dote(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd);  num  =  num.dote(gcd);	          num    =    num.divide(gcd);    num    =    num.dote(gcd);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
160	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.dote(gcd);  [CE]  cannot  find  symbol  gen  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.dote(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gen.divide(gcd);  num  =  num.dote(gcd);	          num    =    num.divide(gcd);    num    =    num.dote(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	97	None	replace
161	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num    =    gcd.negate();    num  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	33	11	add
162	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	33	11	add
163	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	add
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num    =    gcd.negate();    num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	33	12	add
165	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	33	12	add
166	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  gcd.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  gcd.negate();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	add
167	[BUG]  [BUGGY]  BigInteger  gcd  =  gen.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gen.getBigInteger();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gen.getBigInteger();	  gcd    =    gen.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	92	None	replace
168	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator,  BigInteger.ZERO);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  numerator,  denominator,  BigInteger.ZERO);	  num    =    num.divide(gcd,    numerator,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	53	None	replace
169	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator,  den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  numerator,  denominator,  den);	  num    =    num.divide(gcd,    numerator,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	53	None	replace
170	[BUG]  [BUGGY]  num  =  denominator.negate();  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.negate();	  num    =    numerator.negate();    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	35	None	replace
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num    =    num.negate();    den    =    den.divide(gcd);    num  =  num.negate();  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	30	12	add
172	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    num.negate();    den    =    den.divide(gcd);    num  =  num.negate();  den  =  den.divide(gcd);	  	compilable	  [FE]  AssertionError  	30	12	add
173	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    num.negate();    den    =    den.divide(gcd);    num  =  num.negate();  Den  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	30	None	add
174	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    num.negate();    den    =    den.divide(gcd);    num  =  num.negate();  den  =  der.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	30	None	add
175	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    num.negate();    den    =    den.divide(gcd);    num  =  num.negate();  der  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	30	None	add
176	[BUG]  [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  die.divide(gcd);  [CE]  cannot  find  symbol  die  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  den.divide(gcd);  num  =  num.negate();  den  =  die.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    num.negate();    den    =    den.divide(gcd);    num  =  num.negate();  den  =  die.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  die	30	None	add
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  gcd.negate();  num  =  num.negate();	  num    =    num.negate();    num    =    num.negate();    	compilable	  [FE]  AssertionError  	7	11	replace
178	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();	  num    =    num.negate();    num    =    num.negate();    	compilable	  [FE]  AssertionError  	7	11	replace
179	[BUG]  [BUGGY]  num  =  numerator.negate();  num  =  num.negate();  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate();  num  =  num.negate();	  num    =    num.negate();    num    =    num.negate();    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	7	None	replace
180	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  num);  den  =  des.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  num);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  num);  den  =  des.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    des.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	68	None	replace
181	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator);  den  =  des.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  numerator);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  numerator);  den  =  des.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    des.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	68	None	replace
182	[BUG]  [BUGGY]  num  =  des.divide(gcd,  num);  [CE]  cannot  find  symbol  des  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  des.divide(gcd,  num);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  des.divide(gcd,  num);	  num    =    num.divide(gcd,    denominator);    den    =    des.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	68	None	replace
183	[BUG]  [BUGGY]  gcd  =  numerator.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  numerator.getBigInteger();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  numerator.getBigInteger();	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	41	None	replace
184	[BUG]  [BUGGY]  gcd  =  n.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  n.getBigInteger();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  n.getBigInteger();	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	41	None	replace
185	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  numerator.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  numerator.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	82	None	replace
186	[BUG]  [BUGGY]  BigInteger  gcd  =  num.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  num.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  num.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	82	None	replace
187	[BUG]  [BUGGY]  BigInteger  gcd  =  bigInteger.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  bigInteger.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  bigInteger.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	82	None	replace
188	[BUG]  [BUGGY]  BigInteger  den  =  gcd.divide(num,  denominator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  gcd.divide(num,  denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  gcd.divide(num,  denominator);	  BigInteger    den    =    gcd.divide(num);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	46	None	replace
189	[BUG]  [BUGGY]  BigInteger  den  =  gcd.divide(num,  numerator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  gcd.divide(num,  numerator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  gcd.divide(num,  numerator);	  BigInteger    den    =    gcd.divide(num);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	46	None	replace
190	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(0);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(0);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  num.getBigInteger(0);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	42	None	replace
191	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(1);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(1);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  num.getBigInteger(1);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	42	None	replace
192	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(den);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  num.getBigInteger(den);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	42	None	replace
193	[BUG]  [BUGGY]  num  =  gcd.divide(num);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  der  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	60	None	replace
194	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  MINUS_ONE);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  MINUS_ONE);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  MINUS_ONE);	  num    =    denominator.divide(gcd,    MINUS_ONE);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	67	None	replace
195	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  MINUS_ONE,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  MINUS_ONE,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  MINUS_ONE,  numerator);	  num    =    denominator.divide(gcd,    MINUS_ONE);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	67	None	replace
196	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  MINUS_ONE,  den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  MINUS_ONE,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  MINUS_ONE,  den);	  num    =    denominator.divide(gcd,    MINUS_ONE);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	67	None	replace
197	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  gcd,  MINUS_ONE);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  gcd,  MINUS_ONE);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  gcd,  MINUS_ONE);	  num    =    denominator.divide(gcd,    MINUS_ONE);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	67	None	replace
198	[BUG]  [BUGGY]  gcd  =  n.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  n.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  n.negate();	  gcd    =    num.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	49	None	replace
199	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(num,    0,    num,    0,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	77	None	replace
200	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(num,    0,    num,    0,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	77	None	replace
201	[BUG]  [BUGGY]  num  =  gcd.doubleValue();  [CE]  incompatible  types  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.doubleValue();	  num    =    num.doubleValue();    	non-compiled	[CE]  incompatible  types	36	None	replace
202	[BUG]  [BUGGY]  num  =  numerator.doubleValue();  [CE]  incompatible  types  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.doubleValue();	  num    =    num.doubleValue();    	non-compiled	[CE]  incompatible  types	36	None	replace
203	[BUG]  [BUGGY]  num  =  num.doubleValue()  +  1;  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.doubleValue()  +  1;  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.doubleValue()  +  1;	  num    =    num.doubleValue();    	non-compiled	[CE]  incompatible  types	36	None	replace
204	[BUG]  [BUGGY]  int  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  int  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	int  num  =  num.multiply(gcd);	  num    =    num.multiply(gcd);    int    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	24	None	replace
205	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  gcd.multiply(num);	  num    =    num.multiply(gcd);    int    num    =    num.multiply(gcd);    	compilable	  [FE]  AssertionError  	24	11	replace
206	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num);	  num    =    num.multiply(gcd);    int    num    =    num.multiply(gcd);    	compilable	  [FE]  AssertionError  	24	11	replace
207	[BUG]  [BUGGY]  num  =  num.negate();  den  =  numerator.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  numerator.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  den  =  numerator.divide(gcd);	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	31	None	replace
208	[BUG]  [BUGGY]  num  =  numerator.negate();  den  =  den.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate();  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate();  den  =  den.divide(gcd);	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	31	None	replace
209	[BUG]  [BUGGY]  num  =  gcd.multiply(num)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num)-  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num)-  1;	  num    =    num.multiply(gcd)-    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	84	None	replace
210	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd)-  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd)-  1;	  num    =    num.multiply(gcd)-    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	84	None	replace
211	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator)-  1;  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd,  denominator)-  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd,  denominator)-  1;	  num    =    num.multiply(gcd)-    1;    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	84	None	replace
212	[BUG]  [BUGGY]  num  =  gcd.negate();  int  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  int  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  int  num  =  num.negate();	  num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	8	None	replace
213	[BUG]  [BUGGY]  int  num  =  gcd.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  int  num  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	int  num  =  gcd.negate();	  num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	8	None	replace
214	[BUG]  [BUGGY]  num  =  numerator.negate();  int  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate();  int  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate();  int  num  =  num.negate();	  num    =    num.negate();    int    num    =    num.negate();    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	8	None	replace
215	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  ZERO,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  ZERO,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  ZERO,  denominator);	  num    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	43	None	replace
216	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num);  num  =  num.Multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.Multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
217	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd);  num  =  num.Multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.Multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
218	[BUG]  [BUGGY]  num  =  gen.multiply(gcd);  num  =  gen.Multiply(gcd);  [CE]  cannot  find  symbol  gen  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gen.multiply(gcd);  num  =  gen.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gen.multiply(gcd);  num  =  gen.Multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.Multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	26	None	replace
219	[BUG]  [BUGGY]  num  =  num.negate(gcd,  denominator);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate(gcd,  denominator);	  num    =    num.negate(gcd);    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	70	None	replace
220	[BUG]  [BUGGY]  num  =  num.negate(gcd,  numerator);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate(gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate(gcd,  numerator);	  num    =    num.negate(gcd);    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	70	None	replace
221	[BUG]  [BUGGY]  num  =  numerator.negate(gcd);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate(gcd);	  num    =    num.negate(gcd);    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	70	None	replace
222	[BUG]  [BUGGY]  num  =  num.negate(den,  gcd);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate(den,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate(den,  gcd);	  num    =    num.negate(gcd);    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	70	None	replace
223	[BUG]  [BUGGY]  num  =  gcd.divide(den);  den  =  des.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(den);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(den);  den  =  des.divide(gcd);	  num    =    gcd.divide(num);    den    =    des.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	29	None	replace
224	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  gcd.divide(den);	  num    =    gcd.divide(num);    den    =    des.divide(gcd);    	compilable	  [FE]  AssertionError  	29	11	replace
225	[BUG]  [BUGGY]  num  =  gcd.divide(den);  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(den);	  num    =    gcd.divide(num);    den    =    des.divide(gcd);    	compilable	  [FE]  AssertionError  	29	11	replace
226	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd,  denominator);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd,  denominator);	  num    =    numerator.multiply(gcd);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	37	None	replace
227	[BUG]  [BUGGY]  num  =  des.multiply(gcd);  [CE]  cannot  find  symbol  des  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  des.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  des.multiply(gcd);	  num    =    numerator.multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	37	None	replace
228	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
229	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(null);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(null);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(null);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
230	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(den);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(den);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
231	[BUG]  [BUGGY]  num  =  num.divide(num,  denominator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(num,  denominator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(num,  denominator,  gcd);	  num    =    num.divide(num,    gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	90	None	replace
232	[BUG]  [BUGGY]  num  =  num.divide(num,  numerator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(num,  numerator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(num,  numerator,  gcd);	  num    =    num.divide(num,    gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	90	None	replace
233	[BUG]  [BUGGY]  num  =  num.divide(num,  numerator,  gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(num,  numerator,  gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(num,  numerator,  gcd,  denominator);	  num    =    num.divide(num,    gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	90	None	replace
234	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator,  num);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  denominator,  num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  denominator,  num);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
235	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  num,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  num,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  num,  denominator);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
236	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator,  den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator,  numerator,  den);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
237	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  numerator,  denominator);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd,  numerator,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd,  numerator,  denominator);	  num    =    num.multiply(gcd,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger,BigInteger)	38	None	replace
238	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator,  numerator);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd,  denominator,  numerator);	  num    =    num.multiply(gcd,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger,BigInteger)	38	None	replace
239	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd,  num);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd,  num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd,  num);	  num    =    num.multiply(gcd,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	38	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	2	add
241	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	2	add
242	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	11	add
243	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	11	add
244	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.subtract(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	11	add
245	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.subtract(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	11	add
246	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.double(gcd);  num  =  num.multiply(gcd);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.double(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.double(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  <identifier>  expected	17	None	add
247	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
248	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  num.megate();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  num.megate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate();  num  =  num.megate();	  num    =    num.negate();    num    =    num.megate();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
249	[BUG]  [BUGGY]  num  =  numerator.negate();  num  =  num.megate();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.negate();  num  =  num.megate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.negate();  num  =  num.megate();	  num    =    num.negate();    num    =    num.megate();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
250	[BUG]  [BUGGY]  num  =  n.negate();  num  =  num.megate();  [CE]  cannot  find  symbol  n  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  n.negate();  num  =  num.megate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  n.negate();  num  =  num.megate();	  num    =    num.negate();    num    =    num.megate();    	non-compiled	[CE]  cannot  find  symbol  n	10	None	replace
251	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(BigInteger.ONE)  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(BigInteger.ONE)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  num  =  num.multiply(BigInteger.ONE)	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
252	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd)  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd)	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
253	[BUG]  [BUGGY]  gcd  =  denominator.hashCode();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  denominator.hashCode();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  denominator.hashCode();	  gcd    =    numerator.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	45	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(den);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  gcd.divide(den);  den  =  den.divide(gcd);	  num    =    denominator.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	91	11	replace
255	[BUG]  [BUGGY]  num  =  gcd.divide(den);  den  =  den.divide(gcd);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(den);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(den);  den  =  den.divide(gcd);	  num    =    denominator.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	91	11	replace
256	[BUG]  [BUGGY]  num  =  gcd.negate(den);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.negate(den);	  num    =    gcd.negate();    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
257	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  BigInteger  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  BigInteger  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    BigInteger  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	22	None	add
258	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  int  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  int  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    int  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	22	None	add
259	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
260	[BUG]  [BUGGY]  num  =  des.divide(gcd);  den  =  den.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  des.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  des.divide(gcd);  den  =  den.divide(gcd);	  num    =    numerator.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	4	None	replace
261	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)-  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  num  =  num.multiply(gcd)-  1;	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	25	None	replace
262	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)+  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  num  =  num.multiply(gcd)+  1;	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	25	None	replace
263	[BUG]  [BUGGY]  Numerator  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  Numerator  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	Numerator  num  =  num.divide(gcd);  den  =  den.divide(gcd);	  if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
264	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  >>  ';'  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  >>  ';'  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  >>  ';'	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
265	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  >=  ';'  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  >=  ';'  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  >=  ';'	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
266	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  [Delete]  ';'  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  [Delete]  ';'  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd);  num  =  num.multiply(gcd)  [Delete]  ';'	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
267	[BUG]  [BUGGY]  num  =  num.negate();  den  =  des.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  den  =  des.divide(gcd);	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	31	None	replace
268	[BUG]  [BUGGY]  num  =  num.negate();  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  den  =  der.divide(gcd);	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	31	None	replace
269	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  negate();  num  =  num.negate();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  negate();  num  =  num.negate();	  	non-compiled	[CE]  incompatible  types	6	None	add
270	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate()  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  num.negate();  num  =  num.negate()  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  num.negate();  num  =  num.negate()	  	non-compiled	[CE]  ';'  expected	6	None	add
271	[BUG]  [BUGGY]  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  des  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	60	None	replace
272	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  gen  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gen.divide(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	19	None	replace
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.gcd(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  num.gcd(den);	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	16	11	replace
274	[BUG]  [BUGGY]  num  =  num.gcd(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.gcd(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.gcd(den);	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	16	11	replace
275	[BUG]  [BUGGY]  BigInteger  gcd  =  gen.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gen.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gen.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	82	None	replace
276	[BUG]  [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  ZERO);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  ZERO);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  numerator.divide(gcd,  ZERO);	  BigInteger    den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	replace
277	[BUG]  [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  ONE_HUNDRED);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  ONE_HUNDRED);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  numerator.divide(gcd,  ONE_HUNDRED);	  BigInteger    den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	replace
278	[BUG]  [BUGGY]  num  =  numerator.divide(numerator,  gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(numerator,  gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(numerator,  gcd,  denominator);	  num    =    num.divide(numerator,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	89	None	replace
279	[BUG]  [BUGGY]  num  =  num.divide(den,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(den,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(den,  gcd);	  num    =    num.divide(numerator,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	89	None	replace
280	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.multiply(gcd);  [CE]  cannot  find  symbol  der  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.divide(gcd);  den  =  der.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.divide(gcd);  den  =  der.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	87	None	add
281	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator,  BigInteger.ONE);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator,  BigInteger.ONE);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  numerator,  denominator,  BigInteger.ONE);	  num    =    num.divide(gcd,    numerator,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	53	None	replace
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
283	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
285	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.multiply(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
286	[BUG]  [BUGGY]  gcd  =  Numerator.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  Numerator.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  Numerator.negate();	  gcd    =    denominator.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	83	None	replace
287	[BUG]  [BUGGY]  BigInteger  num  =  num.multiply(gcd,  denominator);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  num  =  num.multiply(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  num  =  num.multiply(gcd,  denominator);	  num    =    num.multiply(gcd);    BigInteger    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	73	None	replace
288	[BUG]  [BUGGY]  num  =  gcd.divide(denominator,  MINUS_ONE);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(denominator,  MINUS_ONE);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(denominator,  MINUS_ONE);	  num    =    denominator.divide(gcd,    MINUS_ONE);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	67	None	replace
289	[BUG]  [BUGGY]  gcd  =  gen.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gen.numerator();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gen.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	94	None	replace
290	[BUG]  [BUGGY]  gcd  =  gen.getValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gen.getValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gen.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	81	None	replace
291	[BUG]  [BUGGY]  gcd  =  num.divide(gcd,  denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.divide(gcd,  denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.divide(gcd,  denominator);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
292	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  Den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    Den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	61	None	replace
293	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	59	None	replace
294	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(0);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.getBigInteger(0);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.getBigInteger(0);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	41	None	replace
295	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(1);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  num.getBigInteger(1);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  num.getBigInteger(1);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	41	None	replace
296	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.translate(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.translate(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.translate(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
297	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).multiide(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd).multiide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd).multiide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
298	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	57	11	replace
299	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	57	11	replace
300	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	57	11	replace
301	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	57	11	replace
302	[BUG]  [BUGGY]  num  =  des.negate();  [CE]  cannot  find  symbol  des  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  des.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  des.negate();	  num    =    numerator.negate();    	non-compiled	[CE]  cannot  find  symbol  des	35	None	replace
303	[BUG]  [BUGGY]  num  =  num.divide(num,  gcd,  denominator,  BigInteger.ZERO);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(num,  gcd,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(num,  gcd,  denominator,  BigInteger.ZERO);	  num    =    num.divide(num,    gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	90	None	replace
304	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.indexOf(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
305	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);  [CE]  cannot  find  symbol  gen  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	20	None	replace
306	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  If(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  If(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    If(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	non-compiled	[CE]  ';'  expected	95	None	add
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  num.divide(gcd).divide(gcd);	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(gcd);    	compilable	  [FE]  AssertionError  	65	11	replace
308	[BUG]  [BUGGY]  num  =  num.divide(gcd).divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd).divide(gcd);	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(gcd);    	compilable	  [FE]  AssertionError  	65	11	replace
309	[BUG]  [BUGGY]  gcd  =  gen.doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gen.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gen.doubleValue();	  gcd    =    gcd.doubleValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	93	None	replace
310	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	33	None	add
311	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  this.num  =  gcd.negate();  [CE]  cannot  find  symbol  num  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  this.num  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  this.num  =  gcd.negate();	  	non-compiled	[CE]  cannot  find  symbol  num	33	None	add
312	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	33	None	add
313	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(den,  0,  num,  0,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(den,  0,  num,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  System.arraycopy(den,  0,  num,  0,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	33	None	add
314	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(1);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(1);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gcd.getBigInteger(1);	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	40	None	replace
315	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  BigInteger.ZERO);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  BigInteger.ZERO);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	75	None	replace
316	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  bigInteger.ZERO);  [CE]  cannot  find  symbol  bigInteger  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  bigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  bigInteger.ZERO);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    denominator);    	non-compiled	[CE]  cannot  find  symbol  bigInteger	75	None	replace
317	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  denominator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  denominator,  gcd);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
318	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator,  BigInteger.ZERO);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator,  numerator,  BigInteger.ZERO);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
319	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  BigInteger.ZERO);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  BigInteger.ZERO);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    4,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
320	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  den);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  den);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    4,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	85	None	replace
321	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  deserator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  deserator);	  num    =    numerator.divide(gcd,    num);    	non-compiled	[CE]  cannot  find  symbol  deserator	54	None	replace
322	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator,  gcd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator,  gcd);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(num,    0,    num,    0,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	77	None	replace
323	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator);  den  =  des.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  denominator);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  denominator);  den  =  des.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    des.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	68	None	replace
324	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator);  den  =  den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  denominator);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  denominator);  den  =  den.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	32	None	replace
325	[BUG]  [BUGGY]  num  =  deserator.multiply(gcd);  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  deserator.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  deserator.multiply(gcd);	  num    =    denominator.multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  deserator	39	None	replace
326	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator);  num  =  num.multiply(gcd);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd,  denominator);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd,  denominator);  num  =  num.multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	23	None	replace
327	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	23	None	replace
328	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  BigInteger.ZERO);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  BigInteger.ZERO);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
329	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  BigInteger.ONE);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  BigInteger.ONE);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  BigInteger.ONE);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	76	None	replace
330	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  bigInteger);  [CE]  cannot  find  symbol  bigInteger  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  bigInteger);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator,  bigInteger);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    1,    denominator);    	non-compiled	[CE]  cannot  find  symbol  bigInteger	76	None	replace
331	[BUG]  [BUGGY]  BigInteger  den  =  num.multiply(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  num.multiply(gcd);	  BigInteger    den    =    num.divide(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	71	None	replace
332	[BUG]  [BUGGY]  num  =  gcd.divide(denominator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.divide(denominator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.divide(denominator,  gcd);	  num    =    denominator.divide(gcd,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	62	None	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	15	11	add
334	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	15	11	add
335	[BUG]  [BUGGY]  num  =  num.negate(den);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate(den);	  num    =    num.negate(gcd);    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	70	None	replace
336	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  BigInteger.ZERO);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  BigInteger.ZERO);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    2,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
337	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  den);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  den);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    2,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
338	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  BigInteger.ONE);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  BigInteger.ONE);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator,  BigInteger.ONE);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    2,    denominator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	86	None	replace
339	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(gcd))  {  num  =  gcd.divide(num);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den.equals(gcd))  {  num  =  gcd.divide(num);  den  =  den.divide(gcd);  }	  num    =    gcd.divide(num);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	28	11	replace
340	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  gcd.divide(num);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(gcd))  {  num  =  gcd.divide(num);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(gcd))  {  num  =  gcd.divide(num);  den  =  den.divide(gcd);  }	  num    =    gcd.divide(num);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	28	11	replace
341	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
342	[BUG]  [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.multiply(gcd);        num    =    num.multiply(gcd);    num  =  numerator.multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	22	None	add
343	[BUG]  [BUGGY]  gcd  =  gcd.getKey();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.getKey();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.getKey();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	81	None	replace
344	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  bigInteger);  [CE]  cannot  find  symbol  bigInteger  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  bigInteger);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator,  bigInteger);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    4,    denominator);    	non-compiled	[CE]  cannot  find  symbol  bigInteger	85	None	replace
345	[BUG]  [BUGGY]  num  =  num.multiply(numerator,  gcd);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(numerator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(numerator,  gcd);	  num    =    num.multiply(gcd,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	38	None	replace
346	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  n.negate();  num  =  num.negate();  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  n.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  n.negate();  num  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol  n	6	None	add
347	[BUG]  [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  numerator.negate();  num  =  num.negate();  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num    =    num.negate();    num  =  num.negate();  num  =  numerator.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num        =        num.negate();        num    =    num.negate();    num  =  numerator.negate();  num  =  num.negate();	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	6	None	add
348	[BUG]  [BUGGY]  num  =  num.hashCode();  num  =  num.negate();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.hashCode();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.hashCode();  num  =  num.negate();	  num    =    num.negate();    num    =    num.negate();    	non-compiled	[CE]  incompatible  types	7	None	replace
349	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  numerator.divide(gcd);  num  =  num.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  numerator.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  numerator.divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	15	None	add
350	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.numerator();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  gcd  =  gcd.numerator();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  gcd  =  gcd.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	94	None	replace
351	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  der  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	60	None	replace
352	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	60	None	replace
353	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  gen  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.Divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gen.divide(gcd);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	66	None	replace
354	[BUG]  [BUGGY]  if(num.negate())  {  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator);  }  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(num.negate())  {  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(num.negate())  {  num  =  num.negate();  num  =  num.negate();  System.arraycopy(num,  0,  num,  0,  denominator);  }	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(num,    0,    num,    0,    denominator);    	non-compiled	[CE]  incompatible  types	77	None	replace
355	[BUG]  [BUGGY]  gcd  =  g.doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  g.doubleValue();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  g.doubleValue();	  gcd    =    gcd.doubleValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	93	None	replace
356	[BUG]  [BUGGY]  num  =  num.multiply(gcd)+  denominator;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd)+  denominator;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd)+  denominator;	  num    =    num.multiply(gcd)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	80	None	replace
357	[BUG]  [BUGGY]  num  =  num.multiply(gcd)/  1;  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(gcd)/  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(gcd)/  1;	  num    =    num.multiply(gcd)+    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	80	None	replace
358	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	33	None	add
359	[BUG]  [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.negate();  num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num    =    gcd.negate();    num  =  gcd.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	33	None	add
360	[BUG]  [BUGGY]  gcd  =  m.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  m.getBigInteger();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  m.getBigInteger();	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	41	None	replace
361	[BUG]  [BUGGY]  gcd  =  gcd.divide(null);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.divide(null);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.divide(null);	  gcd    =    n.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	72	None	replace
362	[BUG]  [BUGGY]  num  =  deserator.negate();  [CE]  cannot  find  symbol  deserator  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  deserator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  deserator.negate();	  num    =    numerator.negate();    	non-compiled	[CE]  cannot  find  symbol  deserator	35	None	replace
363	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator,  BigInteger.ZERO);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd,  denominator,  BigInteger.ZERO);	  num    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	43	None	replace
364	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.parse(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
365	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.multiply(gcd)  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.multiply(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.multiply(gcd)	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
366	[BUG]  [BUGGY]  num  =  num.multiply(BigInteger.ONE);  num  =  num.multiply(gcd)  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.multiply(BigInteger.ONE);  num  =  num.multiply(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.multiply(BigInteger.ONE);  num  =  num.multiply(gcd)	  num    =    num.multiply(gcd);    num    =    num.multiply(gcd)    	non-compiled	[CE]  ';'  expected	74	None	replace
367	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.dote(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.dote(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(num);  num  =  num.dote(gcd);	          num    =    num.divide(gcd);    num    =    num.dote(gcd);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
368	[BUG]  [BUGGY]  gcd  =  deserator.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  deserator.negate();  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  deserator.negate();	  gcd    =    numerator.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	50	None	replace
369	[BUG]  [BUGGY]  gcd  =  numerator.negate(denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  numerator.negate(denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  numerator.negate(denominator);	  gcd    =    numerator.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	50	None	replace
370	[BUG]  [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  _denominator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  numerator.divide(gcd,  _denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  numerator.divide(gcd,  _denominator);	  BigInteger    den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	13	None	replace
371	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  type);  [CE]  cannot  find  symbol  type  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  type);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator,  type);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    denominator);    	non-compiled	[CE]  cannot  find  symbol  type	75	None	replace
372	[BUG]  [BUGGY]  int  num  =  numerator.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  int  num  =  numerator.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	int  num  =  numerator.multiply(gcd);	  num    =    num.multiply(gcd);    int    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	24	None	replace
373	[BUG]  [BUGGY]  num  =  num.divide(numerator,  gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(numerator,  gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(numerator,  gcd,  denominator);	  num    =    num.divide(num,    gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	90	None	replace
374	[BUG]  [BUGGY]  num  =  gen.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  gen  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gen.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gen.multiply(gcd);  num  =  num.Multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.Multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	26	None	replace
375	[BUG]  [BUGGY]  num  =  n.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  n  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  n.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  n.multiply(gcd);  num  =  num.Multiply(gcd);	  num    =    num.multiply(gcd);    num    =    num.Multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  n	26	None	replace
376	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  der  =  den.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  numerator.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  numerator.divide(gcd);  der  =  den.divide(gcd);	  num    =    denominator.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	91	None	replace
377	[BUG]  [BUGGY]  gcd  =  gcd.divide(denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  gcd  =  gcd.divide(denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	gcd  =  gcd.divide(denominator);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	3	None	replace
378	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	11	add
379	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	17	11	add
380	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  denominator.divide(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  denominator.divide(gcd,  denominator);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
381	[BUG]  [BUGGY]  num  =  num.divide(numerator,  denominator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(numerator,  denominator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(numerator,  denominator,  gcd);	  num    =    num.divide(gcd,    denominator,    numerator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	55	None	replace
382	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd).divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	num  =  num.divide(gcd).divide(den);	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(gcd);    	compilable	  [FE]  AssertionError  	65	11	replace
383	[BUG]  [BUGGY]  num  =  num.divide(gcd).divide(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd).divide(den);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd).divide(den);	          num    =    num.divide(gcd);    num    =    num.divide(gcd).divide(gcd);    	compilable	  [FE]  AssertionError  	65	11	replace
384	[BUG]  [BUGGY]  BigInteger  den  =  num.divide(numerator,  denominator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  BigInteger  den  =  num.divide(numerator,  denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	BigInteger  den  =  num.divide(numerator,  denominator);	  BigInteger    den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	47	None	replace
385	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	58	None	replace
386	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  Den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	58	None	replace
387	[BUG]  [BUGGY]  num  =  num.negate();  num  =  gcd.egate();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  num  =  gcd.egate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  num  =  gcd.egate();	  num    =    num.negate();    num    =    num.egate();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
388	[BUG]  [BUGGY]  num  =  g.divide(num);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  g  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  g.divide(num);  num  =  num.indexOf(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  g.divide(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol  g	20	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
390	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.multiply(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	88	11	replace
391	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  numerator.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  numerator.divide(gcd);  num  =  num.divide(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  numerator.divide(gcd);  num  =  num.divide(gcd).divide(gcd);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	64	None	add
392	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(gcd);	  	compilable	  [FE]  AssertionError  	64	11	add
393	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd).divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd).divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd).divide(gcd);	  	compilable	  [FE]  AssertionError  	64	11	add
394	[BUG]  [BUGGY]  num  =  des.divide(gcd,  num);  den  =  des.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  des.divide(gcd,  num);  den  =  des.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  des.divide(gcd,  num);  den  =  des.divide(gcd);	  num    =    num.divide(gcd,    denominator);    den    =    des.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	68	None	replace
395	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	57	11	replace
396	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	57	11	replace
397	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd,  denominator);  num  =  num.divide(gcd);  den  =  den.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	57	None	replace
398	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(n.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(n.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(n.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  n	95	None	add
399	[BUG]  [BUGGY]  num  =  num.negate();  denominator  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  denominator  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  denominator  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  numerator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    numerator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	78	None	replace
400	[BUG]  [BUGGY]  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);	  num    =    num.negate();    num    =    num.negate();    System.arraycopy(gcd,    0,    num,    0,    numerator);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	78	None	replace
401	[BUG]  [BUGGY]  num  =  gcd.multiply(numerator)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.multiply(numerator)-  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.multiply(numerator)-  1;	  num    =    num.multiply(gcd)-    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	84	None	replace
402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den.equals(BigInteger.ONE))  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	31	11	replace
403	[BUG]  [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den.equals(BigInteger.ONE))  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den.equals(BigInteger.ONE))  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	31	11	replace
404	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	add	if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	31	11	replace
405	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	if(den  ==  null)  {  num  =  num.negate();  den  =  den.divide(gcd);  }	  num    =    num.negate();    den    =    den.divide(gcd);    	compilable	  [FE]  AssertionError  	31	11	replace
406	[BUG]  [BUGGY]  num  =  num.divide();  den  =  den.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide();  den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide();  den  =  den.divide(gcd);	  num    =    num.negate();    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	31	None	replace
407	[BUG]  [BUGGY]  num  =  gcd.hashCode();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  gcd.hashCode();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  gcd.hashCode();	  num    =    gcd.negate();    	non-compiled	[CE]  incompatible  types	34	None	replace
408	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  der.divide(gcd);	          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	59	None	replace
409	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  Den  =  den.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  Den  =  den.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  Den  =  den.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	87	None	add
410	[BUG]  [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  der.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]          num    =    num.divide(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  den.divide(gcd);  num  =  num.multiply(gcd);  den  =  der.divide(gcd);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	                num        =        num.divide(gcd);        den        =        den.divide(gcd);        num    =    num.multiply(gcd);    den    =    den.divide(gcd);    num  =  num.multiply(gcd);  den  =  der.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	87	None	add
411	[BUG]  [BUGGY]  num  =  den.divide(gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  den.divide(gcd,  denominator);  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  den.divide(gcd,  denominator);	  num    =    num.divide(gcd,    denominator);    den    =    den.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	32	None	replace
412	[BUG]  [BUGGY]  num  =  num.divide(denominator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {      [BUGGY]  num  =  num.divide(denominator,  gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	133	133	2	replace	num  =  num.divide(denominator,  gcd);	  num    =    num.divide(numerator,    gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	89	None	replace
