bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd)?)    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	94	11	replace
2	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd)?)    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	94	11	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  gcd.divide(den);	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	15	11	replace
4	[BUG]  [BUGGY]  num  =  gcd.divide(den);  [FE]  AssertionError  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(den);	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	15	11	replace
5	[BUG]  [BUGGY]  num  =  gcd.doubleValue();  [CE]  incompatible  types  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.doubleValue();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.doubleValue();	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	non-compiled	[CE]  incompatible  types	15	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  gcd.negate();	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	15	11	replace
7	[BUG]  [BUGGY]  num  =  gcd.negate();  [FE]  AssertionError  [FE]        ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.negate();	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	15	11	replace
8	[BUG]  [BUGGY]  num  =  gcd.hashCode();  [CE]  incompatible  types  [FE]          ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.hashCode();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.hashCode();	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	non-compiled	[CE]  incompatible  types	15	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd)||  den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(den.equals(gcd)||  den.equals(gcd))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    ==    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	111	11	replace
10	[BUG]  [BUGGY]  if(den.equals(gcd)||  den.equals(gcd))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd)||  den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd)||  den.equals(gcd))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    ==    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	111	11	replace
11	[BUG]  [BUGGY]  gcd  =  num.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.numerator();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	108	None	replace
12	[BUG]  [BUGGY]  gcd  =  denominator.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  denominator.numerator();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	108	None	replace
13	[BUG]  [BUGGY]  gcd  =  gen.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gen.numerator();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	108	None	replace
14	[BUG]  [BUGGY]  BigInteger  den  =  denominator.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  denominator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  denominator.negate();	  BigInteger    den    =    numerator.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	61	None	replace
15	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate(),  denominator;  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  numerator.negate(),  denominator;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  numerator.negate(),  denominator;	  BigInteger    den    =    numerator.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	61	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	7	11	replace
17	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	7	11	replace
18	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.gcd(den);    num  =  num.gcd(den);	  	compilable	  [FE]  AssertionError  	82	11	add
19	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    num  =  num.gcd(den);	  	compilable	  [FE]  AssertionError  	82	11	add
20	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(DEN);  [CE]  cannot  find  symbol  DEN  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(DEN);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    num  =  num.gcd(DEN);	  	non-compiled	[CE]  cannot  find  symbol  DEN	82	None	add
21	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    num  =  num.gcd(den;	  	non-compiled	[CE]  ')'  expected	82	None	add
22	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  num.gcd(den));  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    num  =  num.gcd(den));	  	non-compiled	[CE]  ';'  expected	82	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	42	11	add
24	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	42	11	add
25	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	42	11	add
26	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	42	11	add
27	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.parse(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
28	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.Divide(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.Divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.Divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
29	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
30	[BUG]  [BUGGY]  gcd  =  num.longValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.longValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.longValue();	  gcd    =    num.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	62	None	replace
31	[BUG]  [BUGGY]  den  =  num.divide(gcd);  gcd  =  gcd.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  gcd  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  gcd  =  gcd.divide(den);	  den    =    gcd.divide(den);    gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
32	[BUG]  [BUGGY]  den  =  num.divide(gcd);  gcd  =  num.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  gcd  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  gcd  =  num.divide(gcd);	  den    =    gcd.divide(den);    gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
33	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  den  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        gcd.divide(den);        den    =    gcd.divide(den);    den  =  gcd.divide(den);  den  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	10	27	add
34	[BUG]  [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  den  =  gcd.divide(den);  den  =  gcd.divide(den);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  den  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        den    =    gcd.divide(den);    den  =  gcd.divide(den);  den  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	10	27	add
35	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  num  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        gcd.divide(den);        den    =    gcd.divide(den);    num  =  gcd.divide(den);  den  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	10	27	add
36	[BUG]  [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  num  =  gcd.divide(den);  den  =  gcd.divide(den);  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  num  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        den    =    gcd.divide(den);    num  =  gcd.divide(den);  den  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	10	27	add
37	[BUG]  [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  gcd  =  gcd.divide(den);  den  =  gcd.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]        ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  gcd  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        den    =    gcd.divide(den);    gcd  =  gcd.divide(den);  den  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	10	None	add
38	[BUG]  [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  der  =  gcd.divide(den);  den  =  gcd.divide(den);  [CE]  cannot  find  symbol  der  [FE]          ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  der  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        den    =    gcd.divide(den);    der  =  gcd.divide(den);  den  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  der	10	None	add
39	[BUG]  [BUGGY]  num  =  num.getBigInteger();  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.getBigInteger();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.getBigInteger();	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
40	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(0);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.getBigInteger(0);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getBigInteger(0);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	16	None	replace
41	[BUG]  [BUGGY]  gcd  =  numerator.hashCode();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  numerator.hashCode();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  numerator.hashCode();	  gcd    =    gen.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	25	None	replace
42	[BUG]  [BUGGY]  gcd  =  numerator.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  numerator.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  numerator.divide(gcd);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	21	None	replace
43	[BUG]  [BUGGY]  gcd  =  denominator.divide(gcd,  num);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  denominator.divide(gcd,  num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.divide(gcd,  num);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	21	None	replace
44	[BUG]  [BUGGY]  gcd  =  num.getValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.getValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	86	None	replace
45	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.getValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	86	None	replace
46	[BUG]  [BUGGY]  gcd  =  gen.getValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gen.getValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	86	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	84	11	add
48	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	84	11	add
49	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	84	None	add
50	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd));  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd));  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd));	  	non-compiled	[CE]  ';'  expected	84	None	add
51	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  int  den  =  num.multiply(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  int  den  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    int  den  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	84	None	add
52	[BUG]  [BUGGY]  den  =  gcd.denominator(num);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.denominator(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.denominator(num);	  den    =    num.denominator(gcd);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
53	[BUG]  [BUGGY]  den  =  denominator.denominator(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  denominator.denominator(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  denominator.denominator(gcd);	  den    =    num.denominator(gcd);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
54	[BUG]  [BUGGY]  den  =  numerator.denominator(gcd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.denominator(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.denominator(gcd);	  den    =    num.denominator(gcd);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
55	[BUG]  [BUGGY]  denominator  =  gcd.denominator(num);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator  =  gcd.denominator(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator  =  gcd.denominator(num);	  den    =    num.denominator(gcd);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
56	[BUG]  [BUGGY]  gcd  =  num.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.divide(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.divide(den);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	20	None	replace
57	[BUG]  [BUGGY]  gcd  =  gcd.divide(num);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gcd.divide(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.divide(num);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	20	None	replace
58	[BUG]  [BUGGY]  gcd  =  n.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  n.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  n.divide(gcd);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	20	None	replace
59	[BUG]  [BUGGY]  den  =  num.hashCode(gcd);  [CE]  no  suitable  method  found  for  hashCode(BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.hashCode(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.hashCode(gcd);	  den    =    num.divide(den);    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(BigInteger)	80	None	replace
60	[BUG]  [BUGGY]  gcd  =  gen.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gen.divide(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.divide(den);	  gcd    =    gen.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	22	None	replace
61	[BUG]  [BUGGY]  gcd  =  gcd.divide(gen);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gcd.divide(gen);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.divide(gen);	  gcd    =    gen.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	22	None	replace
62	[BUG]  [BUGGY]  gcd  =  gcd.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gcd.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.divide(gcd);	  gcd    =    gen.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	22	None	replace
63	[BUG]  [BUGGY]  den  =  num.divide(gcd,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd,  numerator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  numerator);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
64	[BUG]  [BUGGY]  den  =  gcd.divide(num,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num,  denominator);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
65	[BUG]  [BUGGY]  den  =  num.divide(gcd,  denominator,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd,  denominator,  numerator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  denominator,  numerator);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
66	[BUG]  [BUGGY]  den  =  gcd.divide(numerator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(numerator,  gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(numerator,  gcd);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
67	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd)  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd);  num  =  num.divide(gcd)	          num    =    num.divide(gcd);    num    =    num.divide(gcd)    	non-compiled	[CE]  ';'  expected	90	None	replace
68	[BUG]  [BUGGY]  n  =  num.divide(gcd);  den  =  n.divide(gcd);  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  n  =  num.divide(gcd);  den  =  n.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	n  =  num.divide(gcd);  den  =  n.divide(gcd);	  den    =    num.divide(gcd);    den    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  n	50	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  num.gcd(den);  den  =  num.divide(gcd);	  den    =    num.divide(gcd);    den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	50	12	replace
70	[BUG]  [BUGGY]  num  =  num.gcd(den);  den  =  num.divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.gcd(den);  den  =  num.divide(gcd);	  den    =    num.divide(gcd);    den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	50	12	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    <    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	93	11	replace
72	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.compareTo(gcd)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    <    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	93	11	replace
73	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.negate();    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	55	2	add
74	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	55	2	add
75	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	add
76	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  <  0)  {  num  =  num.negate();  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	add
77	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  }  else  if(BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.divide(gcd);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  gcd.divide(num);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	compilable	  [FE]  AssertionError  	46	11	replace
79	[BUG]  [BUGGY]  num  =  gcd.divide(num);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	compilable	  [FE]  AssertionError  	46	11	replace
80	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
81	[BUG]  [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.parse(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(numerator);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
82	[BUG]  [BUGGY]  num  =  gcd.divide(num).parse(gcd);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num).parse(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num).parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(den))    {    num    =    num.negate();    }    if(num.equals(den))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	58	2	add
84	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    if(num.equals(den))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	58	2	add
85	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  If(num.equals(den))  {  num  =  num.negate();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  If(num.equals(den))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    If(num.equals(den))  {  num  =  num.negate();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
86	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  negate();  }  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    if(num.equals(den))  {  num  =  negate();  }	  	non-compiled	[CE]  incompatible  types	58	None	add
87	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  num.enegate();  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  num  =  num.enegate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    if(num.equals(den))  {  num  =  num.enegate();  }	  	non-compiled	[CE]  cannot  find  symbol	58	None	add
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  den  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    gcd.divide(num);    den  =  gcd.divide(num);	  	compilable	  [FE]  AssertionError  	26	12	add
89	[BUG]  [BUGGY]  den  =  gcd.divide(num);  den  =  gcd.divide(num);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  den  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(num);    den  =  gcd.divide(num);	  	compilable	  [FE]  AssertionError  	26	12	add
90	[BUG]  [BUGGY]  den  =  gcd.divide(num);  gcd  =  gcd.divide(num);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  gcd  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(num);    gcd  =  gcd.divide(num);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	26	None	add
91	[BUG]  [BUGGY]  den  =  gcd.divide(num);  der  =  gcd.divide(num);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  der  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(num);    der  =  gcd.divide(num);	  	non-compiled	[CE]  cannot  find  symbol  der	26	None	add
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  num  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    gcd.divide(num);    num  =  gcd.divide(num);	  	compilable	  [FE]  AssertionError  	26	12	add
93	[BUG]  [BUGGY]  den  =  gcd.divide(num);  num  =  gcd.divide(num);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  num  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(num);    num  =  gcd.divide(num);	  	compilable	  [FE]  AssertionError  	26	12	add
94	[BUG]  [BUGGY]  num  =  num.add(gcd,  denominator);  [CE]  no  suitable  method  found  for  add(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.add(gcd,  denominator);	  if(num.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  no  suitable  method  found  for  add(BigInteger,BigInteger)	33	None	replace
95	[BUG]  [BUGGY]  num  =  num.remove(gcd);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.remove(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.remove(gcd);	  if(num.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
96	[BUG]  [BUGGY]  num  =  numerator.add(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  numerator.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  numerator.add(gcd);	  if(num.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	33	None	replace
97	[BUG]  [BUGGY]  num  =  n.add(gcd);  [CE]  cannot  find  symbol  n  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  n.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  n.add(gcd);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    nu.add(gcd);    }    	non-compiled	[CE]  cannot  find  symbol  n	112	None	replace
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  den.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  den.add(gcd);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    nu.add(gcd);    }    	compilable	  [FE]  AssertionError  	112	11	replace
99	[BUG]  [BUGGY]  num  =  den.add(gcd);  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  den.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  den.add(gcd);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    nu.add(gcd);    }    	compilable	  [FE]  AssertionError  	112	11	replace
100	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.doubleValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.doubleValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.doubleValue();	  BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	97	None	replace
101	[BUG]  [BUGGY]  BigInteger  gcd  =  gen.intValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gen.intValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gen.intValue();	  BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	97	None	replace
102	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  numerator.getBigInteger();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  numerator.getBigInteger();	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	99	None	replace
103	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(0);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(0);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getBigInteger(0);	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	99	None	replace
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(num))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(den.equals(num))  {  num  =  num.negate();  }	  if(num.equals(den))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	59	11	replace
105	[BUG]  [BUGGY]  if(den.equals(num))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(num))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(num))  {  num  =  num.negate();  }	  if(num.equals(den))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	59	11	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den)||  num.equals(den))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(den)||  num.equals(den))  {  num  =  num.negate();  }	  if(num.equals(den))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	59	11	replace
107	[BUG]  [BUGGY]  if(num.equals(den)||  num.equals(den))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den)||  num.equals(den))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den)||  num.equals(den))  {  num  =  num.negate();  }	  if(num.equals(den))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	59	11	replace
108	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(0);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(0);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getBigInteger(0);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	17	None	replace
109	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(den);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getBigInteger(den);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	17	None	replace
110	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(1);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(1);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getBigInteger(1);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	17	None	replace
111	[BUG]  [BUGGY]  num  =  num.negate(gcd);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.negate(gcd);	  num    =    num.negate();    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	56	None	replace
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    den  =  num.divide(gcd);  den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	113	11	add
113	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    den  =  num.divide(gcd);  den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	113	11	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  den  =  num.multiply(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    den  =  num.multiply(gcd);  den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	113	11	add
115	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  den  =  num.multiply(gcd);  den  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  den  =  num.multiply(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    den  =  num.multiply(gcd);  den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	113	11	add
116	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  num  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    num  =  num.divide(gcd);  den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	113	12	add
117	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  num  =  num.divide(gcd);  den  =  num.multiply(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  num  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    num  =  num.divide(gcd);  den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	113	12	add
118	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  der  =  num.divide(gcd);  den  =  num.multiply(gcd);  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  der  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    der  =  num.divide(gcd);  den  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	113	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(BigInteger.ONE))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    <    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	101	11	replace
120	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(BigInteger.ONE))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    <    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	101	11	replace
121	[BUG]  [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	88	None	replace
122	[BUG]  [BUGGY]  if(num.equals(gcd)||  numerator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  numerator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  numerator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	88	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	88	11	replace
124	[BUG]  [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	88	11	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  gcd.gcd(den);	  den    =    num.gcd(den);    	compilable	  [FE]  AssertionError  	78	11	replace
126	[BUG]  [BUGGY]  den  =  gcd.gcd(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.gcd(den);	  den    =    num.gcd(den);    	compilable	  [FE]  AssertionError  	78	11	replace
127	[BUG]  [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.negate();    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	91	None	replace
128	[BUG]  [BUGGY]  denominator.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.negate();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	91	11	replace
130	[BUG]  [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	91	11	replace
131	[BUG]  [BUGGY]  denominator  =  gcd.denominator;  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator  =  gcd.denominator;  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator  =  gcd.denominator;	  den    =    gcd.denominator;    	non-compiled	[CE]  cannot  find  symbol  denominator	5	None	replace
132	[BUG]  [BUGGY]  der  =  gcd.denominator;  [CE]  cannot  find  symbol  der  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  der  =  gcd.denominator;  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	der  =  gcd.denominator;	  den    =    gcd.denominator;    	non-compiled	[CE]  cannot  find  symbol  der	5	None	replace
133	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate()  +  1;  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  gcd.negate()  +  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  gcd.negate()  +  1;	  BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	60	None	replace
134	[BUG]  [BUGGY]  BigInteger  gcd  =  gen.getIntValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gen.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gen.getIntValue();	  BigInteger    gcd    =    gcd.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	103	None	replace
135	[BUG]  [BUGGY]  BigInteger  gcd  =  n.getIntValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  n.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  n.getIntValue();	  BigInteger    gcd    =    gcd.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	103	None	replace
136	[BUG]  [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	87	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	87	11	replace
138	[BUG]  [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	87	11	replace
139	[BUG]  [BUGGY]  if(num.equals(gcd)||  numerator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [CE]  variable  numerator  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  numerator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  numerator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	87	None	replace
140	[BUG]  [BUGGY]  gcd  =  denominator.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  denominator.getBigInteger();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.getBigInteger();	  gcd    =    n.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	18	None	replace
141	[BUG]  [BUGGY]  BigInteger  gcd  =  num.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	105	None	replace
142	[BUG]  [BUGGY]  BigInteger  gcd  =  n.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  n.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  n.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	105	None	replace
143	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  numerator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  numerator.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	105	None	replace
144	[BUG]  [BUGGY]  gcd  =  n.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  n.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  n.negate();	  gcd    =    num.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	68	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	71	2	add
146	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	71	2	add
147	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  If(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  If(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    If(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	non-compiled	[CE]  ';'  expected	71	None	add
148	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(num.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(num.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	71	5	add
149	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(num.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(num.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(num.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	71	5	add
150	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  else  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  else  if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	71	5	add
151	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  else  if(den.equals(gcd))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  else  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  else  if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	71	5	add
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.add(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  gcd.add(den);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	compilable	  [FE]  AssertionError  	9	11	replace
153	[BUG]  [BUGGY]  num  =  gcd.add(den);  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.add(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.add(den);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	compilable	  [FE]  AssertionError  	9	11	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  num.add(den);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	compilable	  [FE]  AssertionError  	9	11	replace
155	[BUG]  [BUGGY]  num  =  num.add(den);  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.add(den);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	compilable	  [FE]  AssertionError  	9	11	replace
156	[BUG]  [BUGGY]  num  =  denominator.negate();  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  denominator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  denominator.negate();	  num    =    numerator.negate();    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	109	None	replace
157	[BUG]  [BUGGY]  num  =  des.negate();  [CE]  cannot  find  symbol  des  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  des.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  des.negate();	  num    =    numerator.negate();    	non-compiled	[CE]  cannot  find  symbol  des	109	None	replace
158	[BUG]  [BUGGY]  num  =  num.hashCode(gcd);  [CE]  no  suitable  method  found  for  hashCode(BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.hashCode(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.hashCode(gcd);	  num    =    num.gcd(den);    	non-compiled	[CE]  no  suitable  method  found  for  hashCode(BigInteger)	83	None	replace
159	[BUG]  [BUGGY]  num  =  num.doubleValue();  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.doubleValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.doubleValue();	  num    =    num.gcd(den);    	non-compiled	[CE]  incompatible  types	83	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  den  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.negate();    den  =  num.negate();	  	compilable	  [FE]  AssertionError  	35	12	add
161	[BUG]  [BUGGY]  den  =  num.negate();  den  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  den  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.negate();    den  =  num.negate();	  	compilable	  [FE]  AssertionError  	35	12	add
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  num  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.negate();    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	35	12	add
163	[BUG]  [BUGGY]  den  =  num.negate();  num  =  num.negate();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  num  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.negate();    num  =  num.negate();	  	compilable	  [FE]  AssertionError  	35	12	add
164	[BUG]  [BUGGY]  den  =  num.negate();  der  =  num.negate();  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  der  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.negate();    der  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol  der	35	None	add
165	[BUG]  [BUGGY]  den  =  num.negate();  des  =  num.negate();  [CE]  cannot  find  symbol  des  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  des  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.negate();    des  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol  des	35	None	add
166	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  numerator.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  numerator.multiply(gcd);	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	45	None	replace
167	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator);  [CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd,  denominator);	          num    =    num.divide(gcd);    num    =    num.multiply(gcd);    	non-compiled	[CE]  no  suitable  method  found  for  multiply(BigInteger,BigInteger)	45	None	replace
168	[BUG]  [BUGGY]  den  =  gcd.divide(num);  der  =  num.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  der  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num);  der  =  num.divide(gcd);	  den    =    num.divide(gcd);    der    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  der	51	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	32	2	add
170	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	32	2	add
171	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  If(num.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  If(num.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    If(num.equals(gcd))  {  num  =  num.add(gcd);  }	  	non-compiled	[CE]  ';'  expected	32	None	add
172	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.remove(gcd);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.remove(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  {  num  =  num.remove(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
173	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  num  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    num  =  num.add(gcd);	  	compilable	  [FE]  AssertionError  	32	11	add
174	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  num  =  num.add(gcd);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  num  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    num  =  num.add(gcd);	  	compilable	  [FE]  AssertionError  	32	11	add
175	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
176	[BUG]  [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(numerator);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
177	[BUG]  [BUGGY]  num  =  gcd.divide(num).differ(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num).differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num).differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
178	[BUG]  [BUGGY]  int  den  =  num.add(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  int  den  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	int  den  =  num.add(gcd);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int    den    =    num.add(gcd);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	102	None	replace
179	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  int  den  =  num.add(gcd);  }  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  int  den  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  int  den  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int    den    =    num.add(gcd);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	102	None	replace
180	[BUG]  [BUGGY]  BigInteger  gcd  =  num.doubleValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.doubleValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.doubleValue();	  BigInteger    gcd    =    num.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	63	None	replace
181	[BUG]  [BUGGY]  BigInteger  gcd  =  num.intValue()  +  1;  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.intValue()  +  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.intValue()  +  1;	  BigInteger    gcd    =    num.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	63	None	replace
182	[BUG]  [BUGGY]  den  =  denominator.negate();  [CE]  variable  denominator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  denominator.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  denominator.negate();	  den    =    num.negate();    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	36	None	replace
183	[BUG]  [BUGGY]  if(num.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	57	None	replace
184	[BUG]  [BUGGY]  den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  not  a  statement	57	None	replace
185	[BUG]  [BUGGY]  den.equals(gcd)||  numerator.equals(gcd))  {  num  =  num.negate();  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den.equals(gcd)||  numerator.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den.equals(gcd)||  numerator.equals(gcd))  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  not  a  statement	57	None	replace
186	[BUG]  [BUGGY]  gcd  =  numerator.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  numerator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  numerator.negate();	  gcd    =    gen.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	70	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	49	12	add
188	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);  den  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	49	12	add
189	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  der  =  num.divide(gcd);  den  =  num.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  der  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.divide(gcd);    der  =  num.divide(gcd);  den  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	49	None	add
190	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  Den  =  num.divide(gcd);  den  =  num.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  Den  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.divide(gcd);    Den  =  num.divide(gcd);  den  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	49	None	add
191	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	49	12	add
192	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  num.divide(gcd);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  num  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	49	12	add
193	[BUG]  [BUGGY]  gcd  =  num.size();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.size();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.size();	  gcd    =    num.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	23	None	replace
194	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
195	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(null);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(null);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(null);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
196	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(den);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.indexOf(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);  num  =  num.indexOf(den);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    If(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	8	11	replace
198	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    If(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	8	11	replace
199	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getIntValue()  +  1;  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.getIntValue()  +  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getIntValue()  +  1;	  BigInteger    gcd    =    num.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	40	None	replace
200	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getLongValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  num.getLongValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getLongValue();	  BigInteger    gcd    =    num.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	40	None	replace
201	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  numerator.divide(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  numerator.divide(gcd,  denominator);	  num    =    numerator.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	66	None	replace
202	[BUG]  [BUGGY]  num  =  desnominator.divide(gcd);  [CE]  cannot  find  symbol  desnominator  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  desnominator.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  desnominator.divide(gcd);	  num    =    numerator.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  desnominator	66	None	replace
203	[BUG]  [BUGGY]  den  =  gcd.negate(den);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.negate(den);	  den    =    gcd.negate();    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	3	None	replace
204	[BUG]  [BUGGY]  den  =  gcd.divide(num,den,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num,den,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num,den,  denominator);	  den    =    gcd.divide(den,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	1	None	replace
205	[BUG]  [BUGGY]  den  =  gcd.divide(numerator,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(numerator,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(numerator,  denominator);	  den    =    gcd.divide(den,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	1	None	replace
206	[BUG]  [BUGGY]  den  =  gcd.divide(num,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num,  deserator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num,  deserator);	  den    =    gcd.divide(den,    denominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	1	None	replace
207	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  num.negate(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  num.negate(gcd);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	75	None	replace
208	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  gcd.negate(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  gcd.negate(num);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	75	None	replace
209	[BUG]  [BUGGY]  BigInteger  den  =  n.negate(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  n.negate(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  n.negate(gcd);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	75	None	replace
210	[BUG]  [BUGGY]  Den  =  gcd.divide(den);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Den  =  gcd.divide(den);	  den    =    gcd.divide(den);    Den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  Den	92	None	replace
211	[BUG]  [BUGGY]  n  =  gcd.divide(den);  Den  =  gcd.divide(den);  [CE]  cannot  find  symbol  n  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  n  =  gcd.divide(den);  Den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	n  =  gcd.divide(den);  Den  =  gcd.divide(den);	  den    =    gcd.divide(den);    Den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  n	92	None	replace
212	[BUG]  [BUGGY]  gcd  =  gcd.divide(den);  Den  =  gcd.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gcd.divide(den);  Den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.divide(den);  Den  =  gcd.divide(den);	  den    =    gcd.divide(den);    Den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	92	None	replace
213	[BUG]  [BUGGY]  last  =  gcd.negate();  [CE]  cannot  find  symbol  last  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  last  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	last  =  gcd.negate();	  last    =    num.negate();    	non-compiled	[CE]  cannot  find  symbol  last	110	None	replace
214	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.Divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
215	[BUG]  [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(numerator);  num  =  num.Divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(numerator);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
216	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.Divide(gcd);  [CE]  cannot  find  symbol  gen  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.Divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gen.divide(gcd);  num  =  gen.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	47	None	replace
217	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  numerator);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
218	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  denominator,  numerator);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
219	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  num);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  numerator.divide(gcd,  num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  numerator.divide(gcd,  num);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
220	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd,  denominator,  den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  denominator,  den);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
221	[BUG]  [BUGGY]  n  =  gcd.divide(den);  [CE]  cannot  find  symbol  n  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  n  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	n  =  gcd.divide(den);	  den    =    gcd.divide(den);    den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  n	11	None	replace
222	[BUG]  [BUGGY]  der  =  gcd.divide(den);  [CE]  cannot  find  symbol  der  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  der  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	der  =  gcd.divide(den);	  den    =    gcd.divide(den);    der    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  der	13	None	replace
223	[BUG]  [BUGGY]  den  =  gcd.divide(den);  des  =  gcd.divide(den);  [CE]  cannot  find  symbol  des  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den);  des  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den);  des  =  gcd.divide(den);	  den    =    gcd.divide(den);    der    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  des	13	None	replace
224	[BUG]  [BUGGY]  num  =  gcd.divide(den);  der  =  gcd.divide(den);  [CE]  cannot  find  symbol  der  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(den);  der  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(den);  der  =  gcd.divide(den);	  den    =    gcd.divide(den);    der    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  der	13	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  den  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    gcd.negate();    den  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	2	11	add
226	[BUG]  [BUGGY]  den  =  gcd.negate();  den  =  gcd.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  den  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.negate();    den  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	2	11	add
227	[BUG]  [BUGGY]  den  =  gcd.negate();  gcd  =  gcd.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  gcd  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.negate();    gcd  =  gcd.negate();	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	add
228	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  num  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    gcd.negate();    num  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	2	11	add
229	[BUG]  [BUGGY]  den  =  gcd.negate();  num  =  gcd.negate();  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  num  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.negate();    num  =  gcd.negate();	  	compilable	  [FE]  AssertionError  	2	11	add
230	[BUG]  [BUGGY]  den  =  gcd.negate();  der  =  gcd.negate();  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  der  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.negate();    der  =  gcd.negate();	  	non-compiled	[CE]  cannot  find  symbol  der	2	None	add
231	[BUG]  [BUGGY]  num  =  num.getIntValue();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.getIntValue();	  gcd    =    num.getIntValue();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
232	[BUG]  [BUGGY]  gcd  =  num.getLongValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.getLongValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getLongValue();	  gcd    =    num.getIntValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	39	None	replace
233	[BUG]  [BUGGY]  den  =  numerator.divide(gcd,  num,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.divide(gcd,  num,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.divide(gcd,  num,  denominator);	  den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	28	None	replace
234	[BUG]  [BUGGY]  den  =  denominator.divide(gcd,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  denominator.divide(gcd,  numerator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  denominator.divide(gcd,  numerator);	  den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	28	None	replace
235	[BUG]  [BUGGY]  den  =  numerator.divide(gcd,  num);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.divide(gcd,  num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.divide(gcd,  num);	  den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	28	None	replace
236	[BUG]  [BUGGY]  den  =  denominator.denominator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  denominator.denominator();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  denominator.denominator();	  den    =    gcd.denominator();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
237	[BUG]  [BUGGY]  denominator  =  gcd.denominator();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator  =  gcd.denominator();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator  =  gcd.denominator();	  den    =    gcd.denominator();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
238	[BUG]  [BUGGY]  den  =  numerator.denominator();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.denominator();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.denominator();	  den    =    gcd.denominator();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  num.multiply(gcd);	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	compilable	  [FE]  AssertionError  	114	11	replace
240	[BUG]  [BUGGY]  den  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.multiply(gcd);	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	compilable	  [FE]  AssertionError  	114	11	replace
241	[BUG]  [BUGGY]  n  =  num.multiply(gcd);  [CE]  cannot  find  symbol  n  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  n  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	n  =  num.multiply(gcd);	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  n	114	None	replace
242	[BUG]  [BUGGY]  den  =  num.divide(gcd);  derenominator  =  num.divide(gcd);  [CE]  cannot  find  symbol  derenominator  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  derenominator  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  derenominator  =  num.divide(gcd);	  den    =    num.divide(gcd);    die    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  derenominator	96	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        num    =    num.divide(gcd);    den  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	52	12	add
244	[BUG]  [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        num    =    num.divide(gcd);    den  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	52	12	add
245	[BUG]  [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  der  =  num.divide(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  der  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        num    =    num.divide(gcd);    der  =  num.divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	52	None	add
246	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	52	12	add
247	[BUG]  [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	52	12	add
248	[BUG]  [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  Den  =  num.divide(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  Den  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        num    =    num.divide(gcd);    Den  =  num.divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	52	None	add
249	[BUG]  [BUGGY]  gcd  =  numerator.intValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  numerator.intValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  numerator.intValue();	  gcd    =    denominator.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	64	None	replace
250	[BUG]  [BUGGY]  denominator.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd))  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  ';'  expected	31	None	replace
251	[BUG]  [BUGGY]  denominator.equals(gcd)||  den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  den.equals(gcd))  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
252	[BUG]  [BUGGY]  denominator.equals(gcd)||  des.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  des.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  des.equals(gcd))  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
253	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	6	6	add
254	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	6	6	add
255	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	6	6	add
256	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	6	6	add
257	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  If(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  If(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    If(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	non-compiled	[CE]  ';'  expected	6	None	add
258	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(g  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(g  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(g	  	non-compiled	[CE]  ')'  expected	6	None	add
259	[BUG]  [BUGGY]  num  =  num.multiply(gcd)+  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd)+  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd)+  1;	  num    =    num.multiply(gcd);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	85	None	replace
260	[BUG]  [BUGGY]  num  =  num.multiply(gcd  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd  +  1);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd  +  1);	  num    =    num.multiply(gcd);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	85	None	replace
261	[BUG]  [BUGGY]  denominator  =  num.divide(gcd);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator  =  num.divide(gcd);	  derenominator    =    num.divide(gcd);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	107	None	replace
262	[BUG]  [BUGGY]  denominator  =  gcd.divide(num);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator  =  gcd.divide(num);	  derenominator    =    num.divide(gcd);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	107	None	replace
263	[BUG]  [BUGGY]  derenominator  =  gcd.divide(num);  [CE]  cannot  find  symbol  derenominator  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  derenominator  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	derenominator  =  gcd.divide(num);	  derenominator    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  derenominator	107	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	11	add
265	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	11	add
266	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	10	add
267	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	10	add
268	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.Multiply(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
269	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.subtract(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	11	add
270	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.subtract(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	11	add
271	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.double(gcd);  num  =  num.multiply(gcd);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.double(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.double(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  <identifier>  expected	44	None	add
272	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.add(gcd);    num  =  num.add(gcd);	  	compilable	  [FE]  AssertionError  	29	11	add
273	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd);	  	compilable	  [FE]  AssertionError  	29	11	add
274	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd).add(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.add(gcd);    num  =  num.add(gcd).add(den);	  	compilable	  [FE]  AssertionError  	29	11	add
275	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd).add(den);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd).add(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd).add(den);	  	compilable	  [FE]  AssertionError  	29	11	add
276	[BUG]  [BUGGY]  num  =  num.add(gcd);  int  num  =  num.add(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  int  num  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    int  num  =  num.add(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	29	None	add
277	[BUG]  [BUGGY]  num  =  num.add(gcd);  int  den  =  num.add(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  int  den  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    int  den  =  num.add(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	29	None	add
278	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd)  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd)	  	non-compiled	[CE]  ';'  expected	29	None	add
279	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  den  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        gcd.divide(den);        num    =    gcd.divide(den);    den  =  gcd.divide(den);  num  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	14	27	add
280	[BUG]  [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  den  =  gcd.divide(den);  num  =  gcd.divide(den);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  den  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        num    =    gcd.divide(den);    den  =  gcd.divide(den);  num  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	14	27	add
281	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  num  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        gcd.divide(den);        num    =    gcd.divide(den);    num  =  gcd.divide(den);  num  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	14	27	add
282	[BUG]  [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  num  =  gcd.divide(den);  num  =  gcd.divide(den);  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  num  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        num    =    gcd.divide(den);    num  =  gcd.divide(den);  num  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	14	27	add
283	[BUG]  [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  der  =  gcd.divide(den);  num  =  gcd.divide(den);  [CE]  cannot  find  symbol  der  [FE]        ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  der  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        num    =    gcd.divide(den);    der  =  gcd.divide(den);  num  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  der	14	None	add
284	[BUG]  [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  des  =  gcd.divide(den);  num  =  gcd.divide(den);  [CE]  cannot  find  symbol  des  [FE]          ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  des  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        num    =    gcd.divide(den);    des  =  gcd.divide(den);  num  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  des	14	None	add
285	[BUG]  [BUGGY]  num  =  num.hashCode();  [CE]  incompatible  types  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.hashCode();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.hashCode();	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	non-compiled	[CE]  incompatible  types	43	None	replace
286	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  den  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.divide(den);    den  =  num.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	79	27	add
287	[BUG]  [BUGGY]  den  =  num.divide(den);  den  =  num.divide(den);  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  den  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(den);    den  =  num.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	79	27	add
288	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  num  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.divide(den);    num  =  num.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	79	27	add
289	[BUG]  [BUGGY]  den  =  num.divide(den);  num  =  num.divide(den);  [FE]  ExceptionInInitializerError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  num  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(den);    num  =  num.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	79	27	add
290	[BUG]  [BUGGY]  den  =  num.divide(den);  der  =  num.divide(den);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  der  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(den);    der  =  num.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  der	79	None	add
291	[BUG]  [BUGGY]  den  =  num.divide(den);  Den  =  num.divide(den);  [CE]  cannot  find  symbol  Den  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  Den  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(den);    Den  =  num.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  Den	79	None	add
292	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.enegate();  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.enegate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd))  {  num  =  num.enegate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    {    num    =    num.enegate();    }    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
293	[BUG]  [BUGGY]  den  =  gcd.divide(den,  denominator  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den,  denominator  +  1);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den,  denominator  +  1);	  den    =    gcd.divide(den    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
294	[BUG]  [BUGGY]  den  =  gcd.divide(num,  gcd  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num,  gcd  +  1);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num,  gcd  +  1);	  den    =    gcd.divide(den    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
295	[BUG]  [BUGGY]  den  =  gcd.divide(den  +  1,  denominator);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den  +  1,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den  +  1,  denominator);	  den    =    gcd.divide(den    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
296	[BUG]  [BUGGY]  den  =  gcd.divide(num  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num  +  1);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num  +  1);	  den    =    gcd.divide(den    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
297	[BUG]  [BUGGY]  den  =  num.divide(gcd);  Den  =  num.divide(den);  [CE]  cannot  find  symbol  Den  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  Den  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  Den  =  num.divide(den);	  den    =    num.divide(gcd);    Den    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	54	None	replace
298	[BUG]  [BUGGY]  den  =  gcd.divide(num);  Den  =  num.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  Den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num);  Den  =  num.divide(gcd);	  den    =    num.divide(gcd);    Den    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	54	None	replace
299	[BUG]  [BUGGY]  Den  =  num.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Den  =  num.divide(gcd);	  den    =    num.divide(gcd);    Den    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	54	None	replace
300	[BUG]  [BUGGY]  den  =  num.divide(gcd,  denominator);  Den  =  num.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd,  denominator);  Den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  denominator);  Den  =  num.divide(gcd);	  den    =    num.divide(gcd);    Den    =    num.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	54	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  den  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.gcd(den);    den  =  num.gcd(den);	  	compilable	  [FE]  AssertionError  	77	11	add
302	[BUG]  [BUGGY]  den  =  num.gcd(den);  den  =  num.gcd(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  den  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.gcd(den);    den  =  num.gcd(den);	  	compilable	  [FE]  AssertionError  	77	11	add
303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  num  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.gcd(den);    num  =  num.gcd(den);	  	compilable	  [FE]  AssertionError  	77	12	add
304	[BUG]  [BUGGY]  den  =  num.gcd(den);  num  =  num.gcd(den);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  num  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.gcd(den);    num  =  num.gcd(den);	  	compilable	  [FE]  AssertionError  	77	12	add
305	[BUG]  [BUGGY]  den  =  num.gcd(den);  der  =  num.gcd(den);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  der  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.gcd(den);    der  =  num.gcd(den);	  	non-compiled	[CE]  cannot  find  symbol  der	77	None	add
306	[BUG]  [BUGGY]  den  =  num.gcd(den);  des  =  num.gcd(den);  [CE]  cannot  find  symbol  des  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  des  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.gcd(den);    des  =  num.gcd(den);	  	non-compiled	[CE]  cannot  find  symbol  des	77	None	add
307	[BUG]  [BUGGY]  gcd  =  des.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  des.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  des.negate();	  gcd    =    denominator.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	69	None	replace
308	[BUG]  [BUGGY]  denominator.equals(gcd))  {  num  =  num.negate();  }  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd))  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  ';'  expected	57	None	replace
309	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.remove(gcd);  }  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.remove(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.remove(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
310	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  while(num.equals(gcd))  {  num  =  num.remove(gcd);  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  while(num.equals(gcd))  {  num  =  num.remove(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd))  {  num  =  num.add(gcd);  }  while(num.equals(gcd))  {  num  =  num.remove(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
311	[BUG]  [BUGGY]  num  =  deserator.divide(gcd);  [CE]  cannot  find  symbol  deserator  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  deserator.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  deserator.divide(gcd);	  num    =    numerator.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  deserator	66	None	replace
312	[BUG]  [BUGGY]  gcd  =  num.divide(gcd,  denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.divide(gcd,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.divide(gcd,  denominator);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	20	None	replace
313	[BUG]  [BUGGY]  den  =  gcd.divide(den);  denominator  =  gcd.divide(den);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den);  denominator  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den);  denominator  =  gcd.divide(den);	  den    =    gcd.divide(den);    die    =    gcd.divide(den);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	104	None	replace
314	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(num)>  0)  {  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    If(den.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
315	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(gcd)>  0)  {  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    If(den.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
316	[BUG]  [BUGGY]  gcd  =  num.intValue()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.intValue()  +  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.intValue()  +  1;	  gcd    =    num.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	62	None	replace
317	[BUG]  [BUGGY]  den  =  des.denominator(gcd);  [CE]  cannot  find  symbol  des  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  des.denominator(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  des.denominator(gcd);	  den    =    num.denominator(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	37	None	replace
318	[BUG]  [BUGGY]  num  =  num.gcd(den  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den  +  1);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.gcd(den  +  1);	  num    =    num.gcd(den);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	83	None	replace
319	[BUG]  [BUGGY]  BigInteger  gcd  =  gen.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gen.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gen.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	105	None	replace
320	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(BigInteger.ONE))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	72	11	replace
321	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(BigInteger.ONE))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	72	11	replace
322	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	72	11	replace
323	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	72	11	replace
324	[BUG]  [BUGGY]  den  =  gcd.divide(number,  denominator);  [CE]  cannot  find  symbol  number  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(number,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(number,  denominator);	  den    =    gcd.divide(den,    denominator);    	non-compiled	[CE]  cannot  find  symbol  number	1	None	replace
325	[BUG]  [BUGGY]  den  =  gcd.divide(denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(denominator);	  den    =    gcd.divide(numerator);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	38	None	replace
326	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.multiply(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  gcd.multiply(den);	  den    =    gcd.divide(numerator);    	compilable	  [FE]  AssertionError  	38	11	replace
327	[BUG]  [BUGGY]  den  =  gcd.multiply(den);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.multiply(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.multiply(den);	  den    =    gcd.divide(numerator);    	compilable	  [FE]  AssertionError  	38	11	replace
328	[BUG]  [BUGGY]  den  =  num.divide(denominator,  gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(denominator,  gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(denominator,  gcd);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
329	[BUG]  [BUGGY]  den  =  num.divide(gcd,  0,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd,  0,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  0,  denominator);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
330	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  gen  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gen.divide(gcd);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	115	None	replace
331	[BUG]  [BUGGY]  num  =  g.divide(num);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  g  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  g.divide(num);  num  =  num.differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  g.divide(num);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol  g	115	None	replace
332	[BUG]  [BUGGY]  den  =  numerator.divide(gcd,  ONE_HUNDRED,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.divide(gcd,  ONE_HUNDRED,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.divide(gcd,  ONE_HUNDRED,  denominator);	  den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	28	None	replace
333	[BUG]  [BUGGY]  den  =  numerator.divide(gcd,  ZERO,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.divide(gcd,  ZERO,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.divide(gcd,  ZERO,  denominator);	  den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	28	None	replace
334	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigIntegerValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.getBigIntegerValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getBigIntegerValue();	  BigInteger    gcd    =    gcd.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	103	None	replace
335	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getLongValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.getLongValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getLongValue();	  BigInteger    gcd    =    gcd.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	103	None	replace
336	[BUG]  [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  die  =  num.divide(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  die  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        num    =    num.divide(gcd);    die  =  num.divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  die	52	None	add
337	[BUG]  [BUGGY]  num  =  gcd.subtract(num.negate(),  denominator);  [CE]  no  suitable  method  found  for  subtract(BigInteger,BigInteger)  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.subtract(num.negate(),  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.subtract(num.negate(),  denominator);	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	non-compiled	[CE]  no  suitable  method  found  for  subtract(BigInteger,BigInteger)	15	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.subtract(num.negate());  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  gcd.subtract(num.negate());	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	15	11	replace
339	[BUG]  [BUGGY]  num  =  gcd.subtract(num.negate());  [FE]  AssertionError  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.subtract(num.negate());  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.subtract(num.negate());	  den    =    gcd.divide(den);    num    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	15	11	replace
340	[BUG]  [BUGGY]  den  =  num.denominator();  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.denominator();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.denominator();	  den    =    gcd.denominator();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
341	[BUG]  [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  Den  =  gcd.divide(den);  num  =  gcd.divide(den);  [CE]  cannot  find  symbol  Den  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  Den  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        num    =    gcd.divide(den);    Den  =  gcd.divide(den);  num  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  Den	14	None	add
342	[BUG]  [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  die  =  gcd.divide(den);  num  =  gcd.divide(den);  [CE]  cannot  find  symbol  die  [FE]      ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    num  =  gcd.divide(den);  die  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        num    =    gcd.divide(den);    die  =  gcd.divide(den);  num  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  die	14	None	add
343	[BUG]  [BUGGY]  den  =  gcd.divide(den,  denominator);  Den  =  gcd.divide(den);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den,  denominator);  Den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den,  denominator);  Den  =  gcd.divide(den);	  den    =    gcd.divide(den);    Den    =    gcd.divide(den);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	92	None	replace
344	[BUG]  [BUGGY]  num  =  g.divide(num);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  g  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  g.divide(num);  num  =  num.parse(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  g.divide(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol  g	46	None	replace
345	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  numerator.negate(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  numerator.negate(gcd);	  BigInteger    den    =    numerator.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	61	None	replace
346	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  num.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  num.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    num.equals(gcd))  {  num  =  num.add(gcd);  }	  	non-compiled	[CE]  ';'  expected	32	None	add
347	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  ==  num  =  num.add(gcd);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  ==  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  ==  num  =  num.add(gcd);  }	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
348	[BUG]  [BUGGY]  den  =  num.divide(gcd);  denominator  =  num.divide(gcd);  [CE]  variable  denominator  might  already  have  been  assigned  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  denominator  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  denominator  =  num.divide(gcd);	  den    =    num.divide(gcd);    die    =    num.divide(gcd);    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	96	None	replace
349	[BUG]  [BUGGY]  deserator  =  num.divide(gcd);  [CE]  cannot  find  symbol  deserator  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  deserator  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	deserator  =  num.divide(gcd);	  derenominator    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  deserator	107	None	replace
350	[BUG]  [BUGGY]  den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
351	[BUG]  [BUGGY]  den.equals(gcd)||  numerator.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den.equals(gcd)||  numerator.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den.equals(gcd)||  numerator.equals(gcd))  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
352	[BUG]  [BUGGY]  den  =  num.divide(gcd,  denominator);  der  =  num.divide(gcd);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd,  denominator);  der  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  denominator);  der  =  num.divide(gcd);	  den    =    num.divide(gcd);    der    =    num.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	51	None	replace
353	[BUG]  [BUGGY]  den  =  num.divide(gcd);  des  =  num.divide(gcd);  [CE]  cannot  find  symbol  des  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  des  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  des  =  num.divide(gcd);	  den    =    num.divide(gcd);    der    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  des	51	None	replace
354	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  numerator.add(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  numerator.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  numerator.add(gcd);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	29	None	add
355	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);  [CE]  cannot  find  symbol  gen  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gen.divide(gcd);  num  =  gen.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	48	None	replace
356	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.indexOf(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.multiply(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
357	[BUG]  [BUGGY]  num  =  g.divide(num);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  g  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  g.divide(num);  num  =  num.indexOf(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  g.divide(num);  num  =  num.indexOf(gcd);	          num    =    num.divide(gcd);    num    =    num.indexOf(gcd);    	non-compiled	[CE]  cannot  find  symbol  g	48	None	replace
358	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.longValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.longValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.longValue();	  BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	97	None	replace
359	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.equals(num))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.equals(num))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int    den    =    num.add(gcd);    	compilable	  [FE]  AssertionError  	102	11	replace
360	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(num))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.equals(num))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.equals(num))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int    den    =    num.add(gcd);    	compilable	  [FE]  AssertionError  	102	11	replace
361	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.equals(gcd))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int    den    =    num.add(gcd);    	compilable	  [FE]  AssertionError  	102	11	replace
362	[BUG]  [BUGGY]  if(BigInteger.ONE.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.equals(gcd))  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int    den    =    num.add(gcd);    	compilable	  [FE]  AssertionError  	102	11	replace
363	[BUG]  [BUGGY]  last  =  numerator.negate();  [CE]  cannot  find  symbol  last  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  last  =  numerator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	last  =  numerator.negate();	  last    =    num.negate();    	non-compiled	[CE]  cannot  find  symbol  last	110	None	replace
364	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  BigInteger.ZERO);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd,  denominator,  BigInteger.ZERO);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  denominator,  BigInteger.ZERO);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
365	[BUG]  [BUGGY]  num  =  num.divide(gcd,  0,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  0,  denominator);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
366	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    ==    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	100	11	replace
367	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    ==    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	100	11	replace
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    <    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	93	11	replace
369	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    <    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	93	11	replace
370	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    <    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	93	11	replace
371	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(num)>  0)  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    <    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	93	11	replace
372	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(den);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  gcd.negate(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  gcd.negate(den);	  BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	60	None	replace
373	[BUG]  [BUGGY]  gcd  =  deserator.intValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  deserator.intValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  deserator.intValue();	  gcd    =    denominator.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	64	None	replace
374	[BUG]  [BUGGY]  den.equals(num)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den.equals(num)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den.equals(num)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.negate();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
375	[BUG]  [BUGGY]  den.equals(num)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den.equals(num)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den.equals(num)||  den  ==  BigInteger.ONE)  {  num  =  num.negate();  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.negate();    }    	non-compiled	[CE]  not  a  statement	91	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(den.equals(gcd))  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	7	11	replace
377	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	7	11	replace
378	[BUG]  [BUGGY]  den  =  gcd.divide(num);  Den  =  gcd.divide(num);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  Den  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(num);    Den  =  gcd.divide(num);	  	non-compiled	[CE]  cannot  find  symbol  Den	26	None	add
379	[BUG]  [BUGGY]  num  =  deserator.negate();  [CE]  cannot  find  symbol  deserator  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  deserator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  deserator.negate();	  num    =    numerator.negate();    	non-compiled	[CE]  cannot  find  symbol  deserator	109	None	replace
380	[BUG]  [BUGGY]  num  =  num.add(gcd  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd  +  1);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.add(gcd  +  1);	  num    =    num.add(gcd);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	30	None	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd).multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.multiply(gcd);    num  =  num.multiply(gcd).multiply(gcd);	  	compilable	  [FE]  AssertionError  	84	11	add
382	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd).multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd).multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd).multiply(gcd);	  	compilable	  [FE]  AssertionError  	84	11	add
383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  }  else  {  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	84	11	add
384	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  }  else  {  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	84	11	add
385	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  den  =  numerator.divide(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  den  =  numerator.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  }  else  {  BigInteger  den  =  numerator.divide(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	84	None	add
386	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  denominator  =  BigInteger.ONE;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  }  else  {  BigInteger  denominator  =  BigInteger.ONE;	  	compilable	  [FE]  AssertionError  	84	11	add
387	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  denominator  =  BigInteger.ONE;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  denominator  =  BigInteger.ONE;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  }  else  {  BigInteger  denominator  =  BigInteger.ONE;	  	compilable	  [FE]  AssertionError  	84	11	add
388	[BUG]  [BUGGY]  denominator.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  den  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
389	[BUG]  [BUGGY]  denominator.equals(gcd)||  num  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  num  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  num  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
390	[BUG]  [BUGGY]  denominator.equals(gcd)||  deser  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  deser  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  deser  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	88	None	replace
391	[BUG]  [BUGGY]  gcd  =  num.getLength();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.getLength();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getLength();	  gcd    =    num.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	23	None	replace
392	[BUG]  [BUGGY]  den  =  num.divide(gcd);  Den  =  num.divide(gcd,  denominator);  [CE]  cannot  find  symbol  Den  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  Den  =  num.divide(gcd,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  Den  =  num.divide(gcd,  denominator);	  den    =    num.divide(gcd);    Den    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	54	None	replace
393	[BUG]  [BUGGY]  if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  [CE]  incomparable  types:  BigInteger  and  int  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	non-compiled	[CE]  incomparable  types:  BigInteger  and  int	114	None	replace
394	[BUG]  [BUGGY]  if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  else  {  denominator  =  BigInteger.ZERO;  }  [CE]  incomparable  types:  BigInteger  and  int  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  else  {  denominator  =  BigInteger.ZERO;  }  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  else  {  denominator  =  BigInteger.ZERO;  }	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	non-compiled	[CE]  incomparable  types:  BigInteger  and  int	114	None	replace
395	[BUG]  [BUGGY]  if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  else  {  denominator  =  BigInteger.ONE;  }  [CE]  incomparable  types:  BigInteger  and  int  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  else  {  denominator  =  BigInteger.ONE;  }  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den  ==  0)  {  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  }  else  {  denominator  =  BigInteger.ONE;  }	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	non-compiled	[CE]  incomparable  types:  BigInteger  and  int	114	None	replace
396	[BUG]  [BUGGY]  BigInteger  den  =  g.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  g.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  g.negate();	  BigInteger    den    =    gen.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	76	None	replace
397	[BUG]  [BUGGY]  BigInteger  gcd  =  gen.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gen.getBigInteger();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gen.getBigInteger();	  gcd    =    gen.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	19	None	replace
398	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.Divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.Divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
399	[BUG]  [BUGGY]  gcd  =  gcd.divide(denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gcd.divide(denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.divide(denominator);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	21	None	replace
400	[BUG]  [BUGGY]  gcd  =  denominator.divide(gcd,  numerator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  denominator.divide(gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.divide(gcd,  numerator);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	21	None	replace
401	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(denominator);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  num.negate(denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  num.negate(denominator);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	75	None	replace
402	[BUG]  [BUGGY]  den  =  num.gcd(den);  Den  =  num.gcd(den);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  Den  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.gcd(den);    Den  =  num.gcd(den);	  	non-compiled	[CE]  cannot  find  symbol  Den	77	None	add
403	[BUG]  [BUGGY]  Numerator  num  =  num.negate();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Numerator  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Numerator  num  =  num.negate();	  if(num.equals(den))    {    num    =    num.negate();    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
404	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  Den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.multiply(gcd);  Den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.multiply(gcd);    Den  =  num.divide(gcd);  den  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	113	None	add
405	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.remove(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.remove(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.remove(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
406	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	6	6	add
407	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.divide(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	6	6	add
408	[BUG]  [BUGGY]  den  =  num.negate(den);  [CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.negate(den);	  den    =    num.negate();    	non-compiled	[CE]  method  negate  in  class  BigInteger  cannot  be  applied  to  given  types;	36	None	replace
409	[BUG]  [BUGGY]  den  =  num.denominator;  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.denominator;  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.denominator;	  den    =    gcd.denominator;    	non-compiled	[CE]  cannot  find  symbol  denominator	5	None	replace
410	[BUG]  [BUGGY]  den  =  gcd.numerator;  [CE]  cannot  find  symbol  numerator  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.numerator;  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.numerator;	  den    =    gcd.denominator;    	non-compiled	[CE]  cannot  find  symbol  numerator	5	None	replace
411	[BUG]  [BUGGY]  den  =  num.gcd(den  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den  +  1);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.gcd(den  +  1);	  den    =    num.gcd(den);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	78	None	replace
412	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  numerator.add(gcd);  }  [CE]  variable  numerator  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  numerator.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd))  {  num  =  numerator.add(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    nu.add(gcd);    }    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	112	None	replace
413	[BUG]  [BUGGY]  num  =  nu.add(gcd);  [CE]  cannot  find  symbol  nu  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  nu.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  nu.add(gcd);	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    nu.add(gcd);    }    	non-compiled	[CE]  cannot  find  symbol  nu	112	None	replace
414	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(1);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(1);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getBigInteger(1);	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	99	None	replace
415	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  denominator.gcd(den);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  denominator.gcd(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    num  =  denominator.gcd(den);	  	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	82	None	add
416	[BUG]  [BUGGY]  num  =  num.gcd(den);  int  den  =  num.gcd(den);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  int  den  =  num.gcd(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    int  den  =  num.gcd(den);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	82	None	add
417	[BUG]  [BUGGY]  gcd  =  n.getIntValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  n.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  n.getIntValue();	  gcd    =    gen.getIntValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	41	None	replace
418	[BUG]  [BUGGY]  gcd  =  deserator.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  deserator.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  deserator.negate();	  gcd    =    denominator.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	69	None	replace
419	[BUG]  [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  Den  =  gcd.divide(den);  den  =  gcd.divide(den);  [CE]  cannot  find  symbol  Den  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    gcd.divide(den);    den  =  gcd.divide(den);  Den  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        gcd.divide(den);        den    =    gcd.divide(den);    Den  =  gcd.divide(den);  den  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  Den	10	None	add
420	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  num.equals(den))  {  num  =  num.negate();  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  num.equals(den))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    num.equals(den))  {  num  =  num.negate();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
421	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  int  den  =  num.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  int  den  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    int  den  =  num.negate();	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	58	None	add
422	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  ==  num  =  num.negate();  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  ==  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    if(num.equals(den))  ==  num  =  num.negate();  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
423	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    <    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	101	11	replace
424	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    <    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	101	11	replace
425	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd)  >>  ';'  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd);  num  =  num.divide(gcd)  >>  ';'  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd);  num  =  num.divide(gcd)  >>  ';'	          num    =    num.divide(gcd);    num    =    num.divide(gcd)    	non-compiled	[CE]  ';'  expected	90	None	replace
426	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd)  >>  ';'  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.divide(gcd)  >>  ';'  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd);  num  =  num.divide(gcd)  >>  ';'	          num    =    num.divide(gcd);    num    =    num.divide(gcd)    	non-compiled	[CE]  ';'  expected	90	None	replace
427	[BUG]  [BUGGY]  denominator.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  den  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
428	[BUG]  [BUGGY]  denominator.equals(gcd)||  den!=  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  den!=  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  den!=  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
429	[BUG]  [BUGGY]  denominator.equals(gcd)||  num  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator.equals(gcd)||  num  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator.equals(gcd)||  num  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	  if(den.equals(gcd)||    denominator    ==    BigInteger.ONE)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  not  a  statement	87	None	replace
430	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.getBigInteger(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getBigInteger(den);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	16	None	replace
431	[BUG]  [BUGGY]  bigInteger  =  num.getIntValue();  [CE]  cannot  find  symbol  bigInteger  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  bigInteger  =  num.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	bigInteger  =  num.getIntValue();	  gcd    =    num.getIntValue();    	non-compiled	[CE]  cannot  find  symbol  bigInteger	39	None	replace
432	[BUG]  [BUGGY]  gcd  =  num.getIntValue()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.getIntValue()  +  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getIntValue()  +  1;	  gcd    =    num.getIntValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	39	None	replace
433	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)  <  0)  {  num  =  num.negate();  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)  <  0)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)  <  0)  {  num  =  num.negate();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	71	None	add
434	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)?)  {  num  =  num.negate();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)?)  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)?)  {  num  =  num.negate();  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
435	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.getValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	86	None	replace
436	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
437	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.translate(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.translate(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.translate(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
438	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd)  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd)	  	non-compiled	[CE]  ';'  expected	44	None	add
439	[BUG]  [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);  Den  =  num.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    den  =  num.divide(gcd);  den  =  num.divide(gcd);  Den  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        den    =    num.divide(gcd);    den  =  num.divide(gcd);  Den  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	49	None	add
440	[BUG]  [BUGGY]  den  =  num.divide(gcd);  gcd  =  gen.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  gcd  =  gen.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  gcd  =  gen.divide(gcd);	  den    =    gcd.divide(den);    gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
441	[BUG]  [BUGGY]  num  =  num.negate();  int  den  =  num.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  int  den  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    int  den  =  num.negate();	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	55	None	add
442	[BUG]  [BUGGY]  num  =  num.negate();  int  num  =  num.negate();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  int  num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    int  num  =  num.negate();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	55	None	add
443	[BUG]  [BUGGY]  num  =  num.negate();  denominator  =  num.negate();  [CE]  variable  denominator  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  denominator  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    denominator  =  num.negate();	  	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	55	None	add
444	[BUG]  [BUGGY]  num  =  num.negate();  (num  =  num.negate();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  (num  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    (num  =  num.negate();	  	non-compiled	[CE]  ')'  expected	55	None	add
445	[BUG]  [BUGGY]  Denominator  =  gcd.denominator;  [CE]  cannot  find  symbol  Denominator  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Denominator  =  gcd.denominator;  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Denominator  =  gcd.denominator;	  den    =    gcd.denominator;    	non-compiled	[CE]  cannot  find  symbol  Denominator	5	None	replace
446	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  den  =  den.divide(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  }  else  {  BigInteger  den  =  den.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  }  else  {  BigInteger  den  =  den.divide(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	84	None	add
447	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.numerator();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  gcd.numerator();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.numerator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	108	None	replace
448	[BUG]  [BUGGY]  Den  =  num.multiply(gcd);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Den  =  num.multiply(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Den  =  num.multiply(gcd);	  den    =    num.divide(gcd);    den    =    num.multiply(gcd);    	non-compiled	[CE]  cannot  find  symbol  Den	114	None	replace
449	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den        =        num.divide(gcd);        num    =    num.divide(gcd);    den  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	52	12	add
450	[BUG]  [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.multiply(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den    =    num.divide(gcd);    num  =  num.divide(gcd);  den  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den        =        num.divide(gcd);        num    =    num.divide(gcd);    den  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	52	12	add
451	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	compilable	  [FE]  AssertionError  	9	11	replace
452	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd))  {  num  =  num.add(gcd);  }  else  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.remove(gcd);    }    	compilable	  [FE]  AssertionError  	9	11	replace
453	[BUG]  [BUGGY]  num  =  denominator.multiply(gcd);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  denominator.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  denominator.multiply(gcd);	  num    =    numerator.divide(gcd);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	66	None	replace
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	11	add
455	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	44	11	add
456	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator);  num  =  num.divide(gcd)  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd,  denominator);  num  =  num.divide(gcd)  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd,  denominator);  num  =  num.divide(gcd)	          num    =    num.divide(gcd);    num    =    num.divide(gcd)    	non-compiled	[CE]  ';'  expected	90	None	replace
457	[BUG]  [BUGGY]  gcd  =  n.intValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  n.intValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  n.intValue();	  gcd    =    num.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	62	None	replace
458	[BUG]  [BUGGY]  den  =  gcd.divide(den);  Den  =  gcd.divide(den,  denominator);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den);  Den  =  gcd.divide(den,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den);  Den  =  gcd.divide(den,  denominator);	  den    =    gcd.divide(den);    Den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  Den	92	None	replace
459	[BUG]  [BUGGY]  den  =  gcd.divide(den);  gcd  =  gcd.divide(den,  denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den);  gcd  =  gcd.divide(den,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den);  gcd  =  gcd.divide(den,  denominator);	  den    =    gcd.divide(den);    gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
460	[BUG]  [BUGGY]  bigInteger  =  num.getBigInteger();  [CE]  cannot  find  symbol  bigInteger  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  bigInteger  =  num.getBigInteger();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	bigInteger  =  num.getBigInteger();	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  cannot  find  symbol  bigInteger	16	None	replace
461	[BUG]  [BUGGY]  den  =  numerator.divide(gcd,  _denominator);  [CE]  cannot  find  symbol  _denominator  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  numerator.divide(gcd,  _denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.divide(gcd,  _denominator);	  den    =    numerator.divide(gcd,    denominator);    	non-compiled	[CE]  cannot  find  symbol  _denominator	28	None	replace
462	[BUG]  [BUGGY]  den  =  num.gcd(den);  die  =  num.gcd(den);  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.gcd(den);  die  =  num.gcd(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.gcd(den);    die  =  num.gcd(den);	  	non-compiled	[CE]  cannot  find  symbol  die	77	None	add
463	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  System.arraycopy(gcd,  0,  num,  1,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	55	None	add
464	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  System.arraycopy(gcd,  0,  num,  4,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	55	None	add
465	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  System.arraycopy(gcd,  0,  num,  0,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	55	None	add
466	[BUG]  [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.negate();  num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.negate();    num  =  num.negate();  System.arraycopy(gcd,  0,  num,  2,  denominator);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	55	None	add
467	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.divide(gcd,  numerator,  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  numerator,  denominator);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	65	None	replace
468	[BUG]  [BUGGY]  num  =  denominator.divide(gcd,  numerator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  denominator.divide(gcd,  numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  denominator.divide(gcd,  numerator);	  num    =    denominator.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	67	None	replace
469	[BUG]  [BUGGY]  Den  =  gcd.divide(numerator,  denominator);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Den  =  gcd.divide(numerator,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Den  =  gcd.divide(numerator,  denominator);	  den    =    gcd.divide(den,    denominator);    	non-compiled	[CE]  cannot  find  symbol  Den	1	None	replace
470	[BUG]  [BUGGY]  den  =  gcd.divide(numerator,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(numerator,  deserator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(numerator,  deserator);	  den    =    gcd.divide(den,    denominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	1	None	replace
471	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  <  num  =  num.add(gcd);  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  if(num.equals(gcd))  <  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))    {    num    =    num.add(gcd);    }    if(num.equals(gcd))  <  num  =  num.add(gcd);  }	  	non-compiled	[CE]  >  expected	32	None	add
472	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(BigInteger.ZERO))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(BigInteger.ZERO))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    ==    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	111	11	replace
473	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(BigInteger.ZERO))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(BigInteger.ZERO))  {  num  =  num.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    ==    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	111	11	replace
474	[BUG]  [BUGGY]  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.indexOf(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.indexOf(gcd);	  if(num.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
475	[BUG]  [BUGGY]  BigInteger  gcd  =  n.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  n.getBigInteger();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  n.getBigInteger();	  gcd    =    n.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	18	None	replace
476	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.parse(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.multiply(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
477	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  gen  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gen.divide(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  cannot  find  symbol  gen	46	None	replace
478	[BUG]  [BUGGY]  Numerator  num  =  num.add(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  Numerator  num  =  num.add(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	Numerator  num  =  num.add(gcd);	  if(den.equals(gcd)||    denominator    ==    BigInteger.ZERO)    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
479	[BUG]  [BUGGY]  den  =  gcd.divide(num);  die  =  gcd.divide(num);  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num);  die  =  gcd.divide(num);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(num);    die  =  gcd.divide(num);	  	non-compiled	[CE]  cannot  find  symbol  die	26	None	add
480	[BUG]  [BUGGY]  den  =  gcd.divide(num,  denominator  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(num,  denominator  +  1);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num,  denominator  +  1);	  den    =    gcd.divide(den    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	95	None	replace
481	[BUG]  [BUGGY]  den  =  num.negate();  die  =  num.negate();  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.negate();  die  =  num.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.negate();    die  =  num.negate();	  	non-compiled	[CE]  cannot  find  symbol  die	35	None	add
482	[BUG]  [BUGGY]  BigInteger  den  =  denominator.negate(num);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  denominator.negate(num);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  denominator.negate(num);	  BigInteger    den    =    num.negate(den);    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	75	None	replace
483	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  des.negate();  }  [CE]  cannot  find  symbol  des  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(gcd))  {  num  =  des.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))  {  num  =  des.negate();  }	          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))    {    num    =    num.enegate();    }    	non-compiled	[CE]  cannot  find  symbol  des	74	None	replace
484	[BUG]  [BUGGY]  denominator  =  num.negate();  [CE]  variable  denominator  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  denominator  =  num.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	denominator  =  num.negate();	  last    =    num.negate();    	non-compiled	[CE]  variable  denominator  might  already  have  been  assigned	110	None	replace
485	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate(),  denominator);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  numerator.negate(),  denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  numerator.negate(),  denominator);	  BigInteger    den    =    numerator.negate();    	non-compiled	[CE]  ';'  expected	61	None	replace
486	[BUG]  [BUGGY]  gcd  =  num.divide(denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.divide(denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.divide(denominator);	  gcd    =    num.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	20	None	replace
487	[BUG]  [BUGGY]  den  =  gcd.negate();  die  =  gcd.negate();  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.negate();  die  =  gcd.negate();  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.negate();    die  =  gcd.negate();	  	non-compiled	[CE]  cannot  find  symbol  die	2	None	add
488	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(n.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [CE]  cannot  find  symbol  n  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(n.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(n.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  n	71	None	add
489	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(d.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [CE]  cannot  find  symbol  d  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }  if(d.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.negate();        }        if(den.equals(gcd))    {    num    =    num.negate();    }    if(d.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  d	71	None	add
490	[BUG]  [BUGGY]  den  =  gcd.denominator(den);  [CE]  cannot  find  symbol  [FE]    ExceptionInInitializerError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.denominator(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.denominator(den);	  den    =    gcd.divide(den);    den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
491	[BUG]  [BUGGY]  gcd  =  num.doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  num.doubleValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.doubleValue();	  gcd    =    num.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	23	None	replace
492	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  m  =  num.negate();  }  [CE]  cannot  find  symbol  m  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  if(num.equals(den))  {  m  =  num.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))    {    num    =    num.negate();    }    if(num.equals(den))  {  m  =  num.negate();  }	  	non-compiled	[CE]  cannot  find  symbol  m	58	None	add
493	[BUG]  [BUGGY]  num  =  gcd.divide(num).Divide(gcd);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.divide(num).Divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.divide(num).Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
494	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  numerator.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  numerator.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  numerator.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	6	None	add
495	[BUG]  [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  <  num  =  num.add(gcd);  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  <  num  =  num.add(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                if(den.equals(gcd))        {        num        =        num.add(gcd);        }        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  <  num  =  num.add(gcd);  }	  	non-compiled	[CE]  >  expected	6	None	add
496	[BUG]  [BUGGY]  den  =  gcd.divide(den;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  gcd.divide(den;  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den;	  den    =    gcd.divide(numerator);    	non-compiled	[CE]  ')'  expected	38	None	replace
497	[BUG]  [BUGGY]  derenominator  =  gcd.divide(den);  [CE]  cannot  find  symbol  derenominator  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  derenominator  =  gcd.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	derenominator  =  gcd.divide(den);	  den    =    gcd.divide(numerator);    	non-compiled	[CE]  cannot  find  symbol  derenominator	38	None	replace
498	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(0);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  den  =  gcd.negate(0);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  gcd.negate(0);	  BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	60	None	replace
499	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  numerator.negate();  }  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(num.equals(den))  {  num  =  numerator.negate();  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))  {  num  =  numerator.negate();  }	  if(num.equals(den))    {    num    =    num.negate();    }    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	59	None	replace
500	[BUG]  [BUGGY]  int  num  =  num.getIntValue();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  int  num  =  num.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	int  num  =  num.getIntValue();	  gcd    =    num.getIntValue();    	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	39	None	replace
501	[BUG]  [BUGGY]  den  =  num.divide(gcd,  numerator,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd,  numerator,  denominator);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  numerator,  denominator);	  den    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	34	None	replace
502	[BUG]  [BUGGY]  num  =  num.gcd(den);  num  =  numerator.gcd(den);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.gcd(den);  num  =  numerator.gcd(den);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.gcd(den);    num  =  numerator.gcd(den);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	82	None	add
503	[BUG]  [BUGGY]  den  =  num.divide(gcd);  dere  =  num.divide(gcd);  [CE]  cannot  find  symbol  dere  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(gcd);  dere  =  num.divide(gcd);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd);  dere  =  num.divide(gcd);	  den    =    num.divide(gcd);    die    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  dere	96	None	replace
504	[BUG]  [BUGGY]  num  =  num.multiply(gcd)-  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.multiply(gcd)-  1;  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd)-  1;	  num    =    num.multiply(gcd);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	85	None	replace
505	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	7	11	replace
506	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.divide(gcd);  }  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(BigInteger.ONE.compareTo(den)>  0)  {  num  =  num.divide(gcd);  }	          if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	7	11	replace
507	[BUG]  [BUGGY]  bigInteger  =  gen.getIntValue();  [CE]  cannot  find  symbol  bigInteger  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  bigInteger  =  gen.getIntValue();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	bigInteger  =  gen.getIntValue();	  gcd    =    gen.getIntValue();    	non-compiled	[CE]  cannot  find  symbol  bigInteger	41	None	replace
508	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  BigInteger  den  =  numerator.divide(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  BigInteger  den  =  numerator.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd);  }  else  {  BigInteger  den  =  numerator.divide(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	29	None	add
509	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  BigInteger  den  =  den.divide(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  BigInteger  den  =  den.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd);  }  else  {  BigInteger  den  =  den.divide(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	29	None	add
510	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  BigInteger  den  =  des.divide(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  BigInteger  den  =  des.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd);  }  else  {  BigInteger  den  =  des.divide(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	29	None	add
511	[BUG]  [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  final  BigInteger  gcd  =  gcd.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  num.add(gcd);  num  =  num.add(gcd);  }  else  {  final  BigInteger  gcd  =  gcd.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num    =    num.add(gcd);    num  =  num.add(gcd);  }  else  {  final  BigInteger  gcd  =  gcd.negate();	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	29	None	add
512	[BUG]  [BUGGY]  gcd  =  gen.divide(denominator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  gen.divide(denominator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.divide(denominator);	  gcd    =    gen.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	22	None	replace
513	[BUG]  [BUGGY]  BigInteger  gcd  =  m.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  BigInteger  gcd  =  m.negate();  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  m.negate();	  BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	105	None	replace
514	[BUG]  [BUGGY]  num  =  denominator.divide(gcd);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  denominator.divide(gcd);  num  =  num.differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  denominator.divide(gcd);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
515	[BUG]  [BUGGY]  num  =  gcd.multiply(num);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  num  =  gcd.multiply(num);  num  =  num.differ(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  gcd.multiply(num);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
516	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.differ(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.differ(gcd);  num  =  num.divide(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.differ(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
517	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	42	11	add
518	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	42	11	add
519	[BUG]  [BUGGY]  gcd  =  denominator.divide(numerator);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  gcd  =  denominator.divide(numerator);  [BUGGY]      den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.divide(numerator);	  gcd    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	21	None	replace
520	[BUG]  [BUGGY]  den  =  num.divide(den);  die  =  num.divide(den);  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);      [BUGGY]  den  =  num.divide(den);  die  =  num.divide(den);  [BUGGY]      }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(den);    die  =  num.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  die	79	None	add
