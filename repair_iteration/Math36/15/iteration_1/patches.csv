bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  den  =  gcd.divide(den,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den,  denominator);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den,  denominator);	  den    =    gcd.divide(den);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	9	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.negate();  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  gcd.negate();	  den    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	9	11	replace
3	[BUG]  [BUGGY]  den  =  gcd.negate();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.negate();  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.negate();	  den    =    gcd.divide(den);    	compilable	  [FE]  AssertionError  	9	11	replace
4	[BUG]  [BUGGY]  den  =  gcd.denominator();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.denominator();  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.denominator();	  den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  den  =  gcd.denominator;  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.denominator;  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.denominator;	  den    =    gcd.divide(den);    	non-compiled	[CE]  cannot  find  symbol  denominator	9	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	18	6	add
7	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	compilable	  [FE]  AssertionError  	18	6	add
8	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  If(den.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  If(den.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    If(den.equals(gcd))  {  num  =  num.add(gcd);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
9	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.remove(gcd);  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  num.remove(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  num.remove(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
10	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    gcd.divide(den);    den  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	8	27	add
11	[BUG]  [BUGGY]  den  =  gcd.divide(den);  den  =  gcd.divide(den);  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  den  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(den);    den  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	8	27	add
12	[BUG]  [BUGGY]  den  =  gcd.divide(den);  gcd  =  gcd.divide(den);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  gcd  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(den);    gcd  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	8	None	add
13	[BUG]  [BUGGY]  den  =  gcd.divide(den);  der  =  gcd.divide(den);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  der  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(den);    der  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  der	8	None	add
14	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    gcd.divide(den);    num  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	8	27	add
15	[BUG]  [BUGGY]  den  =  gcd.divide(den);  num  =  gcd.divide(den);  [FE]  ExceptionInInitializerError  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  num  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(den);    num  =  gcd.divide(den);	  	compilable	  [FE]  ExceptionInInitializerError  	8	27	add
16	[BUG]  [BUGGY]  gcd  =  num.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  num.getBigInteger();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	5	None	replace
17	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  num.getBigInteger();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	5	None	replace
18	[BUG]  [BUGGY]  gcd  =  n.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  n.getBigInteger();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  n.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	5	None	replace
19	[BUG]  [BUGGY]  gcd  =  gen.getBigInteger();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gen.getBigInteger();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	5	None	replace
20	[BUG]  [BUGGY]  gcd  =  num.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  num.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.divide(gcd);	      gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
21	[BUG]  [BUGGY]  gcd  =  denominator.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  denominator.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.divide(gcd);	      gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
22	[BUG]  [BUGGY]  gcd  =  gen.divide(gcd);  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gen.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.divide(gcd);	      gcd    =    gcd.divide(den);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	12	None	replace
23	[BUG]  [BUGGY]  gcd  =  num.hashCode();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  num.hashCode();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.hashCode();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
24	[BUG]  [BUGGY]  gcd  =  denominator.hashCode();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  denominator.hashCode();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.hashCode();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
25	[BUG]  [BUGGY]  gcd  =  gen.hashCode();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gen.hashCode();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.hashCode();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(num);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  gcd.divide(num);	  den    =    numerator.divide(gcd);    	compilable	  [FE]  AssertionError  	11	11	replace
27	[BUG]  [BUGGY]  den  =  gcd.divide(num);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(num);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(num);	  den    =    numerator.divide(gcd);    	compilable	  [FE]  AssertionError  	11	11	replace
28	[BUG]  [BUGGY]  den  =  numerator.divide(gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  numerator.divide(gcd,  denominator);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  numerator.divide(gcd,  denominator);	  den    =    numerator.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	11	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.add(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  num.add(gcd);	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	19	11	replace
30	[BUG]  [BUGGY]  num  =  num.add(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.add(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.add(gcd);	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	19	11	replace
31	[BUG]  [BUGGY]  if(den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.add(gcd);  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.add(gcd);  }	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	19	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(gcd))  {  num  =  num.add(gcd);  }	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	19	11	replace
33	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(num.equals(gcd))  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(gcd))  {  num  =  num.add(gcd);  }	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	compilable	  [FE]  AssertionError  	19	11	replace
34	[BUG]  [BUGGY]  den  =  num.divide(gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd,  denominator);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(gcd,  denominator);	  den    =    num.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	7	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.negate();  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  num.negate();	  den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	7	11	replace
36	[BUG]  [BUGGY]  den  =  num.negate();  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.negate();  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.negate();	  den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	7	11	replace
37	[BUG]  [BUGGY]  den  =  num.denominator(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.denominator(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.denominator(gcd);	  den    =    num.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
38	[BUG]  [BUGGY]  den  =  gcd.divide(numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(numerator);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(numerator);	  den    =    num.divide(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	7	None	replace
39	[BUG]  [BUGGY]  gcd  =  num.getIntValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  num.getIntValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.getIntValue();	      gcd    =    gcd.getIntValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	3	None	replace
40	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getIntValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  num.getIntValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.getIntValue();	      gcd    =    gcd.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	3	None	replace
41	[BUG]  [BUGGY]  gcd  =  gen.getIntValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gen.getIntValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.getIntValue();	      gcd    =    gcd.getIntValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	3	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	        num    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	13	11	add
43	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	13	11	add
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	        num    =    num.divide(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	13	10	add
45	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	13	10	add
46	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.parse(gcd);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
47	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.Divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.Divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
48	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.indexOf(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.indexOf(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.indexOf(gcd);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.divide(gcd);    den  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	6	12	add
50	[BUG]  [BUGGY]  den  =  num.divide(gcd);  den  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  den  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(gcd);    den  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	6	12	add
51	[BUG]  [BUGGY]  den  =  num.divide(gcd);  der  =  num.divide(gcd);  [CE]  cannot  find  symbol  der  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  der  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(gcd);    der  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  der	6	None	add
52	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	6	12	add
53	[BUG]  [BUGGY]  den  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	6	12	add
54	[BUG]  [BUGGY]  den  =  num.divide(gcd);  Den  =  num.divide(gcd);  [CE]  cannot  find  symbol  Den  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  Den  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(gcd);    Den  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  Den	6	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  num.negate();	      if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	17	11	replace
56	[BUG]  [BUGGY]  num  =  num.negate();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.negate();	      if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	17	11	replace
57	[BUG]  [BUGGY]  if(den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd)||  denominator.equals(gcd))  {  num  =  num.negate();  }	      if(den.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	17	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	if(num.equals(den))  {  num  =  num.negate();  }	      if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	17	11	replace
59	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(num.equals(den))  {  num  =  num.negate();  }	      if(den.equals(gcd))    {    num    =    num.negate();    }    	compilable	  [FE]  AssertionError  	17	11	replace
60	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  den  =  gcd.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  gcd.negate();	      BigInteger    den    =    num.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	15	None	replace
61	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  den  =  numerator.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  numerator.negate();	      BigInteger    den    =    num.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	15	None	replace
62	[BUG]  [BUGGY]  gcd  =  num.intValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  num.intValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	4	None	replace
63	[BUG]  [BUGGY]  BigInteger  gcd  =  num.intValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  num.intValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  num.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	4	None	replace
64	[BUG]  [BUGGY]  gcd  =  denominator.intValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                  AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  denominator.intValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	4	None	replace
65	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  [CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.divide(gcd,  denominator);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.divide(gcd,  denominator);	      num    =    num.divide(gcd);    	non-compiled	[CE]  method  divide  in  class  BigInteger  cannot  be  applied  to  given  types;	14	None	replace
66	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  numerator.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  numerator.divide(gcd);	      num    =    num.divide(gcd);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	14	None	replace
67	[BUG]  [BUGGY]  num  =  denominator.divide(gcd);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  denominator.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  denominator.divide(gcd);	      num    =    num.divide(gcd);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	14	None	replace
68	[BUG]  [BUGGY]  gcd  =  num.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  num.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  num.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
69	[BUG]  [BUGGY]  gcd  =  denominator.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  denominator.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  denominator.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
70	[BUG]  [BUGGY]  gcd  =  gen.negate();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gen.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	1	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	16	2	add
72	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.negate();  }	  	compilable	  [FE]  AssertionError  	16	2	add
73	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  If(den.equals(gcd))  {  num  =  num.negate();  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  If(den.equals(gcd))  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.negate();    }    If(den.equals(gcd))  {  num  =  num.negate();  }	  	non-compiled	[CE]  ';'  expected	16	None	add
74	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.enegate();  }  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  {  num  =  num.enegate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  {  num  =  num.enegate();  }	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
75	[BUG]  [BUGGY]  BigInteger  den  =  num.negate(den);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  den  =  num.negate(den);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  num.negate(den);	      BigInteger    den    =    num.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	15	None	replace
76	[BUG]  [BUGGY]  BigInteger  den  =  gen.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  den  =  gen.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  gen.negate();	      BigInteger    den    =    num.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	15	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.gcd(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  num.gcd(den);	  den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	7	11	replace
78	[BUG]  [BUGGY]  den  =  num.gcd(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.gcd(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.gcd(den);	  den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	7	11	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den  =  num.divide(den);	  den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	7	12	replace
80	[BUG]  [BUGGY]  den  =  num.divide(den);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  num.divide(den);	  den    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	7	12	replace
81	[BUG]  [BUGGY]  den  =  deserator.divide(gcd);  [CE]  cannot  find  symbol  deserator  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  deserator.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  deserator.divide(gcd);	  den    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  deserator	10	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.gcd(den);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  num.gcd(den);	      num    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	14	11	replace
83	[BUG]  [BUGGY]  num  =  num.gcd(den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.gcd(den);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.gcd(den);	      num    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	14	11	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.multiply(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	num  =  num.multiply(gcd);	      num    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	14	10	replace
85	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  num.multiply(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  num.multiply(gcd);	      num    =    num.divide(gcd);    	compilable	  [FE]  AssertionError  	14	10	replace
86	[BUG]  [BUGGY]  gcd  =  gcd.getValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gcd.getValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.getValue();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
87	[BUG]  [BUGGY]  if(den.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(den.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.add(gcd);  }	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	19	None	replace
88	[BUG]  [BUGGY]  if(den.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(den.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num.add(gcd);  }	      if(den.equals(gcd))    {    num    =    num.add(gcd);    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	19	None	replace
89	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  numerator.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  numerator.divide(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  numerator.divide(gcd);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	13	None	add
90	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd)  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd)  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.divide(gcd)	  	non-compiled	[CE]  ';'  expected	13	None	add
91	[BUG]  [BUGGY]  if(den.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [CE]  variable  denominator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  if(den.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	if(den.equals(gcd)||  denominator  ==  BigInteger.ONE)  {  num  =  num.negate();  }	      if(den.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	17	None	replace
92	[BUG]  [BUGGY]  den  =  gcd.divide(den);  Den  =  gcd.divide(den);  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  Den  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(den);    Den  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  Den	8	None	add
93	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  <  num  =  num.negate();  }  [CE]  >  expected  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  <  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  <  num  =  num.negate();  }	  	non-compiled	[CE]  >  expected	16	None	add
94	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)?)  {  num  =  num.negate();  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd)?)  {  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd)?)  {  num  =  num.negate();  }	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
95	[BUG]  [BUGGY]  den  =  gcd.divide(den  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den  +  1);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den  =  gcd.divide(den  +  1);	  den    =    gcd.divide(den);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	9	None	replace
96	[BUG]  [BUGGY]  den  =  num.divide(gcd);  die  =  num.divide(gcd);  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  die  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(gcd);    die  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol  die	6	None	add
97	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.intValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  gcd.intValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	4	None	replace
98	[BUG]  [BUGGY]  gcd  =  gen.intValue();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gen.intValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gen.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	4	None	replace
99	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	5	None	replace
100	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  ==  num  =  num.add(gcd);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  ==  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  ==  num  =  num.add(gcd);  }	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
101	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  <  num  =  num.add(gcd);  }  [CE]  >  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  <  num  =  num.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  <  num  =  num.add(gcd);  }	  	non-compiled	[CE]  >  expected	18	None	add
102	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  int  den  =  num.add(gcd);  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  int  den  =  num.add(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    int  den  =  num.add(gcd);	  	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	18	None	add
103	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getIntValue();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  gcd.getIntValue();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.getIntValue();	      gcd    =    gcd.getIntValue();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	3	None	replace
104	[BUG]  [BUGGY]  den  =  gcd.divide(den);  die  =  gcd.divide(den);  [CE]  cannot  find  symbol  die  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  gcd.divide(den);  die  =  gcd.divide(den);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    gcd.divide(den);    die  =  gcd.divide(den);	  	non-compiled	[CE]  cannot  find  symbol  die	8	None	add
105	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.negate();  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  gcd  =  gcd.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  gcd  =  gcd.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	1	None	replace
106	[BUG]  [BUGGY]  BigInteger  den  =  m.negate();  [CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  BigInteger  den  =  m.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	BigInteger  den  =  m.negate();	      BigInteger    den    =    num.negate();    	non-compiled	[CE]  variable  den  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	15	None	replace
107	[BUG]  [BUGGY]  derenominator  =  num.divide(gcd);  [CE]  cannot  find  symbol  derenominator  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  derenominator  =  num.divide(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	derenominator  =  num.divide(gcd);	  den    =    denominator.divide(gcd);    	non-compiled	[CE]  cannot  find  symbol  derenominator	10	None	replace
108	[BUG]  [BUGGY]  gcd  =  gcd.numerator();  [CE]  cannot  assign  a  value  to  final  variable  gcd  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  gcd  =  gcd.numerator();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	gcd  =  gcd.numerator();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  gcd	2	None	replace
109	[BUG]  [BUGGY]  num  =  numerator.negate();  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  num  =  numerator.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	num  =  numerator.negate();	      if(den.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	17	None	replace
110	[BUG]  [BUGGY]  last  =  num.negate();  [CE]  cannot  find  symbol  last  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  last  =  num.negate();  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	last  =  num.negate();	      if(den.equals(gcd))    {    num    =    num.negate();    }    	non-compiled	[CE]  cannot  find  symbol  last	17	None	replace
111	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  ==  num  =  num.negate();  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.negate();  }  if(den.equals(gcd))  ==  num  =  num.negate();  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.negate();    }    if(den.equals(gcd))  ==  num  =  num.negate();  }	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
112	[BUG]  [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  nu.add(gcd);  }  [CE]  cannot  find  symbol  nu  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      if(den.equals(gcd))  {  num  =  num.add(gcd);  }  if(den.equals(gcd))  {  num  =  nu.add(gcd);  }  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        if(den.equals(gcd))    {    num    =    num.add(gcd);    }    if(den.equals(gcd))  {  num  =  nu.add(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  nu	18	None	add
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	add	den    =    num.divide(gcd);    den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	6	11	add
114	[BUG]  [BUGGY]  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]  den  =  num.divide(gcd);  den  =  num.multiply(gcd);  [BUGGY]    }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	den    =    num.divide(gcd);    den  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	6	11	add
115	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);  if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.differ(gcd);  [BUGGY]    den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  numerator  =  num;  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	134	134	2	replace	        num    =    num.divide(gcd);    num  =  num.differ(gcd);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
