bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  denominator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  denominator)  {  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  int  den,  int  denominator)  {	  public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	12	None	replace
2	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  int  denominator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]      [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  int  denominator)  {  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  BigInteger  den,  int  denominator)  {	  public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	12	None	replace
3	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(num,  new  BigInteger(den,  0));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  0));	  this(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(num,  new  BigInteger(den,  denominator));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  denominator));	  this(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(num,  new  BigInteger(den),  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  numerator);	  this(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(num,  new  BigInteger(den),  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  denominator);	  this(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  this(num,  denominator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(num,  denominator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  denominator,  BigInteger.ZERO);	  this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
8	[BUG]  [BUGGY]  this(num,  numerator,  denominator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  this(num,  numerator,  denominator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  denominator,  BigInteger.ZERO);	  this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
9	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(num,  den,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  BigInteger.ZERO);	  this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
10	[BUG]  [BUGGY]  this(den,  numerator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(den,  numerator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(den,  numerator,  BigInteger.ZERO);	  this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
11	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.ZERO;	      BigInteger    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MAX_VALUE;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.MAX_VALUE;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MAX_VALUE;	      BigInteger    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MIN_VALUE;	      BigInteger    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
14	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  0));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  super(num,  new  BigInteger(den,  0));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  0));	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
15	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  denominator));  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(num,  new  BigInteger(den,  denominator));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  denominator));	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(num,  new  BigInteger(den),  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  denominator);	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  gcd);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  super(num,  new  BigInteger(den),  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  gcd);	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(0);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(0);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
19	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
20	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
21	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(num,  BigInteger.MIN_VALUE,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  denominator);	  this(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
22	[BUG]  [BUGGY]  this(num,  numerator,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  this(num,  numerator,  BigInteger.MIN_VALUE);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  BigInteger.MIN_VALUE);	  this(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
23	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  this(num,  BigInteger.MIN_VALUE,  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  numerator);	  this(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  this(num,  den,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  this(num,  den,  BigInteger.MIN_VALUE);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  BigInteger.MIN_VALUE);	  this(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.doubleValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.doubleValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.doubleValue());	      BigInteger    gcd    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
26	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den);	      BigInteger    gcd    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
27	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)den;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =(BigFraction)den;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)den;	      BigFraction    gcd    =(BigFraction)null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)num;  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =(BigFraction)num;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)num;	      BigFraction    gcd    =(BigFraction)null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)new  BigInteger(0);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =(BigFraction)new  BigInteger(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)new  BigInteger(0);	      BigFraction    gcd    =(BigFraction)null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.intValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.intValue());	      BigInteger    gcd    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue(),  den);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue(),  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.intValue(),  den);	      BigInteger    gcd    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)null;  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]    AssertionError    [CONTEXT]      [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)null;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigFraction    gcd    =(BigFraction)null;    BigFraction  gcd  =(BigFraction)null;	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	4	None	add
33	[BUG]  [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigInteger  gcd  =(BigInteger)null;  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]      AssertionError    [CONTEXT]      [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigInteger  gcd  =(BigInteger)null;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigFraction    gcd    =(BigFraction)null;    BigInteger  gcd  =(BigInteger)null;	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	4	None	add
34	[BUG]  [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)num;  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]        AssertionError    [CONTEXT]      [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)num;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigFraction    gcd    =(BigFraction)null;    BigFraction  gcd  =(BigFraction)num;	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	4	None	add
35	[BUG]  [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)den;  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]          AssertionError    [CONTEXT]      [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)den;  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigFraction    gcd    =(BigFraction)null;    BigFraction  gcd  =(BigFraction)den;	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	4	None	add
36	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(den.intValue());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(den.intValue());	      BigFraction    f    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
37	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den);	      BigFraction    f    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
38	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue());	      BigFraction    f    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
39	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(num,  BigInteger.ZERO,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  denominator);	  this(num,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(num,  BigInteger.ZERO,  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  numerator);	  this(num,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)den.clone();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =(BigInteger)den.clone();  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =(BigInteger)den.clone();	      BigInteger    gcd    =(BigInteger)num.clone();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
42	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)n.clone();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =(BigInteger)n.clone();  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =(BigInteger)n.clone();	      BigInteger    gcd    =(BigInteger)num.clone();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(den.intValue());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =  new  BigFraction(den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(den.intValue());	      BigFraction    gcd    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.intValue(),  den);	      BigFraction    gcd    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(n.intValue());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =  new  BigFraction(n.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(n.intValue());	      BigFraction    gcd    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(den.intValue(),  num.intValue());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(den.intValue(),  num.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(den.intValue(),  num.intValue());	      BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(den.intValue(),  den.intValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(den.intValue(),  den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(den.intValue(),  den.intValue());	      BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue());	      BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.getLength());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.getLength());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.getLength());	      BigInteger    gcd    =    new    BigInteger(num.getLength());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(den.getLength());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  BigInteger  num  =  new  BigInteger(den.getLength());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(den.getLength());	      BigInteger    gcd    =    new    BigInteger(num.getLength());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  -  1);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  -  1);	      BigInteger    gcd    =    new    BigInteger(num.getLength());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(den,  num);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(den,  num);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(den,  num);	      BigFraction    f    =    new    BigFraction(num,    den);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  denominator);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  denominator);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  denominator);	      BigFraction    f    =    new    BigFraction(num,    den);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  numerator);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  numerator);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  numerator);	      BigFraction    f    =    new    BigFraction(num,    den);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
55	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(den);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(den);	      BigInteger    gcd    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  BigInteger  num  =  BigInteger.valueOf(den);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  num  =  BigInteger.valueOf(den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  BigInteger.valueOf(den);	      BigInteger    gcd    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(0);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]    AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger  gcd  =  BigInteger.valueOf(0);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
58	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(1);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]      AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(1);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger  gcd  =  BigInteger.valueOf(1);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
59	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  new  BigInteger(num.intValue());  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]        AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  new  BigInteger(num.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger  gcd  =  new  BigInteger(num.intValue());	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
60	[BUG]  [BUGGY]  super(num,  den,  numerator);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(num,  den,  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  numerator);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  super(num,  den,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(num,  den,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  denominator);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  super(num,  den,  gcd);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  super(num,  den,  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  gcd);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  super(num,  den,  false);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]      [BUGGY]  super(num,  den,  false);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  false);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)den.clone();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =(BigFraction)den.clone();  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)den.clone();	      BigFraction    gcd    =(BigFraction)num.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
65	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)n.clone();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =(BigFraction)n.clone();  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)n.clone();	      BigFraction    gcd    =(BigFraction)num.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
66	[BUG]  [BUGGY]  this(num,  0,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  this(num,  0,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.ZERO);	  this(num,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
67	[BUG]  [BUGGY]  this(num,  BigInteger.ONE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(num,  BigInteger.ONE);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ONE);	  this(num,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  this(num,  deserator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(num,  deserator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  deserator,  BigInteger.ZERO);	  this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
69	[BUG]  [BUGGY]  super(num,  gcd);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(num,  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  gcd);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
70	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(1);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(1);	      BigInteger    denominator    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
71	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(DEN);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(DEN);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(DEN);	      BigInteger    gcd    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
72	[BUG]  [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.MIN_VALUE);	  this(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(den.intValue(),  den.intValue());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigFraction  num  =  new  BigFraction(den.intValue(),  den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(den.intValue(),  den.intValue());	      BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(n.doubleValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(n.doubleValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(n.doubleValue());	      BigInteger    gcd    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
75	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  this(num,  new  BigInteger(den),  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  gcd);	  this(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(n.getLength());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(n.getLength());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(n.getLength());	      BigInteger    gcd    =    new    BigInteger(num.getLength());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [CE]  type  AssertionError  does  not  take  parameters  [FE]    AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);	  	non-compiled	[CE]  type  AssertionError  does  not  take  parameters	16	None	add
78	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigFraction  gcd  =  BigInteger.valueOf(0);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]      AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigFraction  gcd  =  BigInteger.valueOf(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigFraction  gcd  =  BigInteger.valueOf(0);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
79	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigDecimal  gcd  =  BigDecimal.valueOf(0);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]        AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigDecimal  gcd  =  BigDecimal.valueOf(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigDecimal  gcd  =  BigDecimal.valueOf(0);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
80	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  +  1);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  +  1);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den  +  1);	      BigFraction    f    =    new    BigFraction(num,    den);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
81	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  numerator);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  super(num,  new  BigInteger(den),  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  numerator);	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(1);  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(1);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(1);	      BigInteger    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
83	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(n.intValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(n.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(n.intValue());	      BigInteger    gcd    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
84	[BUG]  [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)new  BigInteger(0);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]    AssertionError    [CONTEXT]      [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)new  BigInteger(0);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigFraction    gcd    =(BigFraction)null;    BigFraction  gcd  =(BigFraction)new  BigInteger(0);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	4	None	add
85	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue()  +  den.intValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue()  +  den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.intValue()  +  den.intValue());	      BigInteger    gcd    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
86	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(num);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]    AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(num);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger  gcd  =  BigInteger.valueOf(num);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
87	[BUG]  [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(2);  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]      AssertionError    [CONTEXT]      [BUGGY]      BigInteger  gcd  =  BigInteger.valueOf(0);  BigInteger  gcd  =  BigInteger.valueOf(2);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger  gcd  =  BigInteger.valueOf(2);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	16	None	add
88	[BUG]  [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)den.clone();  [CE]  variable  gcd  is  already  defined  in  class  BigFraction  [FE]    AssertionError    [CONTEXT]      [BUGGY]      BigFraction  gcd  =(BigFraction)null;  BigFraction  gcd  =(BigFraction)den.clone();  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	        BigFraction    gcd    =(BigFraction)null;    BigFraction  gcd  =(BigFraction)den.clone();	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  class  BigFraction	4	None	add
89	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den);	      BigInteger    gcd    =    new    BigInteger(num.doubleValue());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  den);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  this(num,  BigInteger.MIN_VALUE,  den);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  den);	  this(num,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  int  den)  {  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      [BUGGY]  Public  BigFraction(BigInteger  num,  int  den)  {  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  int  den)  {	  public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
92	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  +  den);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  +  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  +  den);	      BigInteger    gcd    =    new    BigInteger(num.getLength());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength(),  den);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength(),  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength(),  den);	      BigInteger    gcd    =    new    BigInteger(num.getLength());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(num,  den);	      BigInteger    gcd    =    BigInteger.valueOf(num);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
95	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  super(num,  den,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.ZERO);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.MAX_VALUE);	  super(num,    den);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  den);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  super(num,  new  BigInteger(den),  den);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  den);	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
98	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  gcd);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  gcd);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  gcd);	      BigFraction    f    =    new    BigFraction(num,    den);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR);	      BigFraction    f    =    new    BigFraction(num,    den);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
100	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den.intValue(),  denominator);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den.intValue(),  denominator);  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den.intValue(),  denominator);	      BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
101	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue());	      BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
102	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue());  [BUGGY]    public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.intValue());	      BigFraction    gcd    =    new    BigFraction(num.intValue());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
