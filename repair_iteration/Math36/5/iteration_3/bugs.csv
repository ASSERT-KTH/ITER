bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  bigInteger  gcd  =  new  BigInteger(num.doubleValue());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  bigInteger  gcd  =  new  BigInteger(num.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigInteger  gcd  =  new  BigInteger(num.doubleValue());	  BigInteger    gcd    =    new    BigInteger(den.doubleValue());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
2	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(0);	  BigInteger    gcd    =    new    BigInteger(den.doubleValue());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
3	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength(),  den,  denominator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength(),  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength(),  den,  denominator);	  BigInteger    gcd    =    new    BigInteger(num.getLength(),    den);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
4	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getHeight(),  den);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getHeight(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getHeight(),  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength(),    den);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
5	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getHint(),  den);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getHint(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getHint(),  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength(),    den);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
6	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength(),  den  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength(),  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength(),  den  +  1);	  BigInteger    gcd    =    new    BigInteger(num.getLength(),    den);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
7	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  1));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  1));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  1));	  super(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  0),  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  0),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  0),  numerator);	  super(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  0),  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  0),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  0),  denominator);	  super(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  ZERO));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  ZERO));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  ZERO));	  super(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  gcd));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  gcd));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  gcd));	  super(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  0,  denominator));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  0,  denominator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  0,  denominator));	  super(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  bigFraction  gcd  =(BigFraction)null;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  bigFraction  gcd  =(BigFraction)null;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigFraction  gcd  =(BigFraction)null;	          BigFraction    gcd    =(BigFraction)null;    BigFraction    gcd    =(BigFraction)null;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
14	[BUG]  [BUGGY]  this(num,  0,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  numerator);	  this(num,    BigInteger.MIN_VALUE,    numerator);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
15	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(n.doubleValue());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(n.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(n.doubleValue());	  BigFraction    gcd    =    new    BigFraction(n.intValue());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
16	[BUG]  [BUGGY]  BigInteger  num  =  BigInteger.valueOf(num);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  BigInteger.valueOf(num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  BigInteger.valueOf(num);	  BigInteger    num    =    BigInteger.valueOf(den);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
17	[BUG]  [BUGGY]  BigInteger  num  =  BigInteger.valueOf(0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  BigInteger.valueOf(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  BigInteger.valueOf(0);	  BigInteger    num    =    BigInteger.valueOf(den);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
18	[BUG]  [BUGGY]  BigInteger  num  =  BigInteger.valueOf(den  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  BigInteger.valueOf(den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  BigInteger.valueOf(den  +  1);	  BigInteger    num    =    BigInteger.valueOf(den);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
19	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  +  2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  +  2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den  +  2);	  BigFraction    f    =    new    BigFraction(num,    den    +    1);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
20	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  *  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  *  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den  *  1);	  BigFraction    f    =    new    BigFraction(num,    den    +    1);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
21	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  +  3);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den  +  3);	  BigFraction    f    =    new    BigFraction(num,    den    +    1);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
22	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.ZERO;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.ZERO;	  BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.MIN_VALUE;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.MIN_VALUE;	  BigInteger    denominator    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  bigFraction  gcd  =(BigFraction)num;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  bigFraction  gcd  =(BigFraction)num;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigFraction  gcd  =(BigFraction)num;	          BigFraction    gcd    =(BigFraction)null;    BigFraction    gcd    =(BigFraction)num;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
25	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ONE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  BigInteger.ONE);	  this(num,    BigInteger.ONE);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
26	[BUG]  [BUGGY]  this(num,  numerator,  BigInteger.ONE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  BigInteger.ONE);	  this(num,    BigInteger.ONE);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
27	[BUG]  [BUGGY]  this(num,  BigInteger.ONE,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ONE,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ONE,  denominator);	  this(num,    BigInteger.ONE);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
28	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  numerator,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  numerator,  denominator);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  denominator,  gcd);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  gcd,  denominator);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  denominator,  numerator);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  this(num,  numerator,  den,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  den,  BigInteger.ZERO);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  this(num,  numerator,  gcd,  denominator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  gcd,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  gcd,  denominator,  BigInteger.ZERO);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  this(num,  den,  denominator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  denominator,  BigInteger.ZERO);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  this(num,  numerator,  denominator,  BigInteger.ZERO,  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  denominator,  BigInteger.ZERO,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  denominator,  BigInteger.ZERO,  den);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  bigInteger  gcd  =  new  BigInteger(num.getLength());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  bigInteger  gcd  =  new  BigInteger(num.getLength());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigInteger  gcd  =  new  BigInteger(num.getLength());	  BigInteger    gcd    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
37	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  numerator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  numerator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  int  den,  int  numerator)  {	  public    BigFraction(BigInteger    num,    int    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	1	None	replace
38	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  numerator,  int  denominator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  numerator,  int  denominator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  int  den,  int  numerator,  int  denominator)  {	  public    BigFraction(BigInteger    num,    int    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	1	None	replace
39	[BUG]  [BUGGY]  this(num,  numerator,  BigInteger.MIN_VALUE,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  BigInteger.MIN_VALUE,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  BigInteger.MIN_VALUE,  denominator);	  this(num,    BigInteger.MIN_VALUE,    denominator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  numerator,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MIN_VALUE,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  numerator,  denominator);	  this(num,    BigInteger.MIN_VALUE,    denominator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
41	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MIN_VALUE,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  denominator,  gcd);	  this(num,    BigInteger.MIN_VALUE,    denominator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
42	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)num.intValue();  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)num.intValue();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)num.intValue();	  BigFraction    gcd    =(BigFraction)num;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
43	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MAX_VALUE  +  1;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.MAX_VALUE  +  1;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MAX_VALUE  +  1;	  BigInteger    gcd    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MAX_VALUE  -  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.MAX_VALUE  -  1;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MAX_VALUE  -  1;	  BigInteger    gcd    =    BigInteger.MAX_VALUE;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)den.cloneTree();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)den.cloneTree();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)den.cloneTree();	  BigFraction    gcd    =(BigFraction)den.clone();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
46	[BUG]  [BUGGY]  bigFraction  gcd  =(BigFraction)den.clone();  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  bigFraction  gcd  =(BigFraction)den.clone();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigFraction  gcd  =(BigFraction)den.clone();	          BigFraction    gcd    =(BigFraction)null;    BigFraction    gcd    =(BigFraction)den.clone();    	non-compiled	[CE]  <identifier>  expected	88	None	replace
47	[BUG]  [BUGGY]  bigInteger  gcd  =  new  BigInteger(num.intValue());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  bigInteger  gcd  =  new  BigInteger(num.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigInteger  gcd  =  new  BigInteger(num.intValue());	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger    gcd    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
48	[BUG]  [BUGGY]  this(num,  0,  numerator,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  numerator,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  numerator,  BigInteger.MIN_VALUE);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
49	[BUG]  [BUGGY]  this(num,  0,  den,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  den,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  den,  BigInteger.MIN_VALUE);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
50	[BUG]  [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.MIN_VALUE,  denominator);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
51	[BUG]  [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  numerator);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.MIN_VALUE,  numerator);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
52	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)new  BigInteger(1);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)new  BigInteger(1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)new  BigInteger(1);	          BigFraction    gcd    =(BigFraction)null;    BigFraction    gcd    =(BigFraction)new    BigInteger(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
53	[BUG]  [BUGGY]  bigFraction  gcd  =(BigFraction)new  BigInteger(0);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  bigFraction  gcd  =(BigFraction)new  BigInteger(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigFraction  gcd  =(BigFraction)new  BigInteger(0);	          BigFraction    gcd    =(BigFraction)null;    BigFraction    gcd    =(BigFraction)new    BigInteger(0);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
54	[BUG]  [BUGGY]  BigDecimal  gcd  =  BigDecimal.valueOf(0);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigDecimal  gcd  =  BigDecimal.valueOf(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigDecimal  gcd  =  BigDecimal.valueOf(0);	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigDecimal    gcd    =    BigDecimal.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
55	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(2);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(2);	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger    gcd    =    BigInteger.valueOf(2);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
56	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  *  den);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  *  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue()  *  den);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue()    +    den);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
57	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  /  den);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  /  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue()  /  den);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue()    +    den);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
58	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den,  denominator);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue()    +    den);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
59	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  int  numerator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  int  numerator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  BigInteger  den,  int  numerator)  {	  public    BigFraction(BigInteger    num,    BigInteger    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	2	None	replace
60	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  long  denominator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  long  denominator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  BigInteger  den,  long  denominator)  {	  public    BigFraction(BigInteger    num,    BigInteger    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	2	None	replace
61	[BUG]  [BUGGY]  this(num,  numerator,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  denominator);	  this(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
62	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  numerator,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ZERO,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  numerator,  denominator);	  this(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
63	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ZERO,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  denominator,  gcd);	  this(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
64	[BUG]  [BUGGY]  super(num,  gcd,  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  gcd,  denominator);	  super(num,    gcd);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
65	[BUG]  [BUGGY]  super(num,  gcd,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  gcd,  numerator);	  super(num,    gcd);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
66	[BUG]  [BUGGY]  super(num,  gcd,  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  gcd,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  gcd,  den);	  super(num,    gcd);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
67	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue(),  den.intValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue(),  den.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue(),  den.intValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
68	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.doubleValue(),  den.doubleValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.doubleValue(),  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.doubleValue(),  den.doubleValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
69	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue()  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue(),  den.intValue()  +  1);	  BigFraction    f    =    new    BigFraction(num,    den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
70	[BUG]  [BUGGY]  super(num,  den,  true);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  true);	  super(num,    den,    false);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
71	[BUG]  [BUGGY]  super(den,  num,  false);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(den,  num,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(den,  num,  false);	  super(num,    den,    false);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
72	[BUG]  [BUGGY]  super(num,  gcd,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  super(num,  gcd,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  gcd,  false);	  super(num,    den,    false);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
73	[BUG]  [BUGGY]  super(num,  numerator,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  super(num,  numerator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  numerator,  false);	  super(num,    den,    false);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
74	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den  +  1);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
75	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den,  num);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(den,  num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(den,  num);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
76	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  int  denominator)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  int  denominator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  int  den,  int  denominator)  {	  Public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
77	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  long  serialVersionUID)  {  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]        [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  long  serialVersionUID)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  int  den,  long  serialVersionUID)  {	  Public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
78	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  long  serialVersion)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  long  serialVersion)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  int  den,  long  serialVersion)  {	  Public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
79	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(num.getLength());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  new  BigInteger(num.getLength());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(num.getLength());	  BigInteger    num    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
80	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(den.getBooleanValue());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  new  BigInteger(den.getBooleanValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(den.getBooleanValue());	  BigInteger    num    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
81	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  new  BigInteger(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(0);	  BigInteger    num    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
82	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(den.getLength()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  new  BigInteger(den.getLength()  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(den.getLength()  +  1);	  BigInteger    num    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
83	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue(),  den,  denominator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue(),  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.intValue(),  den,  denominator);	  BigInteger    gcd    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
84	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.intValue(),  num);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.intValue(),  num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.intValue(),  num);	  BigInteger    gcd    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
85	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.longValue(),  den);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.longValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.longValue(),  den);	  BigInteger    gcd    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
86	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue(),  den  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue(),  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.intValue(),  den  +  1);	  BigInteger    gcd    =    new    BigInteger(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
87	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  1));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  1));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  1));	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
88	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  0),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  0),  numerator);	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
89	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  0),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  0),  denominator);	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
90	[BUG]  [BUGGY]  this(num,  0,  numerator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  numerator,  BigInteger.ZERO);	  this(num,    0,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
91	[BUG]  [BUGGY]  this(num,  0,  den,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  den,  BigInteger.ZERO);	  this(num,    0,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
92	[BUG]  [BUGGY]  this(num,  0,  BigInteger.ZERO,  numerator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.ZERO,  numerator);	  this(num,    0,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
93	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(num,  den  +  1);	  BigInteger    gcd    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
94	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den  *  2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den  *  2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(num,  den  *  2);	  BigInteger    gcd    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
95	[BUG]  [BUGGY]  super(num,  denominator,  den);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  denominator,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  denominator,  den);	  super(num,    den,    numerator);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
96	[BUG]  [BUGGY]  super(num,  des,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  des,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  des,  denominator);	  super(num,    den,    numerator);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
97	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  numerator,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den),  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  numerator,  denominator);	  super(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den),  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  denominator,  gcd);	  super(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  gcd,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den),  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  gcd,  denominator);	  super(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
100	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  gcd),  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  gcd),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  gcd),  denominator);	  super(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
101	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)new  BigInteger(2);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)new  BigInteger(2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)new  BigInteger(2);	  BigFraction    gcd    =(BigFraction)new    BigInteger(0);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
102	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den.intValue(),  numerator);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den.intValue(),  numerator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den.intValue(),  numerator);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue(),    denominator);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
103	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue(),  denominator);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue(),  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue(),  denominator);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue(),    denominator);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
104	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  denominator.intValue(),  den);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  denominator.intValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  denominator.intValue(),  den);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue(),    denominator);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
105	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue()  *  den.intValue());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue()  *  den.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.intValue()  *  den.intValue());	  BigInteger    gcd    =    new    BigInteger(num.intValue()    +    den.intValue());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
106	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.intValue()  +  num.intValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.intValue()  +  num.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.intValue()  +  num.intValue());	  BigInteger    gcd    =    new    BigInteger(num.intValue()    +    den.intValue());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
107	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.longValue()  +  den.longValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.longValue()  +  den.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.longValue()  +  den.longValue());	  BigInteger    gcd    =    new    BigInteger(num.intValue()    +    den.intValue());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
108	[BUG]  [BUGGY]  bigFraction  f  =  new  BigFraction(num,  den);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  bigFraction  f  =  new  BigFraction(num,  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	bigFraction  f  =  new  BigFraction(num,  den);	  BigFraction    f    =    new    BigFraction(den,    num);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
109	[BUG]  [BUGGY]  this(num,  den,  BigInteger.MIN_VALUE,  denominator);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  BigInteger.MIN_VALUE,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  BigInteger.MIN_VALUE,  denominator);	  this(num,    den,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
110	[BUG]  [BUGGY]  this(num,  den,  0,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  0,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  0,  BigInteger.MIN_VALUE);	  this(num,    den,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
111	[BUG]  [BUGGY]  this(num,  gcd,  den,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  this(num,  gcd,  den,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  gcd,  den,  BigInteger.MIN_VALUE);	  this(num,    den,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
112	[BUG]  [BUGGY]  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);	          BigInteger    gcd    =    BigInteger.valueOf(0);    AssertionError    <    BigInteger>    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
113	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE;  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE;  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MIN_VALUE;  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);	          BigInteger    gcd    =    BigInteger.valueOf(0);    AssertionError    <    BigInteger>    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
114	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO;  AssertionError  <  BigInteger>  gcd  =  BigInteger.ZERO;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO;  AssertionError  <  BigInteger>  gcd  =  BigInteger.ZERO;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.ZERO;  AssertionError  <  BigInteger>  gcd  =  BigInteger.ZERO;	          BigInteger    gcd    =    BigInteger.valueOf(0);    AssertionError    <    BigInteger>    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
115	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO;  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO;  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.ZERO;  AssertionError  <  BigInteger>  gcd  =  BigInteger.valueOf(0);	          BigInteger    gcd    =    BigInteger.valueOf(0);    AssertionError    <    BigInteger>    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
116	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.doubleValue());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.doubleValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
117	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  denominator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue(),  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue(),  denominator);	  BigFraction    f    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
118	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue()  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue()  +  1);	  BigFraction    f    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
119	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.floatValue());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.floatValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.floatValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
120	[BUG]  [BUGGY]  this(num,  numerator,  BigInteger.ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  BigInteger.ZERO,  denominator);	  this(num,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
121	[BUG]  [BUGGY]  this(num,  denominator,  den,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  denominator,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  denominator,  den,  BigInteger.ZERO);	  this(num,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
122	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  gcd),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  gcd),  numerator);	  this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
123	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  denominator),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  denominator),  numerator);	  this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
124	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)null;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =(BigInteger)null;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =(BigInteger)null;	          BigFraction    gcd    =(BigFraction)null;    BigInteger    gcd    =(BigInteger)null;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
125	[BUG]  [BUGGY]  BigFraction  gcd  =(BigInteger)null;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigInteger)null;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigInteger)null;	          BigFraction    gcd    =(BigFraction)null;    BigInteger    gcd    =(BigInteger)null;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
126	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  ZERO));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  ZERO));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
127	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  denominator));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  0,  denominator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  0,  denominator));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
128	[BUG]  [BUGGY]  this(num,  new  BigInteger(numerator,  denominator));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(numerator,  denominator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(numerator,  denominator));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
129	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  gcd));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  gcd));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
130	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.doubleValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.doubleValue());	  BigFraction    gcd    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
131	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue(),  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue(),  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.intValue(),  denominator);	  BigFraction    gcd    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
132	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  +  1);	  BigFraction    gcd    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
133	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.longValue());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.longValue());	  BigFraction    gcd    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
134	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.longValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.longValue());	  BigFraction    gcd    =    new    BigFraction(den.intValue());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
135	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(den.doubleValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(den.doubleValue());	  BigFraction    gcd    =    new    BigFraction(den.intValue());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
136	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.longValue());	  BigFraction    f    =    new    BigFraction(den.intValue());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
137	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  den,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MIN_VALUE,  den,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  den,  denominator);	  this(num,    BigInteger.MIN_VALUE,    den);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
138	[BUG]  [BUGGY]  this(num,  numerator,  BigInteger.MIN_VALUE,  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  BigInteger.MIN_VALUE,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  BigInteger.MIN_VALUE,  den);	  this(num,    BigInteger.MIN_VALUE,    den);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
139	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  den,  gcd);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MIN_VALUE,  den,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  den,  gcd);	  this(num,    BigInteger.MIN_VALUE,    den);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
140	[BUG]  [BUGGY]  super(num,  den,  denominator,  gcd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  denominator,  gcd);	  super(num,    den,    gcd);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
141	[BUG]  [BUGGY]  super(num,  den,  gcd,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  gcd,  denominator);	  super(num,    den,    gcd);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
142	[BUG]  [BUGGY]  super(num,  den,  gcd,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  gcd,  numerator);	  super(num,    den,    gcd);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
143	[BUG]  [BUGGY]  super(num,  den,  numerator,  gcd);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  numerator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  numerator,  gcd);	  super(num,    den,    gcd);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
144	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  deserator);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  deserator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  deserator);	  BigFraction    f    =    new    BigFraction(num,    den,    gcd);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
145	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  gcd,  denominator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  gcd,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  gcd,  denominator);	  BigFraction    f    =    new    BigFraction(num,    den,    gcd);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
146	[BUG]  [BUGGY]  this(num,  deserator,  BigInteger.ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(num,  deserator,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  deserator,  BigInteger.ZERO,  denominator);	  this(num,    deserator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
147	[BUG]  [BUGGY]  BigInteger  denominator  =  new  BigInteger(num);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  new  BigInteger(num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  new  BigInteger(num);	  BigInteger    denominator    =    BigInteger.valueOf(den);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
148	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  gcd,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den),  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  gcd,  numerator);	  super(num,    new    BigInteger(den),    gcd);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
149	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.doubleValue(),  den.doubleValue());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.doubleValue(),  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.doubleValue(),  den.doubleValue());	  BigFraction    f    =    new    BigFraction(num.longValue(),    den.longValue());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
150	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue()  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.longValue(),  den.longValue()  +  1);	  BigFraction    f    =    new    BigFraction(num.longValue(),    den.longValue());    	non-compiled	[CE]  <identifier>  expected	101	None	replace
151	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  1);	  BigFraction    f    =    new    BigFraction(num,    den,    DEDENOR);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
152	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR,  denominator);	  BigFraction    f    =    new    BigFraction(num,    den,    DEDENOR);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
153	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  3);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  3);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  3);	  BigFraction    f    =    new    BigFraction(num,    den,    DEDENOR);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
154	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  gcd),  den);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  gcd),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  gcd),  den);	  super(num,    new    BigInteger(den),    den);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
155	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  *  den);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  *  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  *  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    +    den);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
156	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  /  den);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  /  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  /  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    +    den);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
157	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  -  den);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  -  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  -  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    +    den);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
158	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  +  den,  denominator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  +  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  +  den,  denominator);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    +    den);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
159	[BUG]  [BUGGY]  this(num,  numerator,  denominator,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  denominator,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  denominator,  BigInteger.MIN_VALUE);	  this(num,    numerator,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
160	[BUG]  [BUGGY]  this(num,  denominator,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  denominator,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  denominator,  BigInteger.MIN_VALUE);	  this(num,    numerator,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
161	[BUG]  [BUGGY]  this(num,  numerator,  den,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  den,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  den,  BigInteger.MIN_VALUE);	  this(num,    numerator,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
162	[BUG]  [BUGGY]  BigFraction  gcd  =  BigInteger.valueOf(0);  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  BigInteger.valueOf(0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  BigInteger.valueOf(0);	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigFraction    gcd    =    BigInteger.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
163	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)this.denominator.clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)this.denominator.clone();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)this.denominator.clone();	  BigFraction    gcd    =(BigFraction)n.clone();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
164	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  +  1);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
165	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  *  2);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getLength()  *  2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getLength()  *  2);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
166	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  BigInteger.ZERO,  denominator);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
167	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ZERO,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  BigInteger.ZERO,  numerator);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
168	[BUG]  [BUGGY]  this(num,  den,  0,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  den,  0,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  den,  0,  BigInteger.ZERO);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
169	[BUG]  [BUGGY]  super(num,  numerator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  numerator,  BigInteger.ZERO);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
170	[BUG]  [BUGGY]  super(num,  den,  0,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  0,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  0,  BigInteger.ZERO);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
171	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ZERO,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.ZERO,  numerator);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
172	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.ZERO,  denominator);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
173	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den,  denominator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den,  denominator);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue(),    den);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
174	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.doubleValue(),  num);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.doubleValue(),  num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.doubleValue(),  num);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue(),    den);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
175	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue(),  den  +  1);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue(),    den);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
176	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num);  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num);	  BigInteger    gcd    =    BigInteger.ZERO;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
177	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  denominator);	  BigFraction    gcd    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
178	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  numerator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  numerator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  numerator);	  BigFraction    gcd    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
179	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.longValue(),  den);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.longValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.longValue(),  den);	  BigFraction    gcd    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
180	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  false);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.intValue(),  den,  false);	  BigFraction    gcd    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
181	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  numerator,  denominator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  numerator,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  numerator,  denominator);	  BigFraction    f    =    new    BigFraction(num,    den,    denominator);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
182	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  0,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  0,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  0,  denominator);	  BigFraction    f    =    new    BigFraction(num,    den,    denominator);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
183	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  denominator,  den);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  denominator,  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  denominator,  den);	  BigFraction    f    =    new    BigFraction(num,    den,    denominator);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
184	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(num.intValue(),  den.intValue());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  num  =  new  BigFraction(num.intValue(),  den.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(num.intValue(),  den.intValue());	  BigFraction    num    =    new    BigFraction(den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
185	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(den.doubleValue(),  den.doubleValue());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  num  =  new  BigFraction(den.doubleValue(),  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(den.doubleValue(),  den.doubleValue());	  BigFraction    num    =    new    BigFraction(den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
186	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(den.intValue(),  den.intValue(),  denominator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  num  =  new  BigFraction(den.intValue(),  den.intValue(),  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(den.intValue(),  den.intValue(),  denominator);	  BigFraction    num    =    new    BigFraction(den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
187	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(den.longValue(),  den.longValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  num  =  new  BigFraction(den.longValue(),  den.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(den.longValue(),  den.longValue());	  BigFraction    num    =    new    BigFraction(den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
188	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  des,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  des,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  des,  denominator);	  BigFraction    f    =    new    BigFraction(num,    den,    numerator);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
189	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  gcd,  numerator);	  this(num,    new    BigInteger(den),    gcd);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
190	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE  +  1;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MIN_VALUE  +  1;	  BigInteger    gcd    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
191	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE  -  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.MIN_VALUE  -  1;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.MIN_VALUE  -  1;	  BigInteger    gcd    =    BigInteger.MIN_VALUE;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
192	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den,  denominator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den,  denominator);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
193	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.longValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.longValue(),  den);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
194	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den,  numerator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den,  numerator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den,  numerator);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
195	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den,  false);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den,  false);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
196	[BUG]  [BUGGY]  super(num,  numerator,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  numerator,  denominator);	  super(num,    den,    denominator);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
197	[BUG]  [BUGGY]  super(num,  gcd,  den,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  gcd,  den,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  gcd,  den,  denominator);	  super(num,    den,    denominator);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
198	[BUG]  [BUGGY]  super(num,  numerator,  den);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  numerator,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  numerator,  den);	  super(num,    den,    denominator);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
199	[BUG]  [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.MAX_VALUE,  denominator);	  super(num,    den,    BigInteger.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
200	[BUG]  [BUGGY]  super(num,  den,  0,  BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  0,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  0,  BigInteger.MAX_VALUE);	  super(num,    den,    BigInteger.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
201	[BUG]  [BUGGY]  super(num,  numerator,  BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  numerator,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  numerator,  BigInteger.MAX_VALUE);	  super(num,    den,    BigInteger.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
202	[BUG]  [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE,  numerator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.MAX_VALUE,  numerator);	  super(num,    den,    BigInteger.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
203	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  gcd),  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  gcd),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  gcd),  numerator);	  super(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
204	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  denominator),  numerator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  denominator),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  denominator),  numerator);	  super(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
205	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.doubleValue()  +  num);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(den.doubleValue()  +  num);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(den.doubleValue()  +  num);	  BigInteger    gcd    =    new    BigInteger(num.doubleValue()    +    den);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
206	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.longValue());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.longValue());	  BigInteger    gcd    =    new    BigInteger(den.intValue());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
207	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  BigInteger.valueOf(den));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  BigInteger.valueOf(den));	  super(num,    gcd);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
208	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.ZERO  +  1;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.ZERO  +  1;	  BigInteger    gcd    =    BigInteger.ZERO;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
209	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.ONE;  [CE]  <identifier>  expected  [FE]          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.ONE;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.ONE;	  BigInteger    gcd    =    BigInteger.ZERO;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
210	[BUG]  [BUGGY]  this(num,  BigInteger.ONE,  numerator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ONE,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ONE,  numerator);	  this(num,    BigInteger.ZERO,    numerator);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
211	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.longValue());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.longValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
212	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ONE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.ONE);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
213	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  BigInteger  den)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  BigInteger  den)  {	  Public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
214	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  der,  denominator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  der,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  der,  denominator);	  BigFraction    f    =    new    BigFraction(num,    den,    numerator);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
215	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  gcd,  numerator);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  gcd,  numerator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  gcd,  numerator);	  BigFraction    f    =    new    BigFraction(num,    den,    gcd);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
216	[BUG]  [BUGGY]  super(num,  des,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  des,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  des,  false);	  super(num,    den,    false);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
217	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(2);	  BigInteger    denominator    =    BigInteger.valueOf(1);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
218	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  den,  gcd);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den),  den,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  den,  gcd);	  super(num,    new    BigInteger(den),    den);    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
219	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getStart(),  den);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getStart(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getStart(),  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength(),    den);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
220	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getChars(),  den);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getChars(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getChars(),  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength(),    den);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
221	[BUG]  [BUGGY]  this(num,  deserator,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  deserator,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  deserator,  BigInteger.MIN_VALUE);	  this(num,    numerator,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
222	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(num.longValue(),  den.longValue());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  num  =  new  BigFraction(num.longValue(),  den.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(num.longValue(),  den.longValue());	  BigFraction    num    =    new    BigFraction(den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
223	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  denominator);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  ZERO),  denominator);	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
224	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  0,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ZERO,  0,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  0,  denominator);	  this(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
225	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  denominator,  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ZERO,  denominator,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  denominator,  den);	  this(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
226	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)den  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)den  +  1;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)den  +  1;	  BigFraction    gcd    =(BigFraction)den;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
227	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getHeight());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getHeight());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getHeight());	  BigInteger    gcd    =    new    BigInteger(num.getLength()    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
228	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getStart());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getStart());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getStart());	  BigInteger    gcd    =    new    BigInteger(num.getLength()    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
229	[BUG]  [BUGGY]  this(num,  deserator,  denominator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(num,  deserator,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  deserator,  denominator,  BigInteger.ZERO);	  this(num,    deserator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
230	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)gen.clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)gen.clone();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)gen.clone();	  BigFraction    gcd    =(BigFraction)n.clone();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
231	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  -  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  -  1);	  BigFraction    gcd    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
232	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)n.getValue();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =(BigInteger)n.getValue();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =(BigInteger)n.getValue();	  BigInteger    gcd    =(BigInteger)n.clone();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
233	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getStart()  +  den);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getStart()  +  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getStart()  +  den);	  BigInteger    gcd    =    new    BigInteger(num.getLength()    +    den);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
234	[BUG]  [BUGGY]  this(num,  0,  BigInteger.ZERO,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.ZERO,  denominator);	  this(num,    0,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
235	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)den.getValue();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =(BigInteger)den.getValue();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =(BigInteger)den.getValue();	  BigInteger    gcd    =(BigInteger)den.clone();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
236	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.floatValue(),  den.floatValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.floatValue(),  den.floatValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.floatValue(),  den.floatValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
237	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.longValue(),  den.longValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.longValue(),  den.longValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.longValue(),  den.longValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
238	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den  -  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den  -  1);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
239	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.intValue(),  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.intValue(),  den  +  1);	  BigFraction    gcd    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
240	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  0,  denominator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den),  0,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den),  0,  denominator);	  super(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
241	[BUG]  [BUGGY]  super(num,  0,  BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  0,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  0,  BigInteger.MAX_VALUE);	  super(num,    den,    BigInteger.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
242	[BUG]  [BUGGY]  super(num,  new  BigInteger(den  -  1),  numerator);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den  -  1),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den  -  1),  numerator);	  super(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
243	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  0,  denominator);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MIN_VALUE,  0,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  0,  denominator);	  this(num,    BigInteger.MIN_VALUE,    denominator);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
244	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  0);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  0);	  BigFraction    f    =    new    BigFraction(num,    den,    DEDENOR);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
245	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  2);	  BigFraction    f    =    new    BigFraction(num,    den,    DEDENOR);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
246	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.doubleValue(),  den.doubleValue(),  denominator);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.doubleValue(),  den.doubleValue(),  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.doubleValue(),  den.doubleValue(),  denominator);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den.intValue(),    denominator);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
247	[BUG]  [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  1);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.MIN_VALUE,  1);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
248	[BUG]  [BUGGY]  this(num,  BigInteger.MIN_VALUE,  0,  den);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MIN_VALUE,  0,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MIN_VALUE,  0,  den);	  this(num,    BigInteger.MIN_VALUE,    den);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
249	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  2));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  2));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  2));	  super(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
250	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.intValue(),  den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.intValue(),  den  +  1);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
251	[BUG]  [BUGGY]  this(num,  numerator,  denominator,  BigInteger.ONE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  numerator,  denominator,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  numerator,  denominator,  BigInteger.ONE);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
252	[BUG]  [BUGGY]  this(num,  0,  denominator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  denominator,  BigInteger.ZERO);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
253	[BUG]  [BUGGY]  this(num,  denominator,  numerator,  BigInteger.ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  denominator,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  denominator,  numerator,  BigInteger.ZERO);	  this(num,    numerator,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
254	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  denominator,  boolean  global)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  denominator,  boolean  global)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  int  den,  int  denominator,  boolean  global)  {	  public    BigFraction(BigInteger    num,    int    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	1	None	replace
255	[BUG]  [BUGGY]  this(num,  BigInteger.MAX_VALUE,  denominator);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.MAX_VALUE,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.MAX_VALUE,  denominator);	  this(num,    BigInteger.MIN_VALUE,    numerator);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
256	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  der);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  der);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  der);	  BigFraction    f    =    new    BigFraction(den,    num);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
257	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  int  deserator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  den,  int  deserator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  BigInteger  den,  int  deserator)  {	  public    BigFraction(BigInteger    num,    BigInteger    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	2	None	replace
258	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  BigInteger  den,  int  denominator)  {  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  Public  BigFraction(BigInteger  num,  BigInteger  den,  int  denominator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  BigInteger  den,  int  denominator)  {	  public    BigFraction(BigInteger    num,    BigInteger    den,    int    denominator)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
259	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(den.getChars());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  new  BigInteger(den.getChars());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(den.getChars());	  BigInteger    num    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
260	[BUG]  [BUGGY]  BigInteger  num  =  new  BigInteger(den.getStart());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  num  =  new  BigInteger(den.getStart());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  num  =  new  BigInteger(den.getStart());	  BigInteger    num    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
261	[BUG]  [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.MIN_VALUE,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.MIN_VALUE,  BigInteger.MAX_VALUE);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
262	[BUG]  [BUGGY]  this(num,  0,  BigInteger.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  BigInteger.MAX_VALUE);	  this(num,    0,    BigInteger.MIN_VALUE);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
263	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  numerator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  numerator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  numerator);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
264	[BUG]  [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  gcd);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigInteger  denominator  =  BigInteger.valueOf(num,  den,  gcd);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  denominator  =  BigInteger.valueOf(num,  den,  gcd);	  BigInteger    denominator    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
265	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getUpperBound());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getUpperBound());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getUpperBound());	  BigInteger    gcd    =    new    BigInteger(den.getLength());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
266	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)this.denominator;  [CE]  <identifier>  expected  [FE]        AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)this.denominator;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)this.denominator;	          BigFraction    gcd    =(BigFraction)null;    BigFraction    gcd    =(BigFraction)null;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
267	[BUG]  [BUGGY]  BigFraction  num  =  new  BigFraction(num.doubleValue(),  den.doubleValue());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  num  =  new  BigFraction(num.doubleValue(),  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  num  =  new  BigFraction(num.doubleValue(),  den.doubleValue());	  BigFraction    num    =    new    BigFraction(den.intValue(),    den.intValue());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
268	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num.doubleValue(),  den);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num.doubleValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num.doubleValue(),  den);	  BigFraction    f    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
269	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO,  denominator,  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  BigInteger.ZERO,  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  BigInteger.ZERO,  denominator,  numerator);	  this(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
270	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getChars());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.getChars());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.getChars());	  BigInteger    gcd    =    new    BigInteger(num.getLength()    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
271	[BUG]  [BUGGY]  BigDecimal  gcd  =  BigDecimal.ZERO;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigDecimal  gcd  =  BigDecimal.ZERO;  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigDecimal  gcd  =  BigDecimal.ZERO;	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigDecimal    gcd    =    BigDecimal.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
272	[BUG]  [BUGGY]  BigDecimal  gcd  =  BigDecimal.valueOf(1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigDecimal  gcd  =  BigDecimal.valueOf(1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigDecimal  gcd  =  BigDecimal.valueOf(1);	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigDecimal    gcd    =    BigDecimal.valueOf(0);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
273	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR,  DEDENOR);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR,  DEDENOR);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  DEDENOR,  DEDENOR);	  BigFraction    f    =    new    BigFraction(num,    den,    DEDENOR);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
274	[BUG]  [BUGGY]  this(num,  new  BigInteger(den  -  1),  numerator);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den  -  1),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den  -  1),  numerator);	  this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
275	[BUG]  [BUGGY]  super(num,  numerator,  gcd);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  super(num,  numerator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  numerator,  gcd);	  super(num,    den,    gcd);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
276	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  Float.NaN));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den,  Float.NaN));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den,  Float.NaN));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
277	[BUG]  [BUGGY]  super(num,  den,  numerator,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  numerator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  numerator,  false);	  super(num,    den,    false);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
278	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  deser,  int  denominator)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  BigInteger  deser,  int  denominator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  BigInteger  deser,  int  denominator)  {	  public    BigFraction(BigInteger    num,    BigInteger    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	2	None	replace
279	[BUG]  [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  boolean  denominator)  {  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]        [BUGGY]  Public  BigFraction(BigInteger  num,  int  den,  boolean  denominator)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	Public  BigFraction(BigInteger  num,  int  den,  boolean  denominator)  {	  Public    BigFraction(BigInteger    num,    int    den)    {    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
280	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  den);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  den);	  this(num,    new    BigInteger(den),    gcd);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
281	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  den,  gcd);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  this(num,  new  BigInteger(den),  den,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  new  BigInteger(den),  den,  gcd);	  this(num,    new    BigInteger(den),    gcd);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
282	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue()  +  1,  den.intValue());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den.intValue()  +  1,  den.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den.intValue()  +  1,  den.intValue());	  BigFraction    f    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
283	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue()  +  den);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.intValue()  +  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.intValue()  +  den);	          BigInteger    gcd    =    BigInteger.valueOf(0);    BigInteger    gcd    =    new    BigInteger(num.intValue());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
284	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  Float.NaN));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  super(num,  new  BigInteger(den,  Float.NaN));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  new  BigInteger(den,  Float.NaN));	  super(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
285	[BUG]  [BUGGY]  this(num,  0,  den);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  this(num,  0,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	this(num,  0,  den);	  this(num,    0,    BigInteger.ZERO);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
286	[BUG]  [BUGGY]  BigFraction  gcd  =(bigFraction  ==  null)?  null  :  bigFraction.clone();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(bigFraction  ==  null)?  null  :  bigFraction.clone();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(bigFraction  ==  null)?  null  :  bigFraction.clone();	  BigFraction    gcd    =(BigFraction)den.clone();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
287	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(den.intValue(),  den.intValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(den.intValue(),  den.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(den.intValue(),  den.intValue());	  BigFraction    gcd    =    new    BigFraction(den.intValue());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
288	[BUG]  [BUGGY]  super(num,  den,  BigInteger.MIN_VALUE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  super(num,  den,  BigInteger.MIN_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	super(num,  den,  BigInteger.MIN_VALUE);	  super(num,    den,    BigInteger.MAX_VALUE);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
289	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.doubleValue(),  den);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num.doubleValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num.doubleValue(),  den);	  BigFraction    gcd    =    new    BigFraction(num.intValue(),    den);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
290	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(den  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(den  +  1);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(den  +  1);	  BigInteger    gcd    =    BigInteger.valueOf(den);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
291	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  *  2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den  *  2);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den  *  2);	  BigFraction    f    =    new    BigFraction(num,    den    +    1);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
292	[BUG]  [BUGGY]  BigFraction  gcd  =(BigFraction)bigInteger.clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =(BigFraction)bigInteger.clone();  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =(BigFraction)bigInteger.clone();	  BigFraction    gcd    =(BigFraction)n.clone();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
293	[BUG]  [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  denominator,  boolean  constant)  {  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]        [BUGGY]  public  BigFraction(BigInteger  num,  int  den,  int  denominator,  boolean  constant)  {  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	public  BigFraction(BigInteger  num,  int  den,  int  denominator,  boolean  constant)  {	  public    BigFraction(BigInteger    num,    int    den,    int    denominator)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger)	1	None	replace
294	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  +  1,  den.intValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  +  1,  den.intValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(num,  den.intValue()  +  1,  den.intValue());	  BigFraction    gcd    =    new    BigFraction(num,    den.intValue());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
295	[BUG]  [BUGGY]  BigFraction  gcd  =  new  BigFraction(n.intValue(),  den);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]        [BUGGY]  BigFraction  gcd  =  new  BigFraction(n.intValue(),  den);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  gcd  =  new  BigFraction(n.intValue(),  den);	  BigFraction    gcd    =    new    BigFraction(n.intValue());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
296	[BUG]  [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den,  denominator);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  BigInteger.valueOf(num,  den,  denominator);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  BigInteger.valueOf(num,  den,  denominator);	  BigInteger    gcd    =    BigInteger.valueOf(num,    den);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
297	[BUG]  [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den.doubleValue());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den.doubleValue());  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigInteger  gcd  =  new  BigInteger(num.doubleValue()  +  den.doubleValue());	  BigInteger    gcd    =    new    BigInteger(num.intValue()    +    den.intValue());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
298	[BUG]  [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  denominator,  gcd);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  BigFraction  f  =  new  BigFraction(num,  den,  denominator,  gcd);  [BUGGY]      public  BigFraction(BigInteger  num,  BigInteger  den)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	119	119	2	replace	BigFraction  f  =  new  BigFraction(num,  den,  denominator,  gcd);	  BigFraction    f    =    new    BigFraction(num,    den,    denominator);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
