bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(num,  den,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  den,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  denominator);	      this(num,    den,    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	9	None	replace
2	[BUG]  [BUGGY]  this(num,  des,  denominator);  [CE]  cannot  find  symbol  des  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  des,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des,  denominator);	      this(num,    den,    numerator);    	non-compiled	[CE]  cannot  find  symbol  des	9	None	replace
3	[BUG]  [BUGGY]  this(num,  der,  denominator);  [CE]  cannot  find  symbol  der  [FE]                  AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  der,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  der,  denominator);	      this(num,    den,    numerator);    	non-compiled	[CE]  cannot  find  symbol  der	9	None	replace
4	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats)	3	None	replace
5	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)	3	None	replace
6	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats)  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  denominator,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats)	3	None	replace
7	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)  [FE]                  AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  numerator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)	3	None	replace
8	[BUG]  [BUGGY]  this(num,  den);  [CE]  recursive  constructor  invocation  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  den);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	non-compiled	[CE]  recursive  constructor  invocation	15	None	replace
9	[BUG]  [BUGGY]  this.num  =  num.getBigInteger();  [CE]  cannot  find  symbol  num  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this.num  =  num.getBigInteger();  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  num.getBigInteger();	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	non-compiled	[CE]  cannot  find  symbol  num	15	None	replace
10	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_DECEMBER);  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_DECEMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_DECEMBER);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	15	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	17	2	add
12	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	17	2	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	17	2	add
14	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	17	2	add
15	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  If(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  If(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    If(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	non-compiled	[CE]  ';'  expected	17	None	add
16	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  }	  	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	17	None	add
17	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator));  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  denominator));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator));	      this(num,    new    BigInteger(den));    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	6	None	replace
18	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd));  [CE]  cannot  find  symbol  gcd  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  gcd));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd));	      this(num,    new    BigInteger(den));    	non-compiled	[CE]  cannot  find  symbol  gcd	6	None	replace
19	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  0));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0));	      this(num,    new    BigInteger(den));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	6	None	replace
20	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  100));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  100));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  100));	      this(num,    new    BigInteger(den));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	6	None	replace
21	[BUG]  [BUGGY]  this.num  =  num;  [CE]  cannot  find  symbol  num  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this.num  =  num;  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  num;	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  cannot  find  symbol  num	18	None	replace
22	[BUG]  [BUGGY]  this(num,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  numerator);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	18	None	replace
23	[BUG]  [BUGGY]  super(num,  Den);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  Den);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  Den);	      super(num);    	non-compiled	[CE]  cannot  find  symbol  Den	11	None	replace
24	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	2	None	replace
25	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  gcd);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  gcd);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	2	None	replace
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	compilable	  [FE]  AssertionError  	2	2	replace
27	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	compilable	  [FE]  AssertionError  	2	2	replace
28	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den),  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  denominator);	      this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	10	None	replace
29	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  den);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  denominator),  den);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  den);	      this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	10	None	replace
30	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  numerator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  denominator),  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  numerator);	      this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	10	None	replace
31	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	1	None	replace
32	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	1	None	replace
33	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	1	None	replace
34	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  den,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	1	None	replace
35	[BUG]  [BUGGY]      this(num,  new  BigInteger(den.intValue()),  numerator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]      this(num,  new  BigInteger(den.intValue()),  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	        this(num,  new  BigInteger(den.intValue()),  numerator);	  	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	4	None	add
36	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1));  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()  +  1));	      this(num,    new    BigInteger(den.intValue()));    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	8	None	replace
37	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  gcd);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den.intValue()),  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  gcd);	      this(num,    new    BigInteger(den.intValue()));    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	8	None	replace
38	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  den);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den.intValue()),  den);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  den);	      this(num,    new    BigInteger(den.intValue()));    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	8	None	replace
39	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  MutableFormats  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	14	None	replace
40	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  gcd);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  gcd);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	14	None	replace
41	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator);  [CE]  cannot  find  symbol  MutableFormats  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	14	None	replace
42	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	13	None	replace
43	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	13	None	replace
44	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  den);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  den);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  den);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  cannot  find  symbol  gcd	13	None	replace
45	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	13	None	replace
46	[BUG]  [BUGGY]  super(num,  den,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  den,  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  gcd);	      super(num,    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	7	None	replace
47	[BUG]  [BUGGY]  super(num,  den,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  den,  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  numerator);	      super(num,    den);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	7	None	replace
48	[BUG]  [BUGGY]  super(num,  den,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  den,  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  denominator);	      super(num,    den);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	7	None	replace
49	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ZERO);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  den,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  BigInteger.ZERO);	      super(num,    den);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	7	None	replace
50	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ZERO);  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  den,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  BigInteger.ZERO);	      this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)	19	None	replace
51	[BUG]  [BUGGY]  this(num,  denominator,  BigInteger.ZERO);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  denominator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  denominator,  BigInteger.ZERO);	      this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	19	None	replace
52	[BUG]  [BUGGY]  this(num,  gcd,  numerator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  gcd,  numerator,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  gcd,  numerator,  BigInteger.ZERO);	      this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  gcd	19	None	replace
53	[BUG]  [BUGGY]  this(num,  des,  BigInteger.ZERO);  [CE]  cannot  find  symbol  des  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  des,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des,  BigInteger.ZERO);	      this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  des	19	None	replace
54	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  false);  [CE]  cannot  find  symbol  gcd  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  gcd),  false);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd),  false);	      this(num,    new    BigInteger(den),    false);    	non-compiled	[CE]  cannot  find  symbol  gcd	12	None	replace
55	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  numerator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den),  numerator,  false);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  numerator,  false);	      this(num,    new    BigInteger(den),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	replace
56	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  false,  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den),  false,  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  false,  numerator);	      this(num,    new    BigInteger(den),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	replace
57	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  true);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den),  true);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  true);	      this(num,    new    BigInteger(den),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	replace
58	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_QUARTERS);  [CE]  cannot  find  symbol  ZERO_QUARTERS  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_QUARTERS);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_QUARTERS);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARTERS	16	None	replace
59	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ONE);	  MathUtils.checkNotNull(num,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	1	None	replace
60	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  numerator);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger)	3	None	replace
61	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  denominator);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger)	3	None	replace
62	[BUG]  [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	14	None	replace
63	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	14	None	replace
64	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  numerator);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  gcd),  numerator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd),  numerator);	      this(num,    new    BigInteger(den),    numerator);    	non-compiled	[CE]  cannot  find  symbol  gcd	10	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	compilable	  [FE]  AssertionError  	2	2	replace
66	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	compilable	  [FE]  AssertionError  	2	2	replace
67	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DENOMINATOR);  [CE]  cannot  find  symbol  DENOMINATOR  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  DENOMINATOR	2	None	replace
68	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	13	None	replace
69	[BUG]  [BUGGY]  super(num,  new  BigInteger(den));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  new  BigInteger(den));  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den));	      	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	5	None	replace
70	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]      AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  BigInteger.valueOf(den));  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(den));	      	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	5	None	replace
71	[BUG]  [BUGGY]  super(num,  BigInteger.ZERO);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.ZERO);	      	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	5	None	replace
72	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	compilable	  [FE]  ExceptionInInitializerError  	16	27	replace
73	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	compilable	  [FE]  ExceptionInInitializerError  	16	27	replace
74	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	16	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }	  	compilable	  [FE]  AssertionError  	17	2	add
76	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }	  	compilable	  [FE]  AssertionError  	17	2	add
77	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue()));  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den.doubleValue()));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue()));	      this(num,    new    BigInteger(den.intValue()));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	8	None	replace
78	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  denominator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den.intValue()),  denominator);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  denominator);	      this(num,    new    BigInteger(den.intValue()));    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	8	None	replace
79	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den),  gcd,  false);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  gcd,  false);	      this(num,    new    BigInteger(den),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  ((  BigInteger)num).doubleValue();  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	((  BigInteger)num).doubleValue();	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  AssertionError  	18	3	replace
81	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  ((  BigInteger)num).doubleValue();  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).doubleValue();	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  AssertionError  	18	3	replace
82	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	15	None	replace
83	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  0),  false);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0),  false);	      this(num,    new    BigInteger(den),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	12	None	replace
84	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	13	None	replace
85	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	13	None	replace
86	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  cannot  find  symbol  ZERO_QUARTERS  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARTERS	16	None	replace
87	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  cannot  find  symbol  ZERO_QUARTERS  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARTERS	16	None	replace
88	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	compilable	  [FE]  AssertionError  	15	2	replace
89	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	compilable	  [FE]  AssertionError  	15	2	replace
90	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER);  [CE]  cannot  find  symbol  NUMERATOR_DECEMBER  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_DECEMBER	14	None	replace
91	[BUG]  [BUGGY]      BigInteger  gcd  =(BigInteger)num.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]    AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]      BigInteger  gcd  =(BigInteger)num.clone();  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	        BigInteger  gcd  =(BigInteger)num.clone();	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	4	None	add
92	[BUG]  [BUGGY]  this(num,  der,  BigInteger.ZERO);  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  der,  BigInteger.ZERO);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  der,  BigInteger.ZERO);	      this(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  der	19	None	replace
93	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  den.intValue());  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den.intValue()),  den.intValue());  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  den.intValue());	      this(num,    new    BigInteger(den.intValue()));    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	8	None	replace
94	[BUG]  [BUGGY]  this(num,  den,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  den,  gcd);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  gcd);	      this(num,    den,    numerator);    	non-compiled	[CE]  cannot  find  symbol  gcd	9	None	replace
95	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DEFINE_QUARTERS));  [CE]  cannot  find  symbol  DEFINE_QUARTERS  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  this(num,  new  BigInteger(den,  DEFINE_QUARTERS));  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DEFINE_QUARTERS));	      this(num,    new    BigInteger(den));    	non-compiled	[CE]  cannot  find  symbol  DEFINE_QUARTERS	6	None	replace
96	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,LocalizedFormats,BigInteger)  [FE]            AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,LocalizedFormats,BigInteger)	3	None	replace
97	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger)  [FE]              AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  MathUtils.checkNotNull(num,  0,  den);  [BUGGY]    MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  den);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger)	3	None	replace
98	[BUG]  [BUGGY]  super(num.intValue(),  den);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]        AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num.intValue(),  den);  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den);	      super(num);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	11	None	replace
99	[BUG]  [BUGGY]  super(num.intValue());  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]          AssertionError    [CONTEXT]    public  BigFraction(BigInteger  num,  BigInteger  den)  {    [BUGGY]  super(num.intValue());  [BUGGY]    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue());	      super(num);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	11	None	replace
