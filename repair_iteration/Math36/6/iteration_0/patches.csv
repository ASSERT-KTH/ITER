bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]    AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO);  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO);	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	11	None	replace
2	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]      AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	11	None	replace
3	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,LocalizedFormats)  [FE]        AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR);  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR);	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,LocalizedFormats)	11	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	  	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	compilable	  [FE]  AssertionError  	11	3	replace
5	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	  	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	compilable	  [FE]  AssertionError  	11	3	replace
6	[BUG]  [BUGGY]    this(num,  new  BigInteger(den));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]    AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    this(num,  new  BigInteger(den));  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    this(num,  new  BigInteger(den));		non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	add
7	[BUG]  [BUGGY]    super(num,  den);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]      AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    super(num,  den);  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    super(num,  den);		non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	12	None	add
8	[BUG]  [BUGGY]    this(num,  new  BigInteger(den.intValue()));  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]        AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    this(num,  new  BigInteger(den.intValue()));  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    this(num,  new  BigInteger(den.intValue()));		non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	12	None	add
9	[BUG]  [BUGGY]    this(num,  den,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]          AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    this(num,  den,  numerator);  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    this(num,  den,  numerator);		non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	12	None	add
10	[BUG]  [BUGGY]    this(num,  new  BigInteger(den),  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]            AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    this(num,  new  BigInteger(den),  numerator);  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    this(num,  new  BigInteger(den),  numerator);		non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	add
11	[BUG]  [BUGGY]    super(num);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]    AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    super(num);  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    super(num);		non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	12	None	add
12	[BUG]  [BUGGY]    this(num,  new  BigInteger(den),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]      AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    this(num,  new  BigInteger(den),  false);  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    this(num,  new  BigInteger(den),  false);		non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	12	None	add
13	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]    AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den));  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den));	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	11	None	replace
14	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]      AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR);	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  cannot  find  symbol  MutableFormats	11	None	replace
15	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]    AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	11	None	replace
16	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  cannot  find  symbol  ZERO_QUARTERS  [FE]      AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	non-compiled	[CE]  cannot  find  symbol  ZERO_QUARTERS	11	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	compilable	  [FE]  AssertionError  	11	2	replace
18	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  	compilable	  [FE]  AssertionError  	11	2	replace
19	[BUG]  [BUGGY]    this(num,  numerator,  BigInteger.ZERO);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]    AssertionError  [CONTEXT]  public  BigFraction(BigInteger  num,  BigInteger  den)  {  [BUGGY]    this(num,  numerator,  BigInteger.ZERO);  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	    this(num,  numerator,  BigInteger.ZERO);		non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	12	None	add
