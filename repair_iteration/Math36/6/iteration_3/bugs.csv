bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(num,  den,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  BigInteger.valueOf(den));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  BigInteger.valueOf(den));	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	70	None	replace
2	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den,  0));  [CE]  no  suitable  method  found  for  valueOf(BigInteger,int)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.valueOf(den,  0));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(den,  0));	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger,int)	70	None	replace
3	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den),  gcd);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.valueOf(den),  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(den),  gcd);	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	70	None	replace
4	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(gcd),  den);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.valueOf(gcd),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(gcd),  den);	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  cannot  find  symbol  gcd	70	None	replace
5	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR,  denominator);	  MatrixUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	85	None	replace
6	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DENOMINATOR);	  MatrixUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	85	None	replace
7	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DENOMINATOR);	  MatrixUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	85	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
9	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
10	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
11	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
13	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
14	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(	  	non-compiled	[CE]  ')'  expected	75	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
16	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	75	2	add
17	[BUG]  [BUGGY]  this.num  =  den.getBigInteger();  [CE]  cannot  find  symbol  num  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  den.getBigInteger();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  den.getBigInteger();	  this.num    =    num.getBigInteger();    	non-compiled	[CE]  cannot  find  symbol  num	9	None	replace
18	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num.getBigInteger());  [CE]  cannot  find  symbol  num  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num.getBigInteger());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num.getBigInteger());	  this.num    =    num.getBigInteger();    	non-compiled	[CE]  cannot  find  symbol  num	9	None	replace
19	[BUG]  [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotEmpty(num,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
20	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  desnominator);  [CE]  cannot  find  symbol  desnominator  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  desnominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  desnominator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  desnominator	24	None	replace
21	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  100),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  100),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  100),  den);	  this(num,    new    BigInteger(den,    100));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	20	None	replace
22	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  100),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  100),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  100),  denominator);	  this(num,    new    BigInteger(den,    100));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	20	None	replace
23	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  100),  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  100),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  100),  numerator);	  this(num,    new    BigInteger(den,    100));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	20	None	replace
24	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  50));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  50));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  50));	  this(num,    new    BigInteger(den,    100));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	20	None	replace
25	[BUG]  [BUGGY]  this.num  =  num.intValue();  [CE]  cannot  find  symbol  num  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  num.intValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  num.intValue();	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  num	86	None	replace
26	[BUG]  [BUGGY]  this(num,  BigInteger.ZERO);  [CE]  recursive  constructor  invocation  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  BigInteger.ZERO);	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  recursive  constructor  invocation	86	None	replace
27	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  den.length));  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  den.length));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  den.length));	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
28	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  numerator));  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  numerator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  numerator));	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	19	None	replace
29	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0),  den);	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	19	None	replace
30	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0),  numerator);	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	19	None	replace
31	[BUG]  [BUGGY]  this(num,  gcd,  BigInteger.ZERO);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  gcd,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  gcd,  BigInteger.ZERO);	  this(num,    des,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  gcd	53	None	replace
32	[BUG]  [BUGGY]  this(num,  des,  BigInteger.ZERO,  denominator);  [CE]  cannot  find  symbol  des  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  des,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des,  BigInteger.ZERO,  denominator);	  this(num,    des,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  des	53	None	replace
33	[BUG]  [BUGGY]  this(num,  den,  numerator,  BigInteger.ZERO);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  numerator,  BigInteger.ZERO);	  this(num,    gcd,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	52	None	replace
34	[BUG]  [BUGGY]  this(num,  denominator,  numerator,  BigInteger.ZERO);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  denominator,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  denominator,  numerator,  BigInteger.ZERO);	  this(num,    gcd,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	52	None	replace
35	[BUG]  [BUGGY]  this(num,  des,  numerator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  des  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  des,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des,  numerator,  BigInteger.ZERO);	  this(num,    gcd,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  des	52	None	replace
36	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_HUNDRED);  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_HUNDRED);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_HUNDRED);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	10	None	replace
37	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_FIRST);  [CE]  cannot  find  symbol  ZERO_FIRST  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_FIRST);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_FIRST);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  ZERO_FIRST	10	None	replace
38	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  [CE]  cannot  find  symbol  ZERO  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  ZERO	10	None	replace
39	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  MINUS_ONE));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  MINUS_ONE));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  MINUS_ONE));	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	95	None	replace
40	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ZERO));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ZERO));	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	95	None	replace
41	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DEFINE_QUARTERS),  denominator);  [CE]  cannot  find  symbol  DEFINE_QUARTERS  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DEFINE_QUARTERS),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DEFINE_QUARTERS),  denominator);	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  cannot  find  symbol  DEFINE_QUARTERS	95	None	replace
42	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue()),  den);	  this(num,    new    BigInteger(den.doubleValue()));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	77	None	replace
43	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue(),  denominator));  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue(),  denominator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue(),  denominator));	  this(num,    new    BigInteger(den.doubleValue()));    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	77	None	replace
44	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue()  +  1));  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue()  +  1));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue()  +  1));	  this(num,    new    BigInteger(den.doubleValue()));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	77	None	replace
45	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  gcd);  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue()),  gcd);	  this(num,    new    BigInteger(den.doubleValue()));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	77	None	replace
46	[BUG]  [BUGGY]  this.den  =  new  BigInteger(num.intValue(),  den.intValue());  [CE]  cannot  find  symbol  den  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  new  BigInteger(num.intValue(),  den.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  new  BigInteger(num.intValue(),  den.intValue());	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    If(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  cannot  find  symbol  den	15	None	replace
47	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    gcd);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	68	None	replace
48	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd,  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  gcd,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    gcd);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	68	None	replace
49	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ZERO),  numerator);	  this(num,    new    BigInteger(den,    gcd),    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	64	None	replace
50	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  den),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  den),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  den),  denominator);	  this(num,    new    BigInteger(den,    gcd),    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)	64	None	replace
51	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  denominator);  [CE]  cannot  find  symbol  gcd  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  gcd),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd),  denominator);	  this(num,    new    BigInteger(den,    gcd),    numerator);    	non-compiled	[CE]  cannot  find  symbol  gcd	64	None	replace
52	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_HUNDRED);  }  [CE]  cannot  find  symbol  ZERO_HUNDRED  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_HUNDRED);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_HUNDRED);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_HUNDRED	82	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(den  ==  null  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	compilable	  [FE]  AssertionError  	82	2	replace
54	[BUG]  [BUGGY]  if(den  ==  null  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null  ||  num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	compilable	  [FE]  AssertionError  	82	2	replace
55	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats,BigInteger)	96	None	replace
56	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  denominator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)	96	None	replace
57	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  denominator),  numerator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  denominator),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  denominator),  numerator);	  this(num,    new    BigInteger(den,    denominator),    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	30	None	replace
58	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ZERO),  denominator);	  this(num,    new    BigInteger(den,    denominator),    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	30	None	replace
59	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ONE,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.ONE);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	59	None	replace
60	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ONE,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.ONE);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	59	None	replace
61	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ONE);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  den,  BigInteger.ONE);	  MathUtils.checkNotNull(num,    BigInteger.ONE);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	59	None	replace
62	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  den);  [CE]  cannot  find  symbol  gcd  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  gcd),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd),  den);	  this(num,    new    BigInteger(den,    denominator),    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	29	None	replace
63	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  numerator),  den);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  numerator),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  numerator),  den);	  this(num,    new    BigInteger(den,    denominator),    den);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	29	None	replace
64	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  gcd);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  denominator),  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  gcd);	  this(num,    new    BigInteger(den,    denominator),    den);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	29	None	replace
65	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]                            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ZERO),  den);	  this(num,    new    BigInteger(den,    denominator),    den);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	29	None	replace
66	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [CE]  cannot  find  symbol  MutableFormats  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    gcd);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	40	None	replace
67	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  numerator);	  MathUtils.checkNotNull(num,    0,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	60	None	replace
68	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  denominator);	  MathUtils.checkNotNull(num,    0,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	60	None	replace
69	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  0,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,int,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  0,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  0,  numerator);	  MathUtils.checkNotNull(num,    0,    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,int,BigInteger)	60	None	replace
70	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DENOMINATOR,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	42	None	replace
71	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	42	None	replace
72	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DENOMINATOR);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	42	None	replace
73	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  den);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()  +  1),  den);	  this(num,    new    BigInteger(den.intValue()),    den);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	38	None	replace
74	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator),  den);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  denominator),  den);	  this(num,    new    BigInteger(den.intValue()),    den);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	38	None	replace
75	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator));  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  denominator));	  this(num,    new    BigInteger(den.intValue()),    den);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	38	None	replace
76	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	33	None	replace
77	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  denominator,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  denominator,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	33	None	replace
78	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  BigInteger.ZERO,  denominator);	  MathUtils.checkNotNull(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	33	None	replace
79	[BUG]  [BUGGY]  this(num,  den,  0,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  0,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  0,  denominator);	  this(num,    den,    denominator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	1	None	replace
80	[BUG]  [BUGGY]  this(num,  den,  denominator,  gcd);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  denominator,  gcd);	  this(num,    den,    denominator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	1	None	replace
81	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  des);  [CE]  cannot  find  symbol  des  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  des);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  des);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    	non-compiled	[CE]  cannot  find  symbol  des	27	None	replace
82	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	45	None	replace
83	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	45	None	replace
84	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	45	None	replace
85	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  gcd);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator,  gcd);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	45	None	replace
86	[BUG]  [BUGGY]  if(num  ==  null  ||  der  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  cannot  find  symbol  der  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  der  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  der  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  der	87	None	replace
87	[BUG]  [BUGGY]  super(num,  BigInteger.ZERO,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.ZERO,  numerator);	  super(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	71	None	replace
88	[BUG]  [BUGGY]  super(num,  gcd,  BigInteger.ZERO);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  gcd,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  gcd,  BigInteger.ZERO);	  super(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  gcd	71	None	replace
89	[BUG]  [BUGGY]  super(num,  numerator,  BigInteger.ZERO);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  numerator,  BigInteger.ZERO);	  super(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	71	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
91	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
93	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
94	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
95	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
97	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
98	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
99	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
100	[BUG]  [BUGGY]  super(num,  den.intValue());  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den.intValue());  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den.intValue());	  super(num.intValue());    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	99	None	replace
101	[BUG]  [BUGGY]  super(num,  new  BigInteger(den.intValue()));  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den.intValue()));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den.intValue()));	  super(num.intValue());    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	99	None	replace
102	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  gcd);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	39	None	replace
103	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  numerator);  [CE]  cannot  find  symbol  MutableFormats  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  numerator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	39	None	replace
104	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator  +  1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator  +  1);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
105	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator  +  1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  numerator  +  1);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
106	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  numerator);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  numerator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
107	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  gcd);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	31	None	replace
108	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	31	None	replace
109	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  numerator,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	31	None	replace
110	[BUG]  [BUGGY]  (num  ==  null?  BigInteger.ZERO  :  num.intValue())  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null?  BigInteger.ZERO  :  num.intValue())  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null?  BigInteger.ZERO  :  num.intValue())  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
111	[BUG]  [BUGGY]  (num  ==  null?  BigInteger.ZERO  :  num.intValue())  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null?  BigInteger.ZERO  :  num.intValue())  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null?  BigInteger.ZERO  :  num.intValue())  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
112	[BUG]  [BUGGY]  (num  ==  null?  BigInteger.ZERO  :  num.intValue()))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null?  BigInteger.ZERO  :  num.intValue()))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null?  BigInteger.ZERO  :  num.intValue()))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  not  a  statement	74	None	replace
113	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
114	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
115	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
116	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
118	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
120	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
122	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	11	2	add
123	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	84	None	replace
124	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DECEMBER);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  0,  LocalizedFormats.DECEMBER);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	84	None	replace
125	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  LocalizedFormats.DECEMBER);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  gcd	84	None	replace
126	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  numerator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	84	None	replace
127	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  gcd);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  denominator,  gcd);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	28	None	replace
128	[BUG]  [BUGGY]  this(num,  gcd,  denominator);  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  gcd,  denominator);	  this(num,    des,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	2	None	replace
129	[BUG]  [BUGGY]  this(num,  numerator,  denominator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  numerator,  denominator);	  this(num,    des,    denominator);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	2	None	replace
130	[BUG]  [BUGGY]  this(num,  des,  denominator,  gcd);  [CE]  cannot  find  symbol  des  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  des,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des,  denominator,  gcd);	  this(num,    des,    denominator);    	non-compiled	[CE]  cannot  find  symbol  des	2	None	replace
131	[BUG]  [BUGGY]  this(num,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  denominator);	  this(num,    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	22	None	replace
132	[BUG]  [BUGGY]  this(num,  des);  [CE]  cannot  find  symbol  des  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  des);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des);	  this(num,    numerator);    	non-compiled	[CE]  cannot  find  symbol  des	22	None	replace
133	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ZERO,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  BigInteger.ZERO,  denominator);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	49	None	replace
134	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ZERO,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  BigInteger.ZERO,  numerator);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	49	None	replace
135	[BUG]  [BUGGY]  super(num,  den,  0,  BigInteger.ZERO);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  0,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  0,  BigInteger.ZERO);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	49	None	replace
136	[BUG]  [BUGGY]  super(num,  den,  numerator,  BigInteger.ZERO);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  numerator,  BigInteger.ZERO);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	49	None	replace
137	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
138	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
139	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
140	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
141	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
142	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
143	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
144	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  ExceptionInInitializerError  	72	27	add
145	[BUG]  [BUGGY]  this.den  =  new  BigInteger(num.intValue());  [CE]  cannot  find  symbol  den  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  new  BigInteger(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  new  BigInteger(num.intValue());	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  cannot  find  symbol  den	14	None	replace
146	[BUG]  [BUGGY]  super(num.intValue(),  den,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  den,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den,  denominator);	  super(num.intValue(),    den);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	98	None	replace
147	[BUG]  [BUGGY]  super(num.intValue(),  den,  BigInteger.ZERO);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den,  BigInteger.ZERO);	  super(num.intValue(),    den);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	98	None	replace
148	[BUG]  [BUGGY]  super(num.intValue(),  den,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  den,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den,  BigInteger.MAX_VALUE);	  super(num.intValue(),    den);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	98	None	replace
149	[BUG]  [BUGGY]  super(num.intValue(),  den,  false);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  den,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den,  false);	  super(num.intValue(),    den);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	98	None	replace
150	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ZERO),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ZERO),  false);	  this(num,    new    BigInteger(den,    gcd),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	54	None	replace
151	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  MINUS_ONE),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  MINUS_ONE),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  MINUS_ONE),  false);	  this(num,    new    BigInteger(den,    gcd),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	54	None	replace
152	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  false);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  denominator),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  false);	  this(num,    new    BigInteger(den,    gcd),    false);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	54	None	replace
153	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DEN),  false);  [CE]  cannot  find  symbol  DEN  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DEN),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DEN),  false);	  this(num,    new    BigInteger(den,    gcd),    false);    	non-compiled	[CE]  cannot  find  symbol  DEN	54	None	replace
154	[BUG]  [BUGGY]  (BigInteger)num.clone();  [CE]  not  a  statement  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (BigInteger)num.clone();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(BigInteger)num.clone();	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
155	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  gcd);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()  +  1),  gcd);	  this(num,    new    BigInteger(den.intValue()),    gcd);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	37	None	replace
156	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  gcd,  denominator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()),  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  gcd,  denominator);	  this(num,    new    BigInteger(den.intValue()),    gcd);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	37	None	replace
157	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator),  gcd);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator),  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  denominator),  gcd);	  this(num,    new    BigInteger(den.intValue()),    gcd);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	37	None	replace
158	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  gcd,  numerator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()),  gcd,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  gcd,  numerator);	  this(num,    new    BigInteger(den.intValue()),    gcd);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	37	None	replace
159	[BUG]  [BUGGY]  super(num,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.MAX_VALUE);	  super(num,    Den);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	23	None	replace
160	[BUG]  [BUGGY]  ((  BigInteger)num).setLength(0);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).setLength(0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).setLength(0);	  ((    BigInteger)num).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
161	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue()  +  1;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue()  +  1;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).doubleValue()  +  1;	  ((    BigInteger)num).doubleValue();    	non-compiled	[CE]  not  a  statement	81	None	replace
162	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue()  /  2;  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue()  /  2;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).doubleValue()  /  2;	  ((    BigInteger)num).doubleValue();    	non-compiled	[CE]  not  a  statement	81	None	replace
163	[BUG]  [BUGGY]  super(num,  den,  denominator,  gcd);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  denominator,  gcd);	  super(num,    den,    denominator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	48	None	replace
164	[BUG]  [BUGGY]  super(num,  den,  0,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  0,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  0,  denominator);	  super(num,    den,    denominator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	48	None	replace
165	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DEN));  [CE]  cannot  find  symbol  DEN  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DEN));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DEN));	  this(num,    new    BigInteger(den,    gcd));    	non-compiled	[CE]  cannot  find  symbol  DEN	18	None	replace
166	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  den));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  den));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  den));	  this(num,    new    BigInteger(den,    gcd));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)	18	None	replace
167	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  den);	  MathUtils.checkNotNull(num,    0,    den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	97	None	replace
168	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  gcd,  den);  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  gcd,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  gcd,  den);	  MathUtils.checkNotNull(num,    0,    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	97	None	replace
169	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator,  den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  numerator,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  numerator,  den);	  MathUtils.checkNotNull(num,    0,    den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,BigInteger)	97	None	replace
170	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    0,    den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)	97	None	replace
171	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DENOMINATOR);  [CE]  cannot  find  symbol  NUMERATOR_DENOMINATOR  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DENOMINATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_DENOMINATOR	90	None	replace
172	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER,  denominator);  [CE]  cannot  find  symbol  NUMERATOR_DECEMBER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_DECEMBER,  denominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_DECEMBER	90	None	replace
173	[BUG]  [BUGGY]  (num  ==  null  ||  den  ==  null)&&  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null  ||  den  ==  null)&&  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null  ||  den  ==  null)&&  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
174	[BUG]  [BUGGY]  (num  ==  null  ||  den  ==  null)?  BigInteger.ZERO  :  BigInteger.ZERO;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null  ||  den  ==  null)?  BigInteger.ZERO  :  BigInteger.ZERO;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null  ||  den  ==  null)?  BigInteger.ZERO  :  BigInteger.ZERO;	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
175	[BUG]  [BUGGY]  (num  ==  null  ||  den  ==  null)?  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [CE]  :  expected  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null  ||  den  ==  null)?  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null  ||  den  ==  null)?  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  :  expected	89	None	replace
176	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  LocalizedFormats.NUMERATOR,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  LocalizedFormats.NUMERATOR,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  LocalizedFormats.NUMERATOR,  gcd);	  MathUtils.checkNotNull(num,    denominator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	6	None	replace
177	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  gcd,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  gcd  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  gcd,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  gcd,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    denominator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	6	None	replace
178	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  gcd,  denominator,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  gcd  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  gcd,  denominator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  gcd,  denominator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    denominator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	6	None	replace
179	[BUG]  [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR,  numerator);  [CE]  cannot  find  symbol  MutableFormats  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR,  numerator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	41	None	replace
180	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  numerator,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	41	None	replace
181	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  localizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  localizedFormats  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  localizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  localizedFormats.NUMERATOR,  denominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  localizedFormats	41	None	replace
182	[BUG]  [BUGGY]  super(num,  den,den);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,den);	  super(num,    den,    gcd);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	46	None	replace
183	[BUG]  [BUGGY]  super(num,  den,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  deserator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  deserator);	  super(num,    den,    gcd);    	non-compiled	[CE]  cannot  find  symbol  deserator	46	None	replace
184	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  den);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(gcd),    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	44	None	replace
185	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(HUNDRED),  den);  [CE]  cannot  find  symbol  HUNDRED  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(HUNDRED),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(HUNDRED),  den);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(gcd),    den);    	non-compiled	[CE]  cannot  find  symbol  HUNDRED	44	None	replace
186	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  der);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  der);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  der);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(gcd),    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	44	None	replace
187	[BUG]  [BUGGY]  super(num,  der,  denominator);  [CE]  cannot  find  symbol  der  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  der,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  der,  denominator);	  super(num,    den,    numerator);    	non-compiled	[CE]  cannot  find  symbol  der	47	None	replace
188	[BUG]  [BUGGY]  super(num,  des,  denominator);  [CE]  cannot  find  symbol  des  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  des,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  des,  denominator);	  super(num,    den,    numerator);    	non-compiled	[CE]  cannot  find  symbol  des	47	None	replace
189	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_THIRD);  [CE]  cannot  find  symbol  ZERO_THIRD  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_THIRD);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.ZERO_THIRD);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_QUARTERS);    	non-compiled	[CE]  cannot  find  symbol  ZERO_THIRD	58	None	replace
190	[BUG]  [BUGGY]  this(num,  den,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  deserator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  deserator);	  this(num,    den,    gcd);    	non-compiled	[CE]  cannot  find  symbol  deserator	94	None	replace
191	[BUG]  [BUGGY]  this(num,  den,den);  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,den);	  this(num,    den,    gcd);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)	94	None	replace
192	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  numerator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()  +  1),  numerator);	          this(num,    new    BigInteger(den.intValue()),    numerator);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	35	None	replace
193	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator),  numerator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  denominator),  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  denominator),  numerator);	          this(num,    new    BigInteger(den.intValue()),    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	35	None	replace
194	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ZERO,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  den,  BigInteger.ZERO,  denominator);	  MathUtils.checkNotNull(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	34	None	replace
195	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ZERO,  numerator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  den,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  den,  BigInteger.ZERO,  numerator);	  MathUtils.checkNotNull(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	34	None	replace
196	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  gcd,  den,  BigInteger.ZERO);  [CE]  cannot  find  symbol  gcd  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  gcd,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  gcd,  den,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  gcd	34	None	replace
197	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  den.intValue()));  [CE]  no  suitable  constructor  found  for  BigInteger(int,int)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  den.intValue()));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  den.intValue()));	  this(num,    new    BigInteger(den.intValue()),    den.intValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(int,int)	93	None	replace
198	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  den.intValue());  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  den.intValue());  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()  +  1),  den.intValue());	  this(num,    new    BigInteger(den.intValue()),    den.intValue());    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	93	None	replace
199	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  den.intValue(),  denominator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()),  den.intValue(),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  den.intValue(),  denominator);	  this(num,    new    BigInteger(den.intValue()),    den.intValue());    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	93	None	replace
200	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  denominator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  denominator,  false);	  this(num,    new    BigInteger(den),    numerator,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	55	None	replace
201	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  numerator,  false);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  gcd),  numerator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd),  numerator,  false);	  this(num,    new    BigInteger(den),    numerator,    false);    	non-compiled	[CE]  cannot  find  symbol  gcd	55	None	replace
202	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  numerator,  false,  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  numerator,  false,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  numerator,  false,  denominator);	  this(num,    new    BigInteger(den),    numerator,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	55	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);	  	compilable	  [FE]  AssertionError  	26	2	add
204	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);	  	compilable	  [FE]  AssertionError  	26	2	add
205	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  num  =  BigInteger.valueOf(num.intValue());  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  num  =  BigInteger.valueOf(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  num  =  BigInteger.valueOf(num.intValue());	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	26	None	add
206	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =(BigInteger)num.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =(BigInteger)num.clone();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =(BigInteger)num.clone();	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	26	None	add
207	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  der);  [CE]  cannot  find  symbol  der  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  der);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  der);	  	non-compiled	[CE]  cannot  find  symbol  der	26	None	add
208	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =(BigInteger)null;  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =(BigInteger)null;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =(BigInteger)null;	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	26	None	add
209	[BUG]  [BUGGY]  MutableFormats.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotEmpty(num,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	62	None	replace
210	[BUG]  [BUGGY]  MutableFormats.checkNonNull(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNonNull(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNonNull(num,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	62	None	replace
211	[BUG]  [BUGGY]  MutableFormats.checkArgument(num.equals(den));  [CE]  cannot  find  symbol  MutableFormats  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkArgument(num.equals(den));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkArgument(num.equals(den));	  MutableFormats.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	62	None	replace
212	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)num.getValue();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  BigInteger  gcd  =(BigInteger)num.getValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	BigInteger  gcd  =(BigInteger)num.getValue();	          BigInteger    gcd    =(BigInteger)num.clone();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
213	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)num.intValue();  [CE]  inconvertible  types  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  BigInteger  gcd  =(BigInteger)num.intValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	BigInteger  gcd  =(BigInteger)num.intValue();	          BigInteger    gcd    =(BigInteger)num.clone();    	non-compiled	[CE]  inconvertible  types	91	None	replace
214	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  true);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0),  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0),  true);	  this(num,    new    BigInteger(den),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	57	None	replace
215	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  gcd),  true);  [CE]  cannot  find  symbol  gcd  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  gcd),  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  gcd),  true);	  this(num,    new    BigInteger(den),    true);    	non-compiled	[CE]  cannot  find  symbol  gcd	57	None	replace
216	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  numerator,  true);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  numerator,  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  numerator,  true);	  this(num,    new    BigInteger(den),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	57	None	replace
217	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  numerator);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(gcd),  numerator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    numerator);    	non-compiled	[CE]  cannot  find  symbol  gcd	43	None	replace
218	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  gcd,  BigInteger.valueOf(den),  numerator);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  gcd,  BigInteger.valueOf(den),  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  gcd,  BigInteger.valueOf(den),  numerator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    numerator);    	non-compiled	[CE]  cannot  find  symbol  gcd	43	None	replace
219	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  false,  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  false,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  false,  denominator);	  this(num,    new    BigInteger(den),    false,    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	56	None	replace
220	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  false,  numerator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  denominator),  false,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  false,  numerator);	  this(num,    new    BigInteger(den),    false,    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	56	None	replace
221	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  false,  numerator,  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  false,  numerator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  false,  numerator,  denominator);	  this(num,    new    BigInteger(den),    false,    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	56	None	replace
222	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ZERO,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  BigInteger.ZERO,  denominator);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	50	None	replace
223	[BUG]  [BUGGY]  this(num,  den,  0,  BigInteger.ZERO);  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,int,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  0,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  0,  BigInteger.ZERO);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,int,BigInteger)	50	None	replace
224	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ZERO,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  BigInteger.ZERO,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  BigInteger.ZERO,  numerator);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	50	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	compilable	  [FE]  AssertionError  	16	3	replace
226	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	compilable	  [FE]  AssertionError  	16	3	replace
227	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	16	None	replace
228	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  [CE]  cannot  find  symbol  UNKNOWN  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.UNKNOWN);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	16	None	replace
229	[BUG]  [BUGGY]  this(num,  denominator,  den);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  denominator,  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  denominator,  den);	  this(num,    der,    denominator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	3	None	replace
230	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotNull(num,    0,    den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats,BigInteger)	5	None	replace
231	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  den,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  den,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)	5	None	replace
232	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  den,  LocalizedFormats.NUMERATOR,  gcd);	  MathUtils.checkNotNull(num,    0,    den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	5	None	replace
233	[BUG]  [BUGGY]  this(num,  den,  false);  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,boolean)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  false);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  false);	  this(num,    den);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,boolean)	8	None	replace
234	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  denominator));  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  denominator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  denominator));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	17	None	replace
235	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  numerator));  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  numerator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  numerator));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	17	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  ((  BigInteger)num).doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	((    BigInteger)num).doubleValue();    ((  BigInteger)num).doubleValue();	  	compilable	  [FE]  AssertionError  	80	3	add
237	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  ((  BigInteger)num).doubleValue();  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  ((  BigInteger)num).doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    ((  BigInteger)num).doubleValue();	  	compilable	  [FE]  AssertionError  	80	3	add
238	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =  ((  BigInteger)num).doubleValue();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =  ((  BigInteger)num).doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    BigInteger  num  =  ((  BigInteger)num).doubleValue();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	80	None	add
239	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =(BigInteger)den.doubleValue();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =(BigInteger)den.doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    BigInteger  num  =(BigInteger)den.doubleValue();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	80	None	add
240	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =(BigInteger)num).doubleValue();  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =(BigInteger)num).doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    BigInteger  num  =(BigInteger)num).doubleValue();	  	non-compiled	[CE]  ';'  expected	80	None	add
241	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =(BigInteger)num.doubleValue();  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  BigInteger  num  =(BigInteger)num.doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    BigInteger  num  =(BigInteger)num.doubleValue();	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	80	None	add
242	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num.intValue(),  den.intValue());  [CE]  cannot  find  symbol  num  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num.intValue(),  den.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num.intValue(),  den.intValue());	  this.num    =    num;    	non-compiled	[CE]  cannot  find  symbol  num	21	None	replace
243	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num.doubleValue(),  den.doubleValue());  [CE]  cannot  find  symbol  num  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num.doubleValue(),  den.doubleValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num.doubleValue(),  den.doubleValue());	  this.num    =    num;    	non-compiled	[CE]  cannot  find  symbol  num	21	None	replace
244	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num.intValue());  [CE]  cannot  find  symbol  num  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num.intValue());	  this.num    =    num;    	non-compiled	[CE]  cannot  find  symbol  num	21	None	replace
245	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEDENOMINATOR);  [CE]  cannot  find  symbol  DEDENOMINATOR  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEDENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEDENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  DEDENOMINATOR	67	None	replace
246	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEN);  [CE]  cannot  find  symbol  DEN  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEN);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEN);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  DEN	67	None	replace
247	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  numerator),  denominator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  numerator),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  numerator),  denominator);	  this(num,    new    BigInteger(den.intValue()),    denominator);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	78	None	replace
248	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  denominator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()  +  1),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()  +  1),  denominator);	  this(num,    new    BigInteger(den.intValue()),    denominator);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	78	None	replace
249	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  gcd,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  gcd  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  gcd,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  gcd,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    numerator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	7	None	replace
250	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  numerator,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  numerator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  numerator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    numerator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)	7	None	replace
251	[BUG]  [BUGGY]  this(num,  gcd,  den,  BigInteger.ZERO);  [CE]  cannot  find  symbol  gcd  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  gcd,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  gcd,  den,  BigInteger.ZERO);	  this(num,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  gcd	51	None	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);	  	compilable	  [FE]  AssertionError  	65	2	add
253	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);	  	compilable	  [FE]  AssertionError  	65	2	add
254	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(num.intValue());  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  num  =  BigInteger.valueOf(num.intValue());	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
255	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(num);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  num  =  BigInteger.valueOf(num);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
256	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(0);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  num  =  BigInteger.valueOf(0);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
257	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(num.longValue());  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]            AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(num.longValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  num  =  BigInteger.valueOf(num.longValue());	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
258	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  numerator),  false);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  numerator),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  numerator),  false);	  this(num,    new    BigInteger(den,    0),    false);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	83	None	replace
259	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  numerator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0),  numerator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0),  numerator,  false);	  this(num,    new    BigInteger(den,    0),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	83	None	replace
260	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  den.length),  false);  [CE]  cannot  find  symbol  length  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  den.length),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  den.length),  false);	  this(num,    new    BigInteger(den,    0),    false);    	non-compiled	[CE]  cannot  find  symbol  length	83	None	replace
261	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  den,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  den,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  den,  false);	  this(num,    new    BigInteger(den),    gcd,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	79	None	replace
262	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  numerator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  gcd,  numerator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  gcd,  numerator,  false);	  this(num,    new    BigInteger(den),    gcd,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	79	None	replace
263	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  gcd,  false);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  denominator),  gcd,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  gcd,  false);	  this(num,    new    BigInteger(den),    gcd,    false);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	79	None	replace
264	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  denominator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  gcd,  denominator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  gcd,  denominator,  false);	  this(num,    new    BigInteger(den),    gcd,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	79	None	replace
265	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  denominator,  gcd);	  MathUtils.checkNotNull(num,    0,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	61	None	replace
266	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  gcd,  denominator);  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  gcd,  denominator);	  MathUtils.checkNotNull(num,    0,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	61	None	replace
267	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  gcd));  [CE]  cannot  find  symbol  gcd  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den,  gcd));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den,  gcd));	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  cannot  find  symbol  gcd	69	None	replace
268	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  denominator));  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den,  denominator));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den,  denominator));	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	69	None	replace
269	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  0));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den,  0));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den,  0));	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	69	None	replace
270	[BUG]  [BUGGY]  super(num,  new  BigInteger(den,  100));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den,  100));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den,  100));	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	69	None	replace
271	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
272	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
273	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
274	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
275	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
276	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	88	2	add
277	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  If(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  If(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    If(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	non-compiled	[CE]  ';'  expected	88	None	add
278	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  numerator,  denominator,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  numerator,  denominator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  numerator,  denominator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    numerator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)	4	None	replace
279	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  den,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  den,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    numerator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,LocalizedFormats)	4	None	replace
280	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  gcd,  numerator,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  gcd  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  gcd,  numerator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  gcd,  numerator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    numerator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  gcd	4	None	replace
281	[BUG]  [BUGGY]  this(num,  den,  gcd,  BigInteger.ZERO);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  gcd,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  gcd,  BigInteger.ZERO);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  gcd	50	None	replace
282	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_NUMBER);  [CE]  cannot  find  symbol  NUMERATOR_NUMBER  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_NUMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_NUMBER);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_NUMBER	90	None	replace
283	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ONE_HUNDRED),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ONE_HUNDRED),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ONE_HUNDRED),  den);	  this(num,    new    BigInteger(den,    denominator),    den);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)	29	None	replace
284	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(	  	non-compiled	[CE]  ')'  expected	11	None	add
285	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathU  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathU  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathU	  	non-compiled	[CE]  ';'  expected	11	None	add
286	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0),  denominator);	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	19	None	replace
287	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  0));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,int)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  0));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  0));	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,int)	19	None	replace
288	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  null));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,<null>)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  null));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  null));	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,<null>)	19	None	replace
289	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num.doubleValue());  [CE]  cannot  find  symbol  num  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num.doubleValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num.doubleValue());	  this.num    =    num;    	non-compiled	[CE]  cannot  find  symbol  num	21	None	replace
290	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num);  [CE]  cannot  find  symbol  num  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num);	  this.num    =    num;    	non-compiled	[CE]  cannot  find  symbol  num	21	None	replace
291	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  variable  denominator  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	24	None	replace
292	[BUG]  [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR,  numerator);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR,  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(den,  LocalizedFormats.NUMERATOR,  numerator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	24	None	replace
293	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  denominator);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR  +  1,  denominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	63	None	replace
294	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue()),  denominator);	  this(num,    new    BigInteger(den.doubleValue()));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	77	None	replace
295	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.longValue()),  denominator);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.longValue()),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.longValue()),  denominator);	  this(num,    new    BigInteger(den.intValue()),    denominator);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	78	None	replace
296	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  false,  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  denominator,  false,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  denominator,  false,  numerator);	  this(num,    new    BigInteger(den),    false,    numerator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	56	None	replace
297	[BUG]  [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  BigInteger.MAX_VALUE);	  super(num,    den,    gcd);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	46	None	replace
298	[BUG]  [BUGGY]  (num  ==  null  ||  den  ==  null))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  (num  ==  null  ||  den  ==  null))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	(num  ==  null  ||  den  ==  null))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  not  a  statement	89	None	replace
299	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  AssertionError  	89	2	replace
300	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  AssertionError  	89	2	replace
301	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DENOMINATOR),  false);  [CE]  cannot  find  symbol  DENOMINATOR  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DENOMINATOR),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DENOMINATOR),  false);	  this(num,    new    BigInteger(den,    gcd),    false);    	non-compiled	[CE]  cannot  find  symbol  DENOMINATOR	54	None	replace
302	[BUG]  [BUGGY]  this.num  =  num.getBigInteger(0);  [CE]  cannot  find  symbol  num  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  num.getBigInteger(0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  num.getBigInteger(0);	  this.num    =    num.getBigInteger();    	non-compiled	[CE]  cannot  find  symbol  num	9	None	replace
303	[BUG]  [BUGGY]  super(num.intValue(),  Den);  [CE]  cannot  find  symbol  Den  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  Den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  Den);	  super(num.intValue());    	non-compiled	[CE]  cannot  find  symbol  Den	99	None	replace
304	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);  [CE]  cannot  find  symbol  MatrixUtils  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.ZERO,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    numerator);    	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	32	None	replace
305	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0.0));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,double)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0.0));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0.0));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,double)	17	None	replace
306	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  den.doubleValue());  [CE]  no  suitable  constructor  found  for  BigInteger(double)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue()),  den.doubleValue());  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue()),  den.doubleValue());	  this(num,    new    BigInteger(den.intValue()),    den.intValue());    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double)	93	None	replace
307	[BUG]  [BUGGY]  super(num,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  gcd);	  super(num,    Den);    	non-compiled	[CE]  cannot  find  symbol  gcd	23	None	replace
308	[BUG]  [BUGGY]  super(num,  des);  [CE]  cannot  find  symbol  des  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  des);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  des);	  super(num,    Den);    	non-compiled	[CE]  cannot  find  symbol  des	23	None	replace
309	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den),  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den),  denominator);	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	69	None	replace
310	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEFINE_DECEMBER);  [CE]  cannot  find  symbol  DEFINE_DECEMBER  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEFINE_DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  DEFINE_DECEMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    DENOMINATOR);    	non-compiled	[CE]  cannot  find  symbol  DEFINE_DECEMBER	67	None	replace
311	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  denominator,  gcd);	  MathUtils.checkNotNull(num,    0,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	61	None	replace
312	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  num,  denominator);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  num,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  num,  denominator);	  MathUtils.checkNotNull(num,    0,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	61	None	replace
313	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	compilable	  [FE]  ExceptionInInitializerError  	82	27	replace
314	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_DECEMBER);    }    	compilable	  [FE]  ExceptionInInitializerError  	82	27	replace
315	[BUG]  [BUGGY]  super(num,  den,  BigInteger.ONE);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  den,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  den,  BigInteger.ONE);	  super(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	49	None	replace
316	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  des,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  des  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  des,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  des,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    numerator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  des	4	None	replace
317	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  denominator);	  MatrixUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	85	None	replace
318	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den),  numerator);	  MatrixUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	85	None	replace
319	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =  BigInteger.valueOf(num);	  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	26	None	add
320	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(0);  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(0);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =  BigInteger.valueOf(0);	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	26	None	add
321	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  Den);  [CE]  cannot  find  symbol  Den  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  Den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  Den);	  	non-compiled	[CE]  cannot  find  symbol  Den	26	None	add
322	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den),  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.valueOf(den),  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(den),  denominator);	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	70	None	replace
323	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den),  numerator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.valueOf(den),  numerator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(den),  numerator);	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	70	None	replace
324	[BUG]  [BUGGY]  super(num,  BigInteger.valueOf(den),  den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.valueOf(den),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.valueOf(den),  den);	  super(num,    BigInteger.valueOf(den));    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	70	None	replace
325	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  num,  den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  num,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  num,  den);	  MathUtils.checkNotNull(num,    0,    den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	97	None	replace
326	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  den,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    0,    den);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,BigInteger)	97	None	replace
327	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  der  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [CE]  cannot  find  symbol  der  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null  ||  der  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null  ||  der  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	non-compiled	[CE]  cannot  find  symbol  der	88	None	add
328	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR,  denominator,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR,  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  LocalizedFormats.NUMERATOR,  denominator,  gcd);	  MathUtils.checkNotNull(num,    0,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  gcd	96	None	replace
329	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathU  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathU  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathU	  	non-compiled	[CE]  ';'  expected	75	None	add
330	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
331	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  desominator);  [CE]  cannot  find  symbol  desominator  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  desominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  desominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  desominator	39	None	replace
332	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [CE]  cannot  find  symbol  MutableFormats  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	39	None	replace
333	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DENOMINATOR),  numerator);  [CE]  cannot  find  symbol  DENOMINATOR  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DENOMINATOR),  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DENOMINATOR),  numerator);	  this(num,    new    BigInteger(den,    gcd),    numerator);    	non-compiled	[CE]  cannot  find  symbol  DENOMINATOR	64	None	replace
334	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DENOMINATOR),  denominator);  [CE]  cannot  find  symbol  DENOMINATOR  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DENOMINATOR),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DENOMINATOR),  denominator);	  this(num,    new    BigInteger(den,    gcd),    numerator);    	non-compiled	[CE]  cannot  find  symbol  DENOMINATOR	64	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_DECEMBER);    	compilable	  [FE]  AssertionError  	10	2	replace
336	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_DECEMBER);    	compilable	  [FE]  AssertionError  	10	2	replace
337	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [CE]  cannot  find  symbol  DECEMBER  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.DECEMBER);	  MathUtils.checkNotNull(num,    LocalizedFormats.ZERO_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	10	None	replace
338	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  =((  BigInteger)num).doubleValue();  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  =((  BigInteger)num).doubleValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    =((  BigInteger)num).doubleValue();	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
339	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE_QUARATOR);  [CE]  cannot  find  symbol  ONE_QUARATOR  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE_QUARATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ONE_QUARATOR);	  MathUtils.checkNotNull(num,    BigInteger.ONE);    	non-compiled	[CE]  cannot  find  symbol  ONE_QUARATOR	59	None	replace
340	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  null),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,<null>)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  null),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  null),  false);	  this(num,    new    BigInteger(den,    0),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,<null>)	83	None	replace
341	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  0),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,int)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  0),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  0),  false);	  this(num,    new    BigInteger(den,    0),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int,int)	83	None	replace
342	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue()  +  den;  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue()  +  den;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).doubleValue()  +  den;	  ((    BigInteger)num).doubleValue();    	non-compiled	[CE]  not  a  statement	81	None	replace
343	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  des);  [CE]  cannot  find  symbol  des  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  des);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  des);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    gcd);    	non-compiled	[CE]  cannot  find  symbol  des	40	None	replace
344	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [CE]  cannot  find  symbol  MatrixUtils  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    MatrixUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);	  	non-compiled	[CE]  cannot  find  symbol  MatrixUtils	65	None	add
345	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  gcd  =  BigInteger.valueOf(num);	  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	65	None	add
346	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(den);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  num  =  BigInteger.valueOf(den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  num  =  BigInteger.valueOf(den);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
347	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num.intValue());  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  gcd  =  BigInteger.valueOf(num.intValue());	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
348	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  BigInteger.ZERO);  [CE]  cannot  find  symbol  MutableFormats  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  BigInteger.ZERO);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	74	None	replace
349	[BUG]  [BUGGY]  this(num,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  BigInteger.valueOf(den));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  BigInteger.valueOf(den));	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	74	None	replace
350	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  true);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  denominator,  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  denominator,  true);	  this(num,    new    BigInteger(den),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	57	None	replace
351	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  true);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  gcd,  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  gcd,  true);	  this(num,    new    BigInteger(den),    true);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	57	None	replace
352	[BUG]  [BUGGY]  super(num,  Den,  denominator);  [CE]  cannot  find  symbol  Den  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  Den,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  Den,  denominator);	  super(num,    den,    numerator);    	non-compiled	[CE]  cannot  find  symbol  Den	47	None	replace
353	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
354	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
355	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(	  	non-compiled	[CE]  ')'  expected	13	None	add
356	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  BigInteger.valueOf(den),  denominator);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  BigInteger.valueOf(den),  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  BigInteger.valueOf(den),  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    numerator);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	43	None	replace
357	[BUG]  [BUGGY]  BigInteger  gcd  =(BigInteger)den.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  BigInteger  gcd  =(BigInteger)den.clone();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	BigInteger  gcd  =(BigInteger)den.clone();	          BigInteger    gcd    =(BigInteger)num.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	91	None	replace
358	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ONE_FIFTH));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ONE_FIFTH));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ONE_FIFTH));	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	95	None	replace
359	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  DEFINE_FIFTHS));  [CE]  cannot  find  symbol  DEFINE_FIFTHS  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  DEFINE_FIFTHS));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  DEFINE_FIFTHS));	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  cannot  find  symbol  DEFINE_FIFTHS	95	None	replace
360	[BUG]  [BUGGY]  MutableFormats.check(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.check(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.check(num,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	62	None	replace
361	[BUG]  [BUGGY]  this(num,  den,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  BigInteger.MAX_VALUE);	  this(num,    den,    gcd);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	94	None	replace
362	[BUG]  [BUGGY]  this.den  =  BigInteger.ZERO;  [CE]  cannot  find  symbol  den  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  BigInteger.ZERO;  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  BigInteger.ZERO;	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    	non-compiled	[CE]  cannot  find  symbol  den	76	None	replace
363	[BUG]  [BUGGY]  this.den  =  BigInteger.valueOf(num);  [CE]  cannot  find  symbol  den  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  BigInteger.valueOf(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  BigInteger.valueOf(num);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    	non-compiled	[CE]  cannot  find  symbol  den	76	None	replace
364	[BUG]  [BUGGY]  super(num.intValue(),  den,  numerator);  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  den,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den,  numerator);	  super(num.intValue(),    den);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	98	None	replace
365	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  numerator,  denominator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  numerator,  denominator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  numerator,  denominator,  false);	  this(num,    new    BigInteger(den),    numerator,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	55	None	replace
366	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  deserator,  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  deserator,  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  deserator,  false);	  this(num,    new    BigInteger(den),    numerator,    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	55	None	replace
367	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  100),  gcd);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  100),  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  100),  gcd);	  this(num,    new    BigInteger(den,    100));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,int)	20	None	replace
368	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.longValue()),  den);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.longValue()),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.longValue()),  den);	  this(num,    new    BigInteger(den.intValue()),    den);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	38	None	replace
369	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  den);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  den);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger)	31	None	replace
370	[BUG]  [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  MutableFormats  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(den,  LocalizedFormats.NUMERATOR,  denominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	41	None	replace
371	[BUG]  [BUGGY]  this(num,  des,  gcd);  [CE]  cannot  find  symbol  des  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  des,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  des,  gcd);	  this(num,    des,    denominator);    	non-compiled	[CE]  cannot  find  symbol  des	2	None	replace
372	[BUG]  [BUGGY]  this(num,  BigInteger.ONE);  [CE]  recursive  constructor  invocation  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  BigInteger.ONE);	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    If(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  recursive  constructor  invocation	15	None	replace
373	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_UNKNOWN);  }  [CE]  cannot  find  symbol  ZERO_UNKNOWN  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_UNKNOWN);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_UNKNOWN);  }	  if(den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_UNKNOWN	86	None	replace
374	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  gcd,  denominator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  gcd,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  gcd,  denominator);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	28	None	replace
375	[BUG]  [BUGGY]  this(num,  new  BigInteger(den),  denominator,  numerator);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den),  denominator,  numerator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den),  denominator,  numerator);	  this(num,    new    BigInteger(den),    denominator);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	28	None	replace
376	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.UNKNOWN);  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.UNKNOWN);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.UNKNOWN);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	16	None	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(BigInteger.ZERO!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(BigInteger.ZERO!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	compilable	  [FE]  AssertionError  	16	2	replace
378	[BUG]  [BUGGY]  if(BigInteger.ZERO!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(BigInteger.ZERO!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(BigInteger.ZERO!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	compilable	  [FE]  AssertionError  	16	2	replace
379	[BUG]  [BUGGY]  super(num,  BigInteger.ZERO,  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.ZERO,  denominator);	  super(num,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	71	None	replace
380	[BUG]  [BUGGY]  this(num,  DENOMINATOR,  BigInteger.ZERO);  [CE]  cannot  find  symbol  DENOMINATOR  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  DENOMINATOR,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  DENOMINATOR,  BigInteger.ZERO);	  this(num,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  DENOMINATOR	51	None	replace
381	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  Float.NaN));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,float)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  Float.NaN));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  Float.NaN));	  this(num,    new    BigInteger(den,    denominator));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,float)	17	None	replace
382	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  num,  den,  BigInteger.ZERO);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  num,  den,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  num,  den,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,BigInteger)	34	None	replace
383	[BUG]  [BUGGY]  MutableFormats.checkNumber(num,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  MutableFormats  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNumber(num,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNumber(num,  LocalizedFormats.NUMERATOR);	  MutableFormats.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	62	None	replace
384	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num);  [CE]  cannot  find  symbol  MutableFormats  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num);	  MutableFormats.checkNotNull(den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	62	None	replace
385	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  1);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(den),  LocalizedFormats.DECEMBER,  1);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DECEMBER);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	84	None	replace
386	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  numerator));  [CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  numerator));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  numerator));	  this(num,    new    BigInteger(den.intValue()),    denominator);    	non-compiled	[CE]  cannot  reference  numerator  before  supertype  constructor  has  been  called	78	None	replace
387	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()),  denominator,  gcd);  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()),  denominator,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()),  denominator,  gcd);	  this(num,    new    BigInteger(den.intValue()),    denominator);    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	78	None	replace
388	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE_QUARTER);  [CE]  cannot  find  symbol  ONE_QUARTER  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ONE_QUARTER);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ONE_QUARTER);	  MathUtils.checkNotNull(num,    BigInteger.ONE);    	non-compiled	[CE]  cannot  find  symbol  ONE_QUARTER	59	None	replace
389	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(num),  den);  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.valueOf(num),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.valueOf(num),  den);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(gcd),    den);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	44	None	replace
390	[BUG]  [BUGGY]  this.den  =  new  BigInteger(num.doubleValue());  [CE]  cannot  find  symbol  den  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  new  BigInteger(num.doubleValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  new  BigInteger(num.doubleValue());	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    	non-compiled	[CE]  cannot  find  symbol  den	76	None	replace
391	[BUG]  [BUGGY]  this.den  =  new  BigInteger(num.longValue());  [CE]  cannot  find  symbol  den  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  new  BigInteger(num.longValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  new  BigInteger(num.longValue());	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    	non-compiled	[CE]  cannot  find  symbol  den	76	None	replace
392	[BUG]  [BUGGY]  this.den  =  num.intValue();  [CE]  cannot  find  symbol  den  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  num.intValue();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  num.intValue();	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    	non-compiled	[CE]  cannot  find  symbol  den	76	None	replace
393	[BUG]  [BUGGY]  super(num,  Den.ZERO);  [CE]  cannot  find  symbol  Den  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  Den.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  Den.ZERO);	  super(num,    Den);    	non-compiled	[CE]  cannot  find  symbol  Den	23	None	replace
394	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  true);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  denominator),  true);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  true);	  this(num,    new    BigInteger(den),    true);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	57	None	replace
395	[BUG]  [BUGGY]  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  MatUtils  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  MatUtils	24	None	replace
396	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DECEMBER);  }  [CE]  cannot  find  symbol  DECEMBER  [FE]    ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DECEMBER);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DECEMBER);  }	  	non-compiled	[CE]  cannot  find  symbol  DECEMBER	72	None	add
397	[BUG]  [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  If(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  If(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.DENOMINATOR);    }    If(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	non-compiled	[CE]  ';'  expected	72	None	add
398	[BUG]  [BUGGY]  super(num,  BigInteger.ZERO,  den);  [CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  BigInteger.ZERO,  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  BigInteger.ZERO,  den);	  super(num,    BigInteger.ZERO);    	non-compiled	[CE]  constructor  Number  in  class  Number  cannot  be  applied  to  given  types;	71	None	replace
399	[BUG]  [BUGGY]  this(num,  num,  BigInteger.ZERO);  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  num,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  num,  BigInteger.ZERO);	  this(num,    des,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)	53	None	replace
400	[BUG]  [BUGGY]  this(num,  new  BigInteger(num,  den),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(num,  den),  den);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(num,  den),  den);	  this(num,    new    BigInteger(den,    denominator),    den);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)	29	None	replace
401	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  bigInteger.valueOf(den),  denominator);  [CE]  cannot  find  symbol  bigInteger  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  bigInteger.valueOf(den),  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  bigInteger.valueOf(den),  denominator);	  MathUtils.checkNotNull(num,    BigInteger.valueOf(den),    numerator);    	non-compiled	[CE]  cannot  find  symbol  bigInteger	43	None	replace
402	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
403	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  	compilable	  [FE]  AssertionError  	13	2	add
404	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(	  	non-compiled	[CE]  ')'  expected	13	None	add
405	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(den!=  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(den!=  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(den!=	  	non-compiled	[CE]  ')'  expected	13	None	add
406	[BUG]  [BUGGY]  this.num  =  num.getBigInteger(1);  [CE]  cannot  find  symbol  num  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  num.getBigInteger(1);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  num.getBigInteger(1);	  this.num    =    num.getBigInteger();    	non-compiled	[CE]  cannot  find  symbol  num	9	None	replace
407	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.doubleValue(),  den.doubleValue()));  [CE]  no  suitable  constructor  found  for  BigInteger(double,double)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.doubleValue(),  den.doubleValue()));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.doubleValue(),  den.doubleValue()));	  this(num,    new    BigInteger(den.doubleValue()));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(double,double)	77	None	replace
408	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  den),  false);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  den),  false);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  den),  false);	  this(num,    new    BigInteger(den,    gcd),    false);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigInteger)	54	None	replace
409	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num.doubleValue());  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num.doubleValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  gcd  =  BigInteger.valueOf(num.doubleValue());	  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	65	None	add
410	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num.longValue());  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  num);  BigInteger  gcd  =  BigInteger.valueOf(num.longValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    num);    BigInteger  gcd  =  BigInteger.valueOf(num.longValue());	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	65	None	add
411	[BUG]  [BUGGY]  this(num,  denominator,  gcd,  BigInteger.ZERO);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  denominator,  gcd,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  denominator,  gcd,  BigInteger.ZERO);	  this(num,    gcd,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	52	None	replace
412	[BUG]  [BUGGY]  this(num,  der,  numerator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  der  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  der,  numerator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  der,  numerator,  BigInteger.ZERO);	  this(num,    gcd,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  der	52	None	replace
413	[BUG]  [BUGGY]  super(num,  new  BigInteger(den),  den);  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num,  new  BigInteger(den),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num,  new  BigInteger(den),  den);	  super(num,    new    BigInteger(den));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger)	69	None	replace
414	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  bigInteger.ZERO,  denominator);  [CE]  cannot  find  symbol  bigInteger  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  bigInteger.ZERO,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  bigInteger.ZERO,  denominator);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    numerator);    	non-compiled	[CE]  cannot  find  symbol  bigInteger	32	None	replace
415	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator,  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  0,  denominator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  0,  denominator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    0,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,int,BigInteger,LocalizedFormats)	61	None	replace
416	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  deserator,  LocalizedFormats.NUMERATOR);  [CE]  cannot  find  symbol  deserator  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  deserator,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  deserator,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    denominator,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  cannot  find  symbol  deserator	6	None	replace
417	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  deser);  [CE]  cannot  find  symbol  deser  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  deser);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  deser);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    gcd);    	non-compiled	[CE]  cannot  find  symbol  deser	40	None	replace
418	[BUG]  [BUGGY]  this(num,  deserator,  denominator);  [CE]  cannot  find  symbol  deserator  [FE]                      AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  deserator,  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  deserator,  denominator);	  this(num,    der,    denominator);    	non-compiled	[CE]  cannot  find  symbol  deserator	3	None	replace
419	[BUG]  [BUGGY]  MutableFormats.check(num,  LocalizedFormats.NUMERATOR,  denominator);  [CE]  cannot  find  symbol  MutableFormats  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.check(num,  LocalizedFormats.NUMERATOR,  denominator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.check(num,  LocalizedFormats.NUMERATOR,  denominator);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    numerator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	41	None	replace
420	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.intValue());  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.intValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =  BigInteger.valueOf(num.intValue());	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	26	None	add
421	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.doubleValue());  [CE]  no  suitable  method  found  for  valueOf(double)  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.doubleValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =  BigInteger.valueOf(num.doubleValue());	  	non-compiled	[CE]  no  suitable  method  found  for  valueOf(double)	26	None	add
422	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.longValue());  [CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.longValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =  BigInteger.valueOf(num.longValue());	  	non-compiled	[CE]  variable  gcd  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	26	None	add
423	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.getValue());  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  den);  BigInteger  gcd  =  BigInteger.valueOf(num.getValue());  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    den);    BigInteger  gcd  =  BigInteger.valueOf(num.getValue());	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
424	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  ExceptionInInitializerError  	14	27	replace
425	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  ExceptionInInitializerError  	14	27	replace
426	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [CE]  cannot  find  symbol  ZERO_DECEMBER  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_DECEMBER);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_DECEMBER	14	None	replace
427	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  ExceptionInInitializerError  	14	27	replace
428	[BUG]  [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  ExceptionInInitializerError  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num!=    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  ExceptionInInitializerError  	14	27	replace
429	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	compilable	  [FE]  AssertionError  	16	3	replace
430	[BUG]  [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(BigInteger.ZERO.equals(den))  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.UNKNOWN);    }    	compilable	  [FE]  AssertionError  	16	3	replace
431	[BUG]  [BUGGY]  this(num,  deserator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  deserator  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  deserator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  deserator,  BigInteger.ZERO);	  this(num,    denominator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  deserator	51	None	replace
432	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  num,  den,  LocalizedFormats.NUMERATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  num,  den,  LocalizedFormats.NUMERATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  num,  den,  LocalizedFormats.NUMERATOR);	  MathUtils.checkNotNull(num,    0,    den,    LocalizedFormats.NUMERATOR);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)	5	None	replace
433	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  deser);  [CE]  cannot  find  symbol  deser  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  deser);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR,  deser);	  MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR,    gcd);    	non-compiled	[CE]  cannot  find  symbol  deser	25	None	replace
434	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  AssertionError  	89	2	replace
435	[BUG]  [BUGGY]  if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den!=  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	compilable	  [FE]  AssertionError  	89	2	replace
436	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue(),  den.intValue());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue(),  den.intValue());  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue(),  den.intValue());	  this(num,    new    BigInteger(den.intValue()),    den.intValue());    	non-compiled	[CE]  ')'  expected	93	None	replace
437	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  TWO_FIFTHS));  [CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  TWO_FIFTHS));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  TWO_FIFTHS));	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  no  suitable  constructor  found  for  BigInteger(BigInteger,BigFraction)	95	None	replace
438	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  ONE_FIFTHS));  [CE]  cannot  find  symbol  ONE_FIFTHS  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  ONE_FIFTHS));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  ONE_FIFTHS));	  this(num,    new    BigInteger(den,    DEFINE_QUARTERS));    	non-compiled	[CE]  cannot  find  symbol  ONE_FIFTHS	95	None	replace
439	[BUG]  [BUGGY]  this(num,  deserator);  [CE]  cannot  find  symbol  deserator  [FE]          AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  deserator);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  deserator);	  this(num,    numerator);    	non-compiled	[CE]  cannot  find  symbol  deserator	22	None	replace
440	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	((    BigInteger)num).doubleValue();    if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	80	3	add
441	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	80	3	add
442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	add	((    BigInteger)num).doubleValue();    if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	80	3	add
443	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.DENOMINATOR,  LocalizedFormats.DENOMINATOR);  }	  	compilable	  [FE]  AssertionError  	80	3	add
444	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO);  }  [CE]  cannot  find  symbol  ZERO  [FE]        AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO);  }	  	non-compiled	[CE]  cannot  find  symbol  ZERO	80	None	add
445	[BUG]  [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  NullPointerException(LocalizedFormats.DENOMINATOR);  }  [CE]  no  suitable  constructor  found  for  NullPointerException(LocalizedFormats)  [FE]          AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).doubleValue();  if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  NullPointerException(LocalizedFormats.DENOMINATOR);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((    BigInteger)num).doubleValue();    if(num  instanceof  BigInteger)  {  ((  BigInteger)num).doubleValue();  }  else  {  throw  new  NullPointerException(LocalizedFormats.DENOMINATOR);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  NullPointerException(LocalizedFormats)	80	None	add
446	[BUG]  [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_THIRD);  }  [CE]  cannot  find  symbol  ZERO_THIRD  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_THIRD);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  den  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_THIRD);  }	  if(num    ==    null    ||    den    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol  ZERO_THIRD	87	None	replace
447	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  LocalizedFormats.DENOMINATOR);  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  LocalizedFormats.DENOMINATOR);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  BigInteger.ZERO,  denominator,  LocalizedFormats.DENOMINATOR);	  MathUtils.checkNotNull(num,    BigInteger.ZERO,    denominator);    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger,BigInteger,LocalizedFormats)	31	None	replace
448	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  0,  num.length));  [CE]  cannot  find  symbol  length  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  0,  num.length));  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  0,  num.length));	  this(num,    new    BigInteger(den,    0));    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
449	[BUG]  [BUGGY]  this(num,  den,  BigInteger.ONE);  [CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  den,  BigInteger.ONE);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  den,  BigInteger.ONE);	  this(num,    den,    BigInteger.ZERO);    	non-compiled	[CE]  no  suitable  constructor  found  for  BigFraction(BigInteger,BigInteger,BigInteger)	50	None	replace
450	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_INDEX);  [CE]  cannot  find  symbol  NUMERATOR_INDEX  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_INDEX);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR_INDEX);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR_DECEMBER);    	non-compiled	[CE]  cannot  find  symbol  NUMERATOR_INDEX	90	None	replace
451	[BUG]  [BUGGY]  this.num  =  new  BigInteger(num.intValue(),  den);  [CE]  cannot  find  symbol  num  [FE]        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.num  =  new  BigInteger(num.intValue(),  den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.num  =  new  BigInteger(num.intValue(),  den);	  this.num    =    num;    	non-compiled	[CE]  cannot  find  symbol  num	21	None	replace
452	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  MutableFormats  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  BigInteger.ZERO);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  MutableFormats	39	None	replace
453	[BUG]  [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  BigInteger.MAX_VALUE);  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  BigInteger.MAX_VALUE);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MutableFormats.checkNotNull(num,  LocalizedFormats.NUMERATOR,  denominator,  BigInteger.MAX_VALUE);	  MutableFormats.checkNotNull(num,    LocalizedFormats.NUMERATOR,    denominator);    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	39	None	replace
454	[BUG]  [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den));  [CE]  no  suitable  method  found  for  valueOf(BigInteger)  [FE]              AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den));  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MatrixUtils.checkNotNull(num,  BigInteger.valueOf(den));	  MatrixUtils.checkNotNull(num,    BigInteger.valueOf(den),    LocalizedFormats.DENOMINATOR);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(BigInteger)	85	None	replace
455	[BUG]  [BUGGY]  ((  BigInteger)num).setValue(den);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).setValue(den);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).setValue(den);	  ((    BigInteger)num).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
456	[BUG]  [BUGGY]  ((  BigInteger)num).setLongValue(null);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  ((  BigInteger)num).setLongValue(null);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	((  BigInteger)num).setLongValue(null);	  ((    BigInteger)num).doubleValue();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
457	[BUG]  [BUGGY]  this.den  =  num.getBigInteger();  [CE]  cannot  find  symbol  den  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this.den  =  num.getBigInteger();  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this.den  =  num.getBigInteger();	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    	non-compiled	[CE]  cannot  find  symbol  den	12	None	replace
458	[BUG]  [BUGGY]  super(num.intValue(),  den,  gcd);  [CE]  cannot  find  symbol  gcd  [FE]            AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  super(num.intValue(),  den,  gcd);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	super(num.intValue(),  den,  gcd);	  super(num.intValue(),    den);    	non-compiled	[CE]  cannot  find  symbol  gcd	98	None	replace
459	[BUG]  [BUGGY]  this(num,  new  BigInteger(den.intValue()).intValue());  [CE]  BigInteger(long)  has  private  access  in  BigInteger  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den.intValue()).intValue());  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den.intValue()).intValue());	  this(num,    new    BigInteger(den.intValue()    +    1));    	non-compiled	[CE]  BigInteger(long)  has  private  access  in  BigInteger	36	None	replace
460	[BUG]  [BUGGY]  MathUtils.checkNotNull(num,  deserator,  BigInteger.ZERO);  [CE]  cannot  find  symbol  deserator  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  MathUtils.checkNotNull(num,  deserator,  BigInteger.ZERO);  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	MathUtils.checkNotNull(num,  deserator,  BigInteger.ZERO);	  MathUtils.checkNotNull(num,    numerator,    BigInteger.ZERO);    	non-compiled	[CE]  cannot  find  symbol  deserator	33	None	replace
461	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]                AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  num.equals(BigInteger.ZERO))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	74	None	replace
462	[BUG]  [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)  [FE]                  AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  num.equals(den))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  num.equals(den))  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  no  suitable  method  found  for  checkNotNull(BigInteger,BigInteger)	74	None	replace
463	[BUG]  [BUGGY]  if(num  ==  null  ||  num.length()  ==  0)  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num  ==  null  ||  num.length()  ==  0)  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num  ==  null  ||  num.length()  ==  0)  {  MathUtils.checkNotNull(num,  BigInteger.ZERO);  }  else  {  throw  new  ZeroException(LocalizedFormats.ZERO_QUARTERS);  }	  if(num    ==    null)    {    MathUtils.checkNotNull(num,    BigInteger.ZERO);    }    else    {    throw    new    ZeroException(LocalizedFormats.ZERO_QUARTERS);    }    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
464	[BUG]  [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathU  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  if(num    ==    null)    {    MathUtils.checkNotNull(num,    LocalizedFormats.NUMERATOR);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathU  [BUGGY]      MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	if(num        ==        null)        {        MathUtils.checkNotNull(num,        LocalizedFormats.NUMERATOR);        }        if(num    ==    null)    {    MathUtils.checkNotNull(num);    }    if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  }  if(num  ==  null)  {  MathUtils.checkNotNull(num,  LocalizedFormats.DENOMINATOR);  }  if(num  ==  null)  {  MathU	  	non-compiled	[CE]  ';'  expected	75	None	add
465	[BUG]  [BUGGY]  this(num,  new  BigInteger(den,  denominator),  denominator);  [CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called  [FE]                        AssertionError      [CONTEXT]      public  BigFraction(BigInteger  num,  BigInteger  den)  {      [BUGGY]  this(num,  new  BigInteger(den,  denominator),  denominator);  [BUGGY]      MathUtils.checkNotNull(num,  LocalizedFormats.NUMERATOR);  MathUtils.checkNotNull(den,  LocalizedFormats.DENOMINATOR);  if  (BigInteger.ZERO.equals(den))  {  throw  new  ZeroException(LocalizedFormats.ZERO_DENOMINATOR);  }  if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {    [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	120	120	2	replace	this(num,  new  BigInteger(den,  denominator),  denominator);	  this(num,    new    BigInteger(den,    denominator),    numerator);    	non-compiled	[CE]  cannot  reference  denominator  before  supertype  constructor  has  been  called	30	None	replace
