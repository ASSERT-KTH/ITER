bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  gcd  =  num.getValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.getValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.getValue();	  gcd    =    num.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
2	[BUG]  [BUGGY]  gcd  =  num.getLength();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.getLength();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.getLength();	  gcd    =    num.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
3	[BUG]  [BUGGY]  If(BigInteger.ZERO.compareTo(gcd)>  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  If(BigInteger.ZERO.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	If(BigInteger.ZERO.compareTo(gcd)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    If(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
4	[BUG]  [BUGGY]  If(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  If(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	If(BigInteger.ZERO.compareTo(gcd)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    If(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  ';'  expected	29	None	replace
5	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.Divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.Divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.divide(num);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
6	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.Divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.Divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  num  =  num.Divide(gcd);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
7	[BUG]  [BUGGY]  num  =  gcd.divide(num);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.divide(num);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.divide(num);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
8	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.getBigInteger(0);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.getBigInteger(0);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
9	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(den);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.getBigInteger(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.getBigInteger(den);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
10	[BUG]  [BUGGY]  gcd  =  num.getBigInteger(1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.getBigInteger(1);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.getBigInteger(1);	  gcd    =    num.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
11	[BUG]  [BUGGY]  if(num.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
12	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  If(num.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)  <  0)  {  If(num.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)  <  0)  {  If(num.compareTo(gcd)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(den)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	31	6	replace
14	[BUG]  [BUGGY]  if(num.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(den)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	31	6	replace
15	[BUG]  [BUGGY]  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  Den  =  den.divide(gcd);	  if(den.equals(gcd))    {    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
16	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	  if(den.equals(gcd))    {    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
17	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(den))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(den))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	  if(den.equals(gcd))    {    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
18	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  Den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  Den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  Den  =  den.divide(gcd);	  if(den.equals(gcd))    {    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
19	[BUG]  [BUGGY]  gcd  =  num.gcd(den);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.gcd(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.gcd(den);	  gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
20	[BUG]  [BUGGY]  gcd  =  num.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.negate(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.negate(den);	  gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
21	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate()  +  numerator;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate()  +  numerator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate()  +  numerator;	  BigInteger    den    =    gcd.negate()    +    denominator;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
22	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate()  /  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate()  /  denominator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate()  /  denominator;	  BigInteger    den    =    gcd.negate()    +    denominator;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
23	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate()  *  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate()  *  denominator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate()  *  denominator;	  BigInteger    den    =    gcd.negate()    +    denominator;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
24	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger(0);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.getBigInteger(0);	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
25	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  numerator.getBigInteger();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator.getBigInteger();	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
26	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.divide(num);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
27	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
28	[BUG]  [BUGGY]  num  =  gcd.parse(num);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.parse(num);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.parse(num);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
29	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.differ(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.differ(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.divide(num);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
30	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.differ(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.differ(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
31	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  den  =  Den.divide(gcd);	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    Den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
32	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    Den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
33	[BUG]  [BUGGY]  if(num.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  if(den.compareTo(gcd)    <    0)    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
34	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  if(den.compareTo(gcd)    <    0)    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
35	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  numerator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator;	  BigInteger    gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
36	[BUG]  [BUGGY]  BigInteger  gcd  =  num.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.negate(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.negate(den);	  BigInteger    gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(den)>  0)  {	  if(num.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	6	8	replace
38	[BUG]  [BUGGY]  if(num.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(den)>  0)  {	  if(num.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	6	8	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(den.compareTo(gcd)>  0)  {	  if(num.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	6	7	replace
40	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)>  0)  {	  if(num.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	6	7	replace
41	[BUG]  [BUGGY]  BigInteger  gcd  =  g.getBigInteger(0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.getBigInteger(0);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.getBigInteger(0);	  BigInteger    gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
42	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  denominator  =  gcd.negate();	  num    =    num.divide(gcd);    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
43	[BUG]  [BUGGY]  num  =  num.divide(gcd);  numerator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  numerator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  numerator  =  gcd.negate();	  num    =    num.divide(gcd);    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(gcd.compareTo(den)  <  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	7	replace
45	[BUG]  [BUGGY]  if(gcd.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(den)  <  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	7	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(BigInteger.ZERO)  <  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	8	replace
47	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(BigInteger.ZERO)  <  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	8	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(BigInteger.ZERO)>  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	7	replace
49	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(BigInteger.ZERO)>  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	7	replace
50	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
51	[BUG]  [BUGGY]  num  =  num.divide(gcd);  denominator  =  numerator;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  denominator  =  numerator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  denominator  =  numerator;	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
52	[BUG]  [BUGGY]  num  =  num.hashCode();  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.hashCode();  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.hashCode();  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
53	[BUG]  [BUGGY]  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
54	[BUG]  [BUGGY]  gcd  =  g.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.negate(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.negate(den);	  gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
55	[BUG]  [BUGGY]  final  gcd  =  g.negate();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  final  gcd  =  g.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	final  gcd  =  g.negate();	  gcd    =    g.negate();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
56	[BUG]  [BUGGY]  BigInteger  gcd  =  g.getValue();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.getValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.getValue();	  BigInteger    gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
57	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(den))  {  num  =  num.negate();  denominator  =  gcd.negate();  }	  num    =    num.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
58	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(den))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(den))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	11	add
60	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	11	add
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	2	add
62	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	2	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.subtract(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	18	add
64	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.subtract(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.subtract(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	18	add
65	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.multiply(gcd);  num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
66	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.double(gcd);  num  =  num.multiply(gcd);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.double(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.double(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  <identifier>  expected	14	None	add
67	[BUG]  [BUGGY]  num  =  gcd.divide(num);  num  =  num.multiide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.divide(num);  num  =  num.multiide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.divide(num);  num  =  num.multiide(gcd);	          num    =    num.divide(gcd);    num    =    num.multiide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
68	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.multiide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  num  =  num.multiide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  num  =  num.multiide(gcd);	          num    =    num.divide(gcd);    num    =    num.multiide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)  ==  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(gcd)  ==  0)  {	  if(num.compareTo(gcd)    <    =    0)    {    	compilable	  [FE]  AssertionError  	50	9	replace
70	[BUG]  [BUGGY]  if(num.compareTo(gcd)  ==  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)  ==  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)  ==  0)  {	  if(num.compareTo(gcd)    <    =    0)    {    	compilable	  [FE]  AssertionError  	50	9	replace
71	[BUG]  [BUGGY]  if(gcd!=  numerator  ||  BigInteger.ONE.compareTo(den)>  0)  {  [CE]  variable  numerator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd!=  numerator  ||  BigInteger.ONE.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd!=  numerator  ||  BigInteger.ONE.compareTo(den)>  0)  {	  if(BigInteger.ONE.compareTo(den)>    0)    {    	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	64	None	replace
72	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  if(den.compareTo(gcd)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)  <  0)  {  if(den.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)    <    0)    {    if(den.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
73	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  If(den.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)  <  0)  {  If(den.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)    <    0)    {    If(den.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
74	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  if(den.compareTo(gcd)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)  <  0)  {  if(den.compareTo(gcd)  >=  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)    <    0)    {    if(den.compareTo(gcd)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
75	[BUG]  [BUGGY]  gcd  =  denominator.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  denominator.intValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  denominator.intValue();	  gcd    =    numerator.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
76	[BUG]  [BUGGY]  gcd  =  gcd.getIntValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.getIntValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getIntValue();	  gcd    =    gcd.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
77	[BUG]  [BUGGY]  BigInteger  den  =  denominator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  denominator.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  denominator.negate();	  BigInteger    den    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
78	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate(),  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  numerator.negate(),  denominator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  numerator.negate(),  denominator;	  BigInteger    den    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
79	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  den  =  den.divide(gcd);	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
80	[BUG]  [BUGGY]  if(den  ==  numerator)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den  ==  numerator)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den  ==  numerator)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
81	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  numerator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  den  =  numerator.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  den  =  numerator.divide(gcd);	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
82	[BUG]  [BUGGY]  BigInteger  gcd  =  denominator.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  denominator.intValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  denominator.intValue();	  BigInteger    gcd    =    numerator.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
83	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  numerator.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator.doubleValue();	  BigInteger    gcd    =    numerator.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
84	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd,  denominator);  den  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd,  denominator);  den  =  den.divide(gcd);	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
85	[BUG]  [BUGGY]  if(den!=  numerator)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  numerator)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  numerator)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
86	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(numerator,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate(numerator,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(numerator,  denominator);	  BigInteger    den    =    gcd.negate(numerator);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
87	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  numerator.negate(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  numerator.negate(gcd);	  BigInteger    den    =    gcd.negate(numerator);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
88	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.negate(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  numerator.negate(numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator.negate(numerator);	  BigInteger    gcd    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
89	[BUG]  [BUGGY]  BigInteger  gcd  =  Numerator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  Numerator.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  Numerator.negate();	  BigInteger    gcd    =    denominator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
90	[BUG]  [BUGGY]  num  =  denominator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  denominator.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  denominator.divide(gcd);	          num    =    num.divide(gcd);    num    =    numerator.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
91	[BUG]  [BUGGY]  num  =  num.divide(gcd,  numerator);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd,  numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd,  numerator);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
92	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd,  denominator,  numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd,  denominator,  numerator);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
93	[BUG]  [BUGGY]  num  =  num.divide(gcd,  den);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd,  den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd,  den);	  num    =    num.divide(gcd,    denominator);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
94	[BUG]  [BUGGY]  if(bigInteger.ZERO.compareTo(gcd)>  0)  {  [CE]  package  bigInteger  does  not  exist  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(bigInteger.ZERO.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(bigInteger.ZERO.compareTo(gcd)>  0)  {	  if(BigInteger.ZERO.compareTo(den)>    0)    {    	non-compiled	[CE]  package  bigInteger  does  not  exist	4	None	replace
95	[BUG]  [BUGGY]  if(num.compareTo(gcd)>  0)  {  if(num.compareTo(gcd)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)>  0)  {  if(num.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)>    0)    {    if(num.compareTo(gcd)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
96	[BUG]  [BUGGY]  if(num.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)>    0)    {    If(num.compareTo(gcd)>  0)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
97	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.multiply(gcd,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.multiply(gcd,  denominator);	  num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
98	[BUG]  [BUGGY]  num  =  numerator.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.multiply(gcd);	  num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
99	[BUG]  [BUGGY]  num  =  num.multiply(gcd,  numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.multiply(gcd,  numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.multiply(gcd,  numerator);	  num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
100	[BUG]  [BUGGY]  BigInteger  gcd  =  g.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.doubleValue();	  BigInteger    gcd    =    g.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
101	[BUG]  [BUGGY]  BigInteger  gcd  =  g.intValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.intValue()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.intValue()  +  1;	  BigInteger    gcd    =    g.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
102	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  if(BigInteger.ZERO.compareTo(den)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  if(BigInteger.ZERO.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)>    0)    {    if(BigInteger.ZERO.compareTo(den)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
103	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  If(BigInteger.ZERO.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  If(BigInteger.ZERO.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)>    0)    {    If(BigInteger.ZERO.compareTo(den)>  0)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
104	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(gcd.compareTo(num)  <  0)  {	  if(BigInteger.ZERO.compareTo(num)    <    0)    {    	compilable	  [FE]  AssertionError  	43	8	replace
105	[BUG]  [BUGGY]  if(gcd.compareTo(num)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(num)  <  0)  {	  if(BigInteger.ZERO.compareTo(num)    <    0)    {    	compilable	  [FE]  AssertionError  	43	8	replace
106	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  den  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  den  =  der.divide(gcd);	  num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
107	[BUG]  [BUGGY]  if(den  ==  numerator)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den  ==  numerator)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den  ==  numerator)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
108	[BUG]  [BUGGY]  if(den!=  numerator)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  numerator)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  numerator)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
109	[BUG]  [BUGGY]  num  =  numerator.divide(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd,  denominator);	  num    =    numerator.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
110	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  if(BigInteger.ONE.compareTo(den)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  if(BigInteger.ONE.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ONE.compareTo(den)>    0)    {    if(BigInteger.ONE.compareTo(den)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
111	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  If(BigInteger.ONE.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  If(BigInteger.ONE.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ONE.compareTo(den)>    0)    {    If(BigInteger.ONE.compareTo(den)>  0)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
112	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    der.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
113	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    der.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
114	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  der.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    der.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
115	[BUG]  [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    if(gcd.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
116	[BUG]  [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  If(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  If(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    If(gcd.compareTo(BigInteger.ZERO)  <  0)  {	  	non-compiled	[CE]  ';'  expected	40	None	add
117	[BUG]  [BUGGY]  gcd  =  gcd.next();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.next();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.next();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
118	[BUG]  [BUGGY]  gcd  =  gcd.denominator();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.denominator();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.denominator();	  gcd    =    gcd.numerator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
119	[BUG]  [BUGGY]  if(den.compareTo(bigInteger.ZERO)>  0)  {  [CE]  cannot  find  symbol  bigInteger  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(bigInteger.ZERO)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(bigInteger.ZERO)>  0)  {	  if(bigInteger.ZERO.compareTo(den)>    0)    {    	non-compiled	[CE]  cannot  find  symbol  bigInteger	81	None	replace
120	[BUG]  [BUGGY]  gcd  =  num.intValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.intValue()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.intValue()  +  1;	  gcd    =    num.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	12	11	add
122	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	12	11	add
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	12	11	add
124	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	12	11	add
125	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.parse(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.parse(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
126	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.Divide(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.Divide(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.Divide(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
127	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
128	[BUG]  [BUGGY]  if(num.compareTo(gcd)  <  0  ||  denominator.compareTo(gcd)  <  0)  {  [CE]  variable  denominator  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)  <  0  ||  denominator.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)  <  0  ||  denominator.compareTo(gcd)  <  0)  {	  if(den.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  variable  denominator  might  not  have  been  initialized	85	None	replace
129	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.doubleValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.doubleValue()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.doubleValue()  +  1;	  BigInteger    gcd    =    gcd.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
130	[BUG]  [BUGGY]  if(gcd.compareTo(den)>  0)  {  if(gcd.compareTo(den)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(den)>  0)  {  if(gcd.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(den)>    0)    {    if(gcd.compareTo(den)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
131	[BUG]  [BUGGY]  if(gcd.compareTo(den)>  0)  {  If(gcd.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(den)>  0)  {  If(gcd.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(den)>    0)    {    If(gcd.compareTo(den)>  0)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
132	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.longValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.longValue()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.longValue()  +  1;	  BigInteger    gcd    =    gcd.longValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
133	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate(1);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(1);	  BigInteger    den    =    gcd.negate(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
134	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  des  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  des  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  des  =  den.divide(gcd);	  num    =    num.divide(gcd);    des    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
135	[BUG]  [BUGGY]  num  =  num.doubleValue();  des  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.doubleValue();  des  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.doubleValue();  des  =  den.divide(gcd);	  num    =    num.divide(gcd);    des    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
136	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  if(BigInteger.ZERO.compareTo(den)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  if(BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)    <    0)    {    if(BigInteger.ZERO.compareTo(den)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
137	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)    <    0)    {    if(BigInteger.ZERO.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
138	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  If(BigInteger.ZERO.compareTo(den)  <  0)  {  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  If(BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)    <    0)    {    If(BigInteger.ZERO.compareTo(den)  <  0)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
139	[BUG]  [BUGGY]  num  =  numerator.negate();  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.negate();  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.negate();  denominator  =  gcd.negate();	  num    =    gcd.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
140	[BUG]  [BUGGY]  n  =  gcd.negate();  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  n  =  gcd.negate();  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	n  =  gcd.negate();  denominator  =  gcd.negate();	  num    =    gcd.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
141	[BUG]  [BUGGY]  gcd  =  g.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.doubleValue();	  gcd    =    g.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
142	[BUG]  [BUGGY]  gcd  =  g.intValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.intValue()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.intValue()  +  1;	  gcd    =    g.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
143	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate(num,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(num,  denominator);	  BigInteger    den    =    gcd.negate(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
144	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num,  numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate(num,  numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(num,  numerator);	  BigInteger    den    =    gcd.negate(num);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
145	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  if(BigInteger.ZERO.compareTo(num)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  if(BigInteger.ZERO.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)    <    0)    {    if(BigInteger.ZERO.compareTo(num)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
146	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  If(BigInteger.ZERO.compareTo(num)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  If(BigInteger.ZERO.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)    <    0)    {    If(BigInteger.ZERO.compareTo(num)  <  0)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
147	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  des  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  des  =  der.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  des  =  der.divide(gcd);	  num    =    num.divide(gcd);    des    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
148	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(den))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(den))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    des    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
149	[BUG]  [BUGGY]  if(num.equals(den))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(den))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(den))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num.divide(gcd);    des    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
150	[BUG]  [BUGGY]  gcd  =  g.getBigInteger(0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.getBigInteger(0);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.getBigInteger(0);	  gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
151	[BUG]  [BUGGY]  gcd  =  g.getInteger();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.getInteger();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.getInteger();	  gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	57	7	add
153	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	57	7	add
154	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(g  [CE]  ')'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(g  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(g	  	non-compiled	[CE]  ')'  expected	57	None	add
155	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gc  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gc  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gc	  	non-compiled	[CE]  ')'  expected	57	None	add
156	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  >  0)  {  num  =  num.divide(g  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  >  0)  {  num  =  num.divide(g  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  >  0)  {  num  =  num.divide(g	  	non-compiled	[CE]  ')'  expected	57	None	add
157	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gcd);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(gcd);	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
158	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  if(BigInteger.ZERO.compareTo(num)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  if(BigInteger.ZERO.compareTo(num)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)>    0)    {    if(BigInteger.ZERO.compareTo(num)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
159	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  If(BigInteger.ZERO.compareTo(num)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  If(BigInteger.ZERO.compareTo(num)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)>    0)    {    If(BigInteger.ZERO.compareTo(num)>  0)  {	  	non-compiled	[CE]  ';'  expected	79	None	add
160	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  der  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);  der  =  den.divide(gcd);	  num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
161	[BUG]  [BUGGY]  num  =  numerator;  der  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator;  der  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator;  der  =  den.divide(gcd);	  num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
162	[BUG]  [BUGGY]  BigInteger  gcd  =  num.intValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.intValue()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.intValue()  +  1;	  BigInteger    gcd    =    num.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
163	[BUG]  [BUGGY]  BigInteger  gcd  =  num.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.doubleValue();	  BigInteger    gcd    =    num.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
164	[BUG]  [BUGGY]  int  num  =  num.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  int  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	int  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    int    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
165	[BUG]  [BUGGY]  int  num  =  numerator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  int  num  =  numerator.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	int  num  =  numerator.divide(gcd);	          num    =    num.divide(gcd);    int    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
166	[BUG]  [BUGGY]  if(bigInteger.ZERO.compareTo(gcd)  <  0)  {  [CE]  package  bigInteger  does  not  exist  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(bigInteger.ZERO.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(bigInteger.ZERO.compareTo(gcd)  <  0)  {	  if(BigInteger.ZERO.compareTo(den)    <    0)    {    	non-compiled	[CE]  package  bigInteger  does  not  exist	39	None	replace
167	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(num)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(gcd.compareTo(num)>  0)  {	  if(BigInteger.ZERO.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	80	8	replace
168	[BUG]  [BUGGY]  if(gcd.compareTo(num)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd.compareTo(num)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(num)>  0)  {	  if(BigInteger.ZERO.compareTo(num)>    0)    {    	compilable	  [FE]  AssertionError  	80	8	replace
169	[BUG]  [BUGGY]  num  =  num.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.doubleValue();	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
170	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(0);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.getBigInteger(0);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
171	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(den);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.getBigInteger(den);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
172	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger(1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.getBigInteger(1);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.getBigInteger(1);	  BigInteger    gcd    =    num.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
173	[BUG]  [BUGGY]  num  =  gcd;  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd;  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd;  denominator  =  gcd.negate();	  num    =    numerator;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
174	[BUG]  [BUGGY]  gcd  =  gcd.getHeight();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.getHeight();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getHeight();	  gcd    =    gcd.getLength();    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
175	[BUG]  [BUGGY]  gcd  =  gcd.getLength()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.getLength()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getLength()  +  1;	  gcd    =    gcd.getLength();    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
176	[BUG]  [BUGGY]  num  =  num.multiply(gcd)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.multiply(gcd)+  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.multiply(gcd)+  1;	  num    =    num.multiply(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
177	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(denominator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate(denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(denominator);	  BigInteger    den    =    gcd.negate(numerator);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
178	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.differ(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.differ(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gen.divide(gcd);  num  =  num.differ(gcd);	          num    =    num.divide(gcd);    num    =    num.differ(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
179	[BUG]  [BUGGY]  if(den.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)>  0)  {  If(num.compareTo(gcd)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
180	[BUG]  [BUGGY]  If(num.compareTo(gcd)>  0)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  If(num.compareTo(gcd)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	If(num.compareTo(gcd)>  0)  {	  if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  ';'  expected	31	None	replace
181	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd)  <  0)  {  num  =  num.divide(	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
182	[BUG]  [BUGGY]  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
183	[BUG]  [BUGGY]  BigInteger  gcd  =  num.gcd(den);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.gcd(den);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.gcd(den);	  BigInteger    gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
184	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num!=  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num!=  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }	  num    =    num;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
185	[BUG]  [BUGGY]  if(num  ==  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num  ==  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num  ==  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }	  num    =    num;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
186	[BUG]  [BUGGY]  if(num!=  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num!=  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num!=  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
187	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  if(BigInteger.ZERO.compareTo(num)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  if(BigInteger.ZERO.compareTo(num)  >=  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)    <    0)    {    if(BigInteger.ZERO.compareTo(num)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
188	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  der  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  der  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  der  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
189	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigDenominator();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.getBigDenominator();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.getBigDenominator();	  BigInteger    gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
190	[BUG]  [BUGGY]  num  =  numerator;  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  numerator;  denominator  =  den.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator;  denominator  =  den.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
191	[BUG]  [BUGGY]  gcd  =  gcd.getDenominator();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.getDenominator();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getDenominator();	  gcd    =    gcd.getLength();    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
192	[BUG]  [BUGGY]  gcd  =  gcd.getInt();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.getInt();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getInt();	  gcd    =    gcd.getLength();    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
193	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.Multiply(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.divide(gcd);  num  =  num.Multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.divide(gcd);  num  =  num.Multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
194	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  int  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  int  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    int  num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	14	None	add
195	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  numerator(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  numerator(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  numerator(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
196	[BUG]  [BUGGY]  BigInteger  gcd  =  g.longValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.longValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.longValue();	  BigInteger    gcd    =    g.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
197	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.Divide(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  num  =  num.Divide(gcd,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  num  =  num.Divide(gcd,  denominator);	          num    =    num.divide(gcd);    num    =    num.Divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
198	[BUG]  [BUGGY]  num  =  num.divide(gcd);  des  =  der.divide(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  des  =  der.divide(gcd,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  des  =  der.divide(gcd,  denominator);	  num    =    num.divide(gcd);    des    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ONE)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(BigInteger.ONE)  <  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	8	replace
200	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ONE)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ONE)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(BigInteger.ONE)  <  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	8	replace
201	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ONE)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(BigInteger.ONE)>  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	7	replace
202	[BUG]  [BUGGY]  if(num.compareTo(BigInteger.ONE)>  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(BigInteger.ONE)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(BigInteger.ONE)>  0)  {	  if(gcd.compareTo(BigInteger.ZERO)    <    0)    {    	compilable	  [FE]  AssertionError  	41	7	replace
203	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.doubleValue()  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.doubleValue()  +  2;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.doubleValue()  +  2;	  BigInteger    gcd    =    gcd.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
204	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.negate();  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num.negate();  denominator  =  gcd.negate();  }	  num    =    num.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
205	[BUG]  [BUGGY]  if(num  ==  null)  {  num  =  num.negate();  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num  ==  null)  {  num  =  num.negate();  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num  ==  null)  {  num  =  num.negate();  denominator  =  gcd.negate();  }	  num    =    num.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
206	[BUG]  [BUGGY]  gcd  =  num.gcd(denominator);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.gcd(denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.gcd(denominator);	  gcd    =    num.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
207	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  numerator(gcd);  num  =  num.divide(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  numerator(gcd);  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  numerator(gcd);  num  =  num.divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
208	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.multiply(gcd);  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.multiply(gcd);  denominator  =  gcd.negate();	  num    =    num.divide(gcd);    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
209	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
210	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den  ==  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den  ==  null)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)  >=  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(gcd)  >=  0)  {	  if(num.compareTo(gcd)    <    =    0)    {    	compilable	  [FE]  AssertionError  	50	7	replace
212	[BUG]  [BUGGY]  if(num.compareTo(gcd)  >=  0)  {  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)  >=  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)  >=  0)  {	  if(num.compareTo(gcd)    <    =    0)    {    	compilable	  [FE]  AssertionError  	50	7	replace
213	[BUG]  [BUGGY]  BigInteger  gcd  =  g.negate(num);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.negate(num);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.negate(num);	  BigInteger    gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
214	[BUG]  [BUGGY]  BigInteger  gcd  =  g.negate()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.negate()  +  1;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.negate()  +  1;	  BigInteger    gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
215	[BUG]  [BUGGY]  num  =  num.multiide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.multiide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.multiide(gcd);	          num    =    num.divide(gcd);    num    =    num.multiide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
216	[BUG]  [BUGGY]  gcd  =  g.getBigDenominator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.getBigDenominator();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.getBigDenominator();	  gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
217	[BUG]  [BUGGY]  BigInteger  gcd  =  g.getBigDenominator();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.getBigDenominator();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.getBigDenominator();	  BigInteger    gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
218	[BUG]  [BUGGY]  BigInteger  gcd  =  g.getBigInteger(1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.getBigInteger(1);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.getBigInteger(1);	  BigInteger    gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
219	[BUG]  [BUGGY]  gcd  =  gcd.longValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.longValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.longValue();	  gcd    =    numerator.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
220	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.negate(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  numerator.negate(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator.negate(gcd);	  BigInteger    gcd    =    numerator.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
221	[BUG]  [BUGGY]  num  =  gcd.hundred;  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.hundred;  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.hundred;  denominator  =  gcd.negate();	  num    =    numerator;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
222	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(den,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate(den,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(den,  denominator);	  BigInteger    den    =    gcd.negate(den);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
223	[BUG]  [BUGGY]  gcd  =  g.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.hashCode();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.hashCode();	  gcd    =    denominator.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
224	[BUG]  [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gen.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gen.divide(gcd);  num  =  num.parse(gcd);	          num    =    num.divide(gcd);    num    =    num.parse(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
225	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
226	[BUG]  [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
227	[BUG]  [BUGGY]  if(gcd!=  null)  {  gcd  =  g.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd!=  null)  {  gcd  =  g.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd!=  null)  {  gcd  =  g.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
228	[BUG]  [BUGGY]  if(gcd!=  null)  {  gcd  =  g.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd!=  null)  {  gcd  =  g.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd!=  null)  {  gcd  =  g.negate();  }	  gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
229	[BUG]  [BUGGY]  if(gcd!=  null)  {  gcd  =  g.negate();  }  else  {  final  BigInteger  gcd  =  gcd;  gcd  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(gcd!=  null)  {  gcd  =  g.negate();  }  else  {  final  BigInteger  gcd  =  gcd;  gcd  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd!=  null)  {  gcd  =  g.negate();  }  else  {  final  BigInteger  gcd  =  gcd;  gcd  =  gcd.negate();  }	  gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
230	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  gcd.negate();  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  gcd.negate();  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  gcd.negate();  denominator  =  gcd.negate();  }	  num    =    gcd.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
231	[BUG]  [BUGGY]  if(den.compareTo(bigInteger)>  0)  {  [CE]  cannot  find  symbol  bigInteger  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(bigInteger)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(bigInteger)>  0)  {	  if(bigInteger.ZERO.compareTo(den)>    0)    {    	non-compiled	[CE]  cannot  find  symbol  bigInteger	81	None	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(den.compareTo(den)>  0)  {	  if(bigInteger.ZERO.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	81	10	replace
233	[BUG]  [BUGGY]  if(den.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(den)>  0)  {	  if(bigInteger.ZERO.compareTo(den)>    0)    {    	compilable	  [FE]  AssertionError  	81	10	replace
234	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(den!=  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    If(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	compilable	  [FE]  AssertionError  	69	7	replace
235	[BUG]  [BUGGY]  if(den!=  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den!=  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den!=  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    If(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	compilable	  [FE]  AssertionError  	69	7	replace
236	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den  ==  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(den  ==  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    If(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	compilable	  [FE]  AssertionError  	69	10	replace
237	[BUG]  [BUGGY]  if(den  ==  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den  ==  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den  ==  null)  {  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    If(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	compilable	  [FE]  AssertionError  	69	10	replace
238	[BUG]  [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(BigInteger.ONE))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    Den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
239	[BUG]  [BUGGY]  Integer  num  =  num.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  Integer  num  =  num.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	Integer  num  =  num.divide(gcd);	          num    =    num.divide(gcd);    int    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
240	[BUG]  [BUGGY]  If(BigInteger.ZERO.compareTo(den)>  0)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  If(BigInteger.ZERO.compareTo(den)>  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	If(BigInteger.ZERO.compareTo(den)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    If(BigInteger.ZERO.compareTo(gcd)>    0)    {    	non-compiled	[CE]  ';'  expected	62	None	replace
241	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate()  -  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  den  =  gcd.negate()  -  denominator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate()  -  denominator;	  BigInteger    den    =    gcd.negate()    +    denominator;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
242	[BUG]  [BUGGY]  gcd  =  num.gcd();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.gcd();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.gcd();	  gcd    =    num.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
243	[BUG]  [BUGGY]  gcd  =  num.gcd(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.gcd(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.gcd(gcd);	  gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
244	[BUG]  [BUGGY]  num  =  num.divide(gcd);  num  =  num.multiide(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  num  =  num.multiide(gcd,  denominator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  num  =  num.multiide(gcd,  denominator);	          num    =    num.divide(gcd);    num    =    num.multiide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
245	[BUG]  [BUGGY]  num  =  gcd.number();  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.number();  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.number();  denominator  =  gcd.negate();	  num    =    numerator;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
246	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  der  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  der  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  der  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    der    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
247	[BUG]  [BUGGY]  if(numerator  ==  BigInteger.ZERO)  {  num  =  gcd.negate();  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(numerator  ==  BigInteger.ZERO)  {  num  =  gcd.negate();  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(numerator  ==  BigInteger.ZERO)  {  num  =  gcd.negate();  denominator  =  gcd.negate();  }	  num    =    gcd.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
248	[BUG]  [BUGGY]  gcd  =  gcd.negate();  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.negate();  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.negate();  denominator  =  gcd.negate();	  num    =    gcd.negate();    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
249	[BUG]  [BUGGY]  gcd  =  gen.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gen.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gen.negate();	  gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
250	[BUG]  [BUGGY]  if(den  ==  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den  ==  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den  ==  null)  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    den    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
251	[BUG]  [BUGGY]  gcd  =  num.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  num.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.doubleValue();	  gcd    =    num.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
252	[BUG]  [BUGGY]  gcd  =  g.longValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.longValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.longValue();	  gcd    =    g.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
253	[BUG]  [BUGGY]  gcd  =  g.negate(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.negate(numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.negate(numerator);	  gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
254	[BUG]  [BUGGY]  gcd  =  g.negate()  +  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.negate()  +  denominator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.negate()  +  denominator;	  gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
255	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  des  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  des  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  des  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    des    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
256	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num.divide(gcd);  denominator  =  gcd.negate();  }	  num    =    num.divide(gcd);    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
257	[BUG]  [BUGGY]  num  =  gcd.divide(numerator);  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  gcd.divide(numerator);  denominator  =  gcd.negate();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.divide(numerator);  denominator  =  gcd.negate();	  num    =    num.divide(gcd);    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
258	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  if(bigInteger.ZERO.compareTo(num)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  if(bigInteger.ZERO.compareTo(num)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)    <    0)    {    if(bigInteger.ZERO.compareTo(num)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
259	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	12	11	add
260	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	12	11	add
261	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.translate(gcd);  num  =  num.translate(gcd);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.divide(gcd);  num  =  num.translate(gcd);  num  =  num.translate(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.divide(gcd);    num  =  num.translate(gcd);  num  =  num.translate(gcd);	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
262	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    des    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
263	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  des  =  der.divide(gcd);  }	  num    =    num.divide(gcd);    des    =    der.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
264	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  if(bigInteger.ZERO.compareTo(den)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  if(bigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)    <    0)    {    if(bigInteger.ZERO.compareTo(den)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
265	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.doubleValue()  *  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.doubleValue()  *  denominator;  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.doubleValue()  *  denominator;	  BigInteger    gcd    =    gcd.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
266	[BUG]  [BUGGY]  if(num.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)>  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  if(den.compareTo(gcd)    <    0)    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
267	[BUG]  [BUGGY]  if(num.equals(BigInteger.ZERO))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(BigInteger.ZERO))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(BigInteger.ZERO))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))    {    num    =    num.divide(gcd);    Den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
268	[BUG]  [BUGGY]  BigInteger  gcd  =  num.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  num.hashCode();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.hashCode();	  BigInteger    gcd    =    num.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
269	[BUG]  [BUGGY]  BigInteger  gcd  =  g.getBigInteger(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.getBigInteger(numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.getBigInteger(numerator);	  BigInteger    gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
270	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.length();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  gcd.length();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.length();	  BigInteger    gcd    =    gcd.longValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
271	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(den.compareTo(gcd)  <  =  0)  {  [BUGGY]      num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)  <  =  0)  {	  if(num.compareTo(gcd)    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
272	[BUG]  [BUGGY]  gcd  =  gcd.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  gcd.doubleValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.doubleValue();	  gcd    =    numerator.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
273	[BUG]  [BUGGY]  num  =  deserator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  deserator.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  deserator.divide(gcd);	          num    =    num.divide(gcd);    num    =    numerator.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
274	[BUG]  [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.translate(gcd);  num  =  num.multiply(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          num    =    num.divide(gcd);    num  =  num.multiply(gcd);  num  =  num.translate(gcd);  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                num        =        num.divide(gcd);        num    =    num.multiply(gcd);    num  =  num.translate(gcd);  num  =  num.multiply(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
275	[BUG]  [BUGGY]  int  num  =  num.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  int  num  =  num.multiply(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	int  num  =  num.multiply(gcd);	          num    =    num.divide(gcd);    int    num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
276	[BUG]  [BUGGY]  BigInteger  gcd  =  g.negate(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  BigInteger  gcd  =  g.negate(numerator);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.negate(numerator);	  BigInteger    gcd    =    g.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
277	[BUG]  [BUGGY]  num  =  num.divide(gcd);  denominator  =  numerator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  num  =  num.divide(gcd);  denominator  =  numerator.divide(gcd);  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  denominator  =  numerator.divide(gcd);	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
278	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  }	  num    =    num.divide(gcd);    denominator    =    den.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
279	[BUG]  [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]          if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	                if(num.equals(gcd))        {        num        =        num.divide(gcd);        den        =        den.divide(gcd);        }        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  Den	57	None	add
280	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num;  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num;  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num;  denominator  =  gcd.negate();  }	  num    =    num;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
281	[BUG]  [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd)||  denominator  ==  BigInteger.ZERO)  {  num  =  num;  denominator  =  gcd.negate();  }	  num    =    num;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
282	[BUG]  [BUGGY]  if(num.equals(gcd))  {  num  =  num;  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  if(num.equals(gcd))  {  num  =  num;  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.equals(gcd))  {  num  =  num;  denominator  =  gcd.negate();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  num    =    num;    denominator    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
283	[BUG]  [BUGGY]  gcd  =  g.getIntValue();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError      [CONTEXT]      if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);      [BUGGY]  gcd  =  g.getIntValue();  [BUGGY]      if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.getIntValue();	  gcd    =    g.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
