bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  if(BigInteger.ONE.compareTo(gcd)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  if(BigInteger.ONE.compareTo(gcd)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ONE.compareTo(gcd)>    0)    {    if(BigInteger.ONE.compareTo(gcd)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
2	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  If(BigInteger.ONE.compareTo(gcd)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ONE.compareTo(gcd)>  0)  {  If(BigInteger.ONE.compareTo(gcd)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ONE.compareTo(gcd)>    0)    {    If(BigInteger.ONE.compareTo(gcd)>  0)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(BigInteger.ZERO.compareTo(den)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	19	9	replace
4	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	19	9	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(num.compareTo(gcd)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(num.compareTo(gcd)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	19	8	replace
6	[BUG]  [BUGGY]  if(num.compareTo(gcd)>  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(num.compareTo(gcd)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	19	8	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(gcd.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(gcd.compareTo(den)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	19	9	replace
8	[BUG]  [BUGGY]  if(gcd.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(gcd.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(den)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	19	9	replace
9	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  den  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  den  =  den.divide(gcd);	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
10	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(den.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
11	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	        num    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	14	11	add
13	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  num.divide(gcd);	  	compilable	  [FE]  AssertionError  	14	11	add
14	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	        num    =    num.divide(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	2	add
15	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  num.multiply(gcd);	  	compilable	  [FE]  AssertionError  	14	2	add
16	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.parse(gcd);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.parse(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  num.parse(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
17	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  numerator.divide(gcd);  [CE]  variable  numerator  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  numerator.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  numerator.divide(gcd);	  	non-compiled	[CE]  variable  numerator  might  not  have  been  initialized	14	None	add
18	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.Divide(gcd);  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.Divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  num.Divide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
19	[BUG]  [BUGGY]  gcd  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  num.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
20	[BUG]  [BUGGY]  gcd  =  numerator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  numerator.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  numerator.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
21	[BUG]  [BUGGY]  gcd  =  denominator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  denominator.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  denominator.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
22	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  numerator.intValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator.intValue();	      BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
23	[BUG]  [BUGGY]  BigInteger  gcd  =  num.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  num.intValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.intValue();	      BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
24	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  gcd.doubleValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.doubleValue();	      BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
25	[BUG]  [BUGGY]  num  =  numerator.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  numerator.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator.divide(gcd);	      num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
26	[BUG]  [BUGGY]  num  =  num.divide(gcd,  denominator);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd,  denominator);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd,  denominator);	      num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
27	[BUG]  [BUGGY]  num  =  num.multiply(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.multiply(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.multiply(gcd);	      num    =    num.divide(gcd);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
28	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    if(BigInteger.ZERO.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
29	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  If(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  If(BigInteger.ZERO.compareTo(gcd)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    If(BigInteger.ZERO.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
30	[BUG]  [BUGGY]  if(num.compareTo(gcd)  <  0)  {  if(num.compareTo(gcd)  <  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(num.compareTo(gcd)  <  0)  {  if(num.compareTo(gcd)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)    <    0)    {    if(num.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
31	[BUG]  [BUGGY]  if(num.compareTo(gcd)  <  0)  {  If(num.compareTo(gcd)  <  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(num.compareTo(gcd)  <  0)  {  If(num.compareTo(gcd)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)    <    0)    {    If(num.compareTo(gcd)  <  0)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
32	[BUG]  [BUGGY]  if(num.compareTo(gcd)  <  0)  {  if(num.compareTo(gcd)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(num.compareTo(gcd)  <  0)  {  if(num.compareTo(gcd)  >=  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)    <    0)    {    if(num.compareTo(gcd)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
33	[BUG]  [BUGGY]  gcd  =  num.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  num.intValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
34	[BUG]  [BUGGY]  gcd  =  numerator.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  numerator.intValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  numerator.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
35	[BUG]  [BUGGY]  gcd  =  num.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  num.getBigInteger();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
36	[BUG]  [BUGGY]  BigInteger  gcd  =  num.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  num.getBigInteger();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
37	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  gcd.getBigInteger();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(BigInteger.ZERO.compareTo(den)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	5	replace
39	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(den)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(den)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	5	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(gcd.compareTo(BigInteger.ZERO)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	10	replace
41	[BUG]  [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(gcd.compareTo(BigInteger.ZERO)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(gcd.compareTo(BigInteger.ZERO)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	10	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(BigInteger.ZERO.compareTo(num)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	7	replace
43	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(num)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)  <  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	7	replace
44	[BUG]  [BUGGY]  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  des  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  des  =  den.divide(gcd);	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    des    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
45	[BUG]  [BUGGY]  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  der  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  der  =  den.divide(gcd);	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    des    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
46	[BUG]  [BUGGY]  num  =  num.divide(gcd);  des  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  des  =  der.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  des  =  der.divide(gcd);	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    des    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
47	[BUG]  [BUGGY]  gcd  =  num.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  num.hashCode();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  num.hashCode();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
48	[BUG]  [BUGGY]  gcd  =  numerator.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  numerator.hashCode();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  numerator.hashCode();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
49	[BUG]  [BUGGY]  gcd  =  denominator.hashCode();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  denominator.hashCode();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  denominator.hashCode();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
50	[BUG]  [BUGGY]  if(num.compareTo(gcd)  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(num.compareTo(gcd)  <  =  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(num.compareTo(gcd)  <  =  0)  {	  if(num.compareTo(gcd)    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  num  =  num.negate();  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.negate();  denominator  =  gcd.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.negate();  denominator  =  gcd.negate();	      if(num.equals(gcd))    {    num    =    numerator;    denominator    =    gcd.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
52	[BUG]  [BUGGY]  num  =  num;  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num;  denominator  =  gcd.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num;  denominator  =  gcd.negate();	      if(num.equals(gcd))    {    num    =    numerator;    denominator    =    gcd.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
53	[BUG]  [BUGGY]  num  =  numerator;  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  numerator;  denominator  =  gcd.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  numerator;  denominator  =  gcd.negate();	      if(num.equals(gcd))    {    num    =    numerator;    denominator    =    gcd.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
54	[BUG]  [BUGGY]  num  =  gcd.negate();  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  gcd.negate();  denominator  =  gcd.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  gcd.negate();  denominator  =  gcd.negate();	      if(num.equals(gcd))    {    num    =    numerator;    denominator    =    gcd.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
55	[BUG]  [BUGGY]  BigInteger  den  =  numerator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  den  =  numerator.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  numerator.negate();	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
56	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate()  +  denominator;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  den  =  gcd.negate()  +  denominator;  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate()  +  denominator;	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	12	7	add
58	[BUG]  [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	compilable	  [FE]  AssertionError  	12	7	add
59	[BUG]  [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  cannot  find  symbol  Den  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  Den	12	None	add
60	[BUG]  [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [CE]  cannot  find  symbol  der  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  der.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  der	12	None	add
61	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(gcd)>    0)    {    if(BigInteger.ZERO.compareTo(gcd)>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
62	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  If(BigInteger.ZERO.compareTo(gcd)>  0)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)>  0)  {  If(BigInteger.ZERO.compareTo(gcd)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(gcd)>    0)    {    If(BigInteger.ZERO.compareTo(gcd)>  0)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(BigInteger.ONE.compareTo(den)>  0)  {	  if(BigInteger.ONE.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	7	9	replace
64	[BUG]  [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ONE.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ONE.compareTo(den)>  0)  {	  if(BigInteger.ONE.compareTo(gcd)>    0)    {    	compilable	  [FE]  AssertionError  	7	9	replace
65	[BUG]  [BUGGY]  BigInteger  gcd  =  numerator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  numerator.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  numerator.negate();	      BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
66	[BUG]  [BUGGY]  BigInteger  gcd  =  num.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  num.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  num.negate();	      BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
67	[BUG]  [BUGGY]  BigInteger  gcd  =  denominator.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  denominator.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  denominator.negate();	      BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
68	[BUG]  [BUGGY]  BigInteger  gcd  =  g.negate();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  g.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.negate();	      BigInteger    gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
69	[BUG]  [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  If(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  If(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    If(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	  	non-compiled	[CE]  ';'  expected	12	None	add
70	[BUG]  [BUGGY]  BigInteger  gcd  =  gcd.longValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  gcd.longValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  gcd.longValue();	      BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
71	[BUG]  [BUGGY]  BigInteger  gcd  =  g.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  g.intValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.intValue();	      BigInteger    gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
72	[BUG]  [BUGGY]  gcd  =  gcd.getValue();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  gcd.getValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getValue();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
73	[BUG]  [BUGGY]  gcd  =  gcd.getLength();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  gcd.getLength();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.getLength();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
74	[BUG]  [BUGGY]      num  =  num.divide(gcd);  int  num  =  num.divide(gcd);  [CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  int  num  =  num.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    int  num  =  num.divide(gcd);	  	non-compiled	[CE]  variable  num  is  already  defined  in  constructor  BigFraction(BigInteger,BigInteger)	14	None	add
75	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.multiide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  num.multiide(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
76	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(numerator);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  den  =  gcd.negate(numerator);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(numerator);	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
77	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(den);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  den  =  gcd.negate(den);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(den);	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
78	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(num);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  den  =  gcd.negate(num);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(num);	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(BigInteger.ZERO.compareTo(num)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	8	replace
80	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(num)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(num)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	21	8	replace
81	[BUG]  [BUGGY]  if(bigInteger.ZERO.compareTo(den)>  0)  {  [CE]  package  bigInteger  does  not  exist  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(bigInteger.ZERO.compareTo(den)>  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(bigInteger.ZERO.compareTo(den)>  0)  {	  if(BigInteger.ZERO.compareTo(gcd)>    0)    {    	non-compiled	[CE]  package  bigInteger  does  not  exist	19	None	replace
82	[BUG]  [BUGGY]  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  denominator  =  den.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  denominator  =  den.divide(gcd);	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    des    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
83	[BUG]  [BUGGY]  BigInteger  gcd  =  g.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  gcd  =  g.getBigInteger();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  gcd  =  g.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(den.compareTo(gcd)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	if(den.compareTo(gcd)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	9	9	replace
85	[BUG]  [BUGGY]  if(den.compareTo(gcd)  <  0)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(den.compareTo(gcd)  <  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.compareTo(gcd)  <  0)  {	  if(num.compareTo(gcd)    <    0)    {    	compilable	  [FE]  AssertionError  	9	9	replace
86	[BUG]  [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(den.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(den.equals(gcd))  {  num  =  num.divide(gcd);  Den  =  den.divide(gcd);  }	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
87	[BUG]  [BUGGY]  num  =  num.divide(gcd);  denominator  =  gcd.negate();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  denominator  =  gcd.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  denominator  =  gcd.negate();	      if(num.equals(gcd))    {    num    =    numerator;    denominator    =    gcd.negate();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
88	[BUG]  [BUGGY]  gcd  =  g.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  g.intValue();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.intValue();	      gcd    =    gcd.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
89	[BUG]  [BUGGY]  gcd  =  g.negate();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  g.negate();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.negate();	      gcd    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
90	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  den  =  den.divide(gcd);  }	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
91	[BUG]  [BUGGY]  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  num  =  num.divide(gcd);  den  =  der.divide(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	num  =  num.divide(gcd);  den  =  der.divide(gcd);	      if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
92	[BUG]  [BUGGY]  gcd  =  gcd.numerator();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  gcd.numerator();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  gcd.numerator();	      gcd    =    gcd.hashCode();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
93	[BUG]  [BUGGY]  gcd  =  g.getBigInteger();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  gcd  =  g.getBigInteger();  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	gcd  =  g.getBigInteger();	      gcd    =    gcd.getBigInteger();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
94	[BUG]  [BUGGY]      num  =  num.divide(gcd);  num  =  num.differ(gcd);  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      num  =  num.divide(gcd);  num  =  num.differ(gcd);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        num    =    num.divide(gcd);    num  =  num.differ(gcd);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
95	[BUG]  [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  if(BigInteger.ZERO.compareTo(gcd)  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  if(BigInteger.ZERO.compareTo(gcd)  <  0)  {  if(BigInteger.ZERO.compareTo(gcd)  >=  0)  {  [BUGGY]    num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	if(BigInteger.ZERO.compareTo(gcd)    <    0)    {    if(BigInteger.ZERO.compareTo(gcd)  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
96	[BUG]  [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  }  [CE]  cannot  find  symbol  Den  [FE]    AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]      if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  }  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	        if(num.equals(gcd))    {    num    =    num.divide(gcd);    den    =    den.divide(gcd);    }    if(num.equals(gcd))  {  num  =  num.divide(gcd);  den  =  Den.divide(gcd);  }	  	non-compiled	[CE]  cannot  find  symbol  Den	12	None	add
97	[BUG]  [BUGGY]  BigInteger  den  =  gcd.negate(0);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionError    [CONTEXT]    if  (BigInteger.ZERO.equals(num))  {  numerator  =  BigInteger.ZERO;  denominator  =  BigInteger.ONE;  }  else  {  final  BigInteger  gcd  =  num.gcd(den);    [BUGGY]  BigInteger  den  =  gcd.negate(0);  [BUGGY]    if  (BigInteger.ONE.compareTo(gcd)  <  0)  {  num  =  num.divide(gcd);  den  =  den.divide(gcd);  }  if  (BigInteger.ZERO.compareTo(den)  >  0)  {  num  =  num.negate();  den  =  den.negate();  }  [CLASS]  BigFraction  [METHOD]  <init>  [RETURN_TYPE]  BigInteger)  BigInteger  num  BigInteger  den  [VARIABLES]  BigInteger  ONE_HUNDRED  den  denominator  gcd  num  numerator  boolean  BigFraction  FOUR_FIFTHS  MINUS_ONE  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  long  serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	BigInteger  den  =  gcd.negate(0);	      BigInteger    den    =    gcd.negate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
