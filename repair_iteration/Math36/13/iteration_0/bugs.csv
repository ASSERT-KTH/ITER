bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] if (BigInteger.ONE.compareTo(gcd) < 0) { [FE] AssertionError [CONTEXT] if (BigInteger.ZERO.equals(num)) { numerator = BigInteger.ZERO; denominator = BigInteger.ONE; } else {  final BigInteger gcd = num.gcd(den); [BUGGY] if (BigInteger.ONE.compareTo(gcd) < 0) { [BUGGY] num = num.divide(gcd); den = den.divide(gcd); }  if (BigInteger.ZERO.compareTo(den) > 0) { num = num.negate(); den = den.negate(); }  [CLASS] BigFraction [METHOD] <init> [RETURN_TYPE] BigInteger)  BigInteger num BigInteger den [VARIABLES] BigInteger ONE_HUNDRED den denominator gcd num numerator boolean BigFraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO long serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if (BigInteger.ZERO.equals(num)) { numerator = BigInteger.ZERO; denominator = BigInteger.ONE; } else {  final BigInteger gcd = num.gcd(den); [BUGGY] [BUGGY] if (BigInteger.ONE.compareTo(gcd) < 0) { num = num.divide(gcd); den = den.divide(gcd); }  if (BigInteger.ZERO.compareTo(den) > 0) { num = num.negate(); den = den.negate(); }  [CLASS] BigFraction [METHOD] <init> [RETURN_TYPE] BigInteger)  BigInteger num BigInteger den [VARIABLES] BigInteger ONE_HUNDRED den denominator gcd num numerator boolean BigFraction FOUR_FIFTHS MINUS_ONE ONE ONE_FIFTH ONE_HALF ONE_QUARTER ONE_THIRD THREE_FIFTHS THREE_QUARTERS TWO TWO_FIFTHS TWO_QUARTERS TWO_THIRDS ZERO long serialVersionUID  	projects/Math36/src/main/java/org/apache/commons/math/fraction/BigFraction.java	0.2721655269759087	132	132	2	add	
